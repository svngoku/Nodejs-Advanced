nil (do (set! *warn-on-reflection* nil) (require (quote cljsbuild.compiler) (quote cljsbuild.crossover) (quote cljsbuild.util)) (try (do (do (clojure.core/letfn [(copy-crossovers__3402__auto__ [] (cljsbuild.crossover/copy-crossovers "/Users/davidnolen/development/clojure/mori/target/cljsbuild-crossover" (quote [])))] (copy-crossovers__3402__auto__) (clojure.core/when false (cljsbuild.util/once-every-bg 1000 "copying crossovers" copy-crossovers__3402__auto__)) (clojure.core/let [crossover-macro-paths__3403__auto__ (cljsbuild.crossover/crossover-macro-paths (quote [])) builds__3404__auto__ (clojure.core/for [opts__3405__auto__ (quote ({:parsed-notify-command {:shell ()}, :id "release", :source-paths ["src/mori"], :jar false, :notify-command nil, :incremental true, :assert true, :compiler {:output-wrapper false, :output-dir "out-mori-adv", :output-to "mori.bare.js", :optimizations :advanced, :warnings true, :externs ["closure-js/externs"], :libs ["closure-js/libs"], :pretty-print false}}))] [opts__3405__auto__ (cljs.env/default-compiler-env (:compiler opts__3405__auto__))])] (clojure.core/loop [dependency-mtimes__3406__auto__ (clojure.core/repeat (clojure.core/count builds__3404__auto__) {})] (clojure.core/let [builds-mtimes__3407__auto__ (clojure.core/map clojure.core/vector builds__3404__auto__ dependency-mtimes__3406__auto__) new-dependency-mtimes__3408__auto__ (clojure.core/doall (clojure.core/for [[[build__3409__auto__ compiler-env__3410__auto__] mtimes__3411__auto__] builds-mtimes__3407__auto__] (clojure.core/binding [cljs.env/*compiler* compiler-env__3410__auto__] (cljsbuild.compiler/run-compiler (:source-paths build__3409__auto__) "/Users/davidnolen/development/clojure/mori/target/cljsbuild-crossover" crossover-macro-paths__3403__auto__ (:compiler build__3409__auto__) (:parsed-notify-command build__3409__auto__) (:incremental build__3409__auto__) (:assert build__3409__auto__) mtimes__3411__auto__ false))))] (clojure.core/when false (java.lang.Thread/sleep 100) (recur new-dependency-mtimes__3408__auto__))))))) (java.lang.System/exit 0)) (catch cljsbuild.test.TestsFailedException e__3398__auto__ (java.lang.System/exit 1)) (catch java.lang.Exception e__3398__auto__ (do (.printStackTrace e__3398__auto__) (java.lang.System/exit 1)))))