// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__10533__delegate = function (args){
return console.log.apply(console,(function (){var G__10532 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__10532) : cljs.core.into_array.call(null,G__10532));
})());
};
var G__10533 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10534__i = 0, G__10534__a = new Array(arguments.length -  0);
while (G__10534__i < G__10534__a.length) {G__10534__a[G__10534__i] = arguments[G__10534__i + 0]; ++G__10534__i;}
  args = new cljs.core.IndexedSeq(G__10534__a,0);
} 
return G__10533__delegate.call(this,args);};
G__10533.cljs$lang$maxFixedArity = 0;
G__10533.cljs$lang$applyTo = (function (arglist__10535){
var args = cljs.core.seq(arglist__10535);
return G__10533__delegate(args);
});
G__10533.cljs$core$IFn$_invoke$arity$variadic = G__10533__delegate;
return G__10533;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__10537 = x;
return goog.isString(G__10537);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__10539 = x__$1;
return goog.typeOf(G__10539);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3778__auto__ = ty;
if(cljs.core.truth_(and__3778__auto__)){
return ty.cljs$lang$type;
} else {
return and__3778__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__10541 = obj;
return goog.typeOf(G__10541);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__10543 = Symbol;
return goog.typeOf(G__10543);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4677__auto___10545 = len;
var i_10546 = (0);
while(true){
if((i_10546 < n__4677__auto___10545)){
(new_arr[i_10546] = (arr[i_10546]));

var G__10547 = (i_10546 + (1));
i_10546 = G__10547;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__10548 = (i + (1));
i = G__10548;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__10557__delegate = function (array,i,idxs){
var G__10554 = aget;
var G__10555 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__10556 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__10554,G__10555,G__10556) : cljs.core.apply.call(null,G__10554,G__10555,G__10556));
};
var G__10557 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__10558__i = 0, G__10558__a = new Array(arguments.length -  2);
while (G__10558__i < G__10558__a.length) {G__10558__a[G__10558__i] = arguments[G__10558__i + 2]; ++G__10558__i;}
  idxs = new cljs.core.IndexedSeq(G__10558__a,0);
} 
return G__10557__delegate.call(this,array,i,idxs);};
G__10557.cljs$lang$maxFixedArity = 2;
G__10557.cljs$lang$applyTo = (function (arglist__10559){
var array = cljs.core.first(arglist__10559);
arglist__10559 = cljs.core.next(arglist__10559);
var i = cljs.core.first(arglist__10559);
var idxs = cljs.core.rest(arglist__10559);
return G__10557__delegate(array,i,idxs);
});
G__10557.cljs$core$IFn$_invoke$arity$variadic = G__10557__delegate;
return G__10557;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__10560 = null;
if (arguments.length > 2) {
var G__10561__i = 0, G__10561__a = new Array(arguments.length -  2);
while (G__10561__i < G__10561__a.length) {G__10561__a[G__10561__i] = arguments[G__10561__i + 2]; ++G__10561__i;}
G__10560 = new cljs.core.IndexedSeq(G__10561__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__10560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__10570__delegate = function (array,idx,idx2,idxv){
var G__10566 = aset;
var G__10567 = (array[idx]);
var G__10568 = idx2;
var G__10569 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__10566,G__10567,G__10568,G__10569) : cljs.core.apply.call(null,G__10566,G__10567,G__10568,G__10569));
};
var G__10570 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__10571__i = 0, G__10571__a = new Array(arguments.length -  3);
while (G__10571__i < G__10571__a.length) {G__10571__a[G__10571__i] = arguments[G__10571__i + 3]; ++G__10571__i;}
  idxv = new cljs.core.IndexedSeq(G__10571__a,0);
} 
return G__10570__delegate.call(this,array,idx,idx2,idxv);};
G__10570.cljs$lang$maxFixedArity = 3;
G__10570.cljs$lang$applyTo = (function (arglist__10572){
var array = cljs.core.first(arglist__10572);
arglist__10572 = cljs.core.next(arglist__10572);
var idx = cljs.core.first(arglist__10572);
arglist__10572 = cljs.core.next(arglist__10572);
var idx2 = cljs.core.first(arglist__10572);
var idxv = cljs.core.rest(arglist__10572);
return G__10570__delegate(array,idx,idx2,idxv);
});
G__10570.cljs$core$IFn$_invoke$arity$variadic = G__10570__delegate;
return G__10570;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__10573 = null;
if (arguments.length > 3) {
var G__10574__i = 0, G__10574__a = new Array(arguments.length -  3);
while (G__10574__i < G__10574__a.length) {G__10574__a[G__10574__i] = arguments[G__10574__i + 3]; ++G__10574__i;}
G__10573 = new cljs.core.IndexedSeq(G__10574__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__10573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__10580 = (function (a,x){
a.push(x);

return a;
});
var G__10581 = [];
var G__10582 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__10580,G__10581,G__10582) : cljs.core.reduce.call(null,G__10580,G__10581,G__10582));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__10583__i = 0, G__10583__a = new Array(arguments.length -  2);
while (G__10583__i < G__10583__a.length) {G__10583__a[G__10583__i] = arguments[G__10583__i + 2]; ++G__10583__i;}
  args = new cljs.core.IndexedSeq(G__10583__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__10584){
var obj = cljs.core.first(arglist__10584);
arglist__10584 = cljs.core.next(arglist__10584);
var s = cljs.core.first(arglist__10584);
var args = cljs.core.rest(arglist__10584);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj10586 = {};
return obj10586;
})();


cljs.core.IFn = (function (){var obj10588 = {};
return obj10588;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10634 = x__4434__auto__;
return goog.typeOf(G__10634);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10636 = x__4434__auto__;
return goog.typeOf(G__10636);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10638 = x__4434__auto__;
return goog.typeOf(G__10638);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10640 = x__4434__auto__;
return goog.typeOf(G__10640);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10642 = x__4434__auto__;
return goog.typeOf(G__10642);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10644 = x__4434__auto__;
return goog.typeOf(G__10644);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10646 = x__4434__auto__;
return goog.typeOf(G__10646);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10648 = x__4434__auto__;
return goog.typeOf(G__10648);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10650 = x__4434__auto__;
return goog.typeOf(G__10650);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10652 = x__4434__auto__;
return goog.typeOf(G__10652);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10654 = x__4434__auto__;
return goog.typeOf(G__10654);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10656 = x__4434__auto__;
return goog.typeOf(G__10656);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10658 = x__4434__auto__;
return goog.typeOf(G__10658);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10660 = x__4434__auto__;
return goog.typeOf(G__10660);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10662 = x__4434__auto__;
return goog.typeOf(G__10662);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10664 = x__4434__auto__;
return goog.typeOf(G__10664);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10666 = x__4434__auto__;
return goog.typeOf(G__10666);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10668 = x__4434__auto__;
return goog.typeOf(G__10668);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10670 = x__4434__auto__;
return goog.typeOf(G__10670);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10672 = x__4434__auto__;
return goog.typeOf(G__10672);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10674 = x__4434__auto__;
return goog.typeOf(G__10674);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._invoke[(function (){var G__10676 = x__4434__auto__;
return goog.typeOf(G__10676);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._invoke["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj10678 = {};
return obj10678;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3778__auto__ = value;
if(and__3778__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3778__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4434__auto__ = (((value == null))?null:value);
return (function (){var or__3790__auto__ = (cljs.core._clone[(function (){var G__10682 = x__4434__auto__;
return goog.typeOf(G__10682);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._clone["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj10684 = {};
return obj10684;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._count[(function (){var G__10688 = x__4434__auto__;
return goog.typeOf(G__10688);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._count["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj10690 = {};
return obj10690;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._empty[(function (){var G__10694 = x__4434__auto__;
return goog.typeOf(G__10694);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._empty["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj10696 = {};
return obj10696;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._conj[(function (){var G__10700 = x__4434__auto__;
return goog.typeOf(G__10700);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._conj["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj10702 = {};
return obj10702;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._nth[(function (){var G__10708 = x__4434__auto__;
return goog.typeOf(G__10708);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._nth["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._nth[(function (){var G__10710 = x__4434__auto__;
return goog.typeOf(G__10710);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._nth["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj10712 = {};
return obj10712;
})();


cljs.core.ISeq = (function (){var obj10714 = {};
return obj10714;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._first[(function (){var G__10718 = x__4434__auto__;
return goog.typeOf(G__10718);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._first["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._rest[(function (){var G__10722 = x__4434__auto__;
return goog.typeOf(G__10722);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._rest["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj10724 = {};
return obj10724;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._next[(function (){var G__10728 = x__4434__auto__;
return goog.typeOf(G__10728);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._next["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj10730 = {};
return obj10730;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._lookup[(function (){var G__10736 = x__4434__auto__;
return goog.typeOf(G__10736);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._lookup["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._lookup[(function (){var G__10738 = x__4434__auto__;
return goog.typeOf(G__10738);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._lookup["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj10740 = {};
return obj10740;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__10744 = x__4434__auto__;
return goog.typeOf(G__10744);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._assoc[(function (){var G__10748 = x__4434__auto__;
return goog.typeOf(G__10748);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._assoc["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj10750 = {};
return obj10750;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._dissoc[(function (){var G__10754 = x__4434__auto__;
return goog.typeOf(G__10754);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj10756 = {};
return obj10756;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._key[(function (){var G__10760 = x__4434__auto__;
return goog.typeOf(G__10760);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._key["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._val[(function (){var G__10764 = x__4434__auto__;
return goog.typeOf(G__10764);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._val["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj10766 = {};
return obj10766;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._disjoin[(function (){var G__10770 = x__4434__auto__;
return goog.typeOf(G__10770);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj10772 = {};
return obj10772;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._peek[(function (){var G__10776 = x__4434__auto__;
return goog.typeOf(G__10776);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._peek["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._pop[(function (){var G__10780 = x__4434__auto__;
return goog.typeOf(G__10780);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._pop["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj10782 = {};
return obj10782;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._assoc_n[(function (){var G__10786 = x__4434__auto__;
return goog.typeOf(G__10786);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj10788 = {};
return obj10788;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._deref[(function (){var G__10792 = x__4434__auto__;
return goog.typeOf(G__10792);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._deref["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj10794 = {};
return obj10794;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._deref_with_timeout[(function (){var G__10798 = x__4434__auto__;
return goog.typeOf(G__10798);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj10800 = {};
return obj10800;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._meta[(function (){var G__10804 = x__4434__auto__;
return goog.typeOf(G__10804);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._meta["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj10806 = {};
return obj10806;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._with_meta[(function (){var G__10810 = x__4434__auto__;
return goog.typeOf(G__10810);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj10812 = {};
return obj10812;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._reduce[(function (){var G__10818 = x__4434__auto__;
return goog.typeOf(G__10818);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._reduce["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._reduce[(function (){var G__10820 = x__4434__auto__;
return goog.typeOf(G__10820);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._reduce["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj10822 = {};
return obj10822;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._kv_reduce[(function (){var G__10826 = x__4434__auto__;
return goog.typeOf(G__10826);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj10828 = {};
return obj10828;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._equiv[(function (){var G__10832 = x__4434__auto__;
return goog.typeOf(G__10832);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._equiv["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj10834 = {};
return obj10834;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._hash[(function (){var G__10838 = x__4434__auto__;
return goog.typeOf(G__10838);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._hash["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj10840 = {};
return obj10840;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._seq[(function (){var G__10844 = x__4434__auto__;
return goog.typeOf(G__10844);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._seq["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj10846 = {};
return obj10846;
})();


cljs.core.IList = (function (){var obj10848 = {};
return obj10848;
})();


cljs.core.IRecord = (function (){var obj10850 = {};
return obj10850;
})();


cljs.core.IReversible = (function (){var obj10852 = {};
return obj10852;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._rseq[(function (){var G__10856 = x__4434__auto__;
return goog.typeOf(G__10856);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._rseq["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj10858 = {};
return obj10858;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._sorted_seq[(function (){var G__10862 = x__4434__auto__;
return goog.typeOf(G__10862);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._sorted_seq_from[(function (){var G__10866 = x__4434__auto__;
return goog.typeOf(G__10866);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._entry_key[(function (){var G__10870 = x__4434__auto__;
return goog.typeOf(G__10870);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._comparator[(function (){var G__10874 = x__4434__auto__;
return goog.typeOf(G__10874);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._comparator["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj10876 = {};
return obj10876;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3778__auto__ = writer;
if(and__3778__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3778__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4434__auto__ = (((writer == null))?null:writer);
return (function (){var or__3790__auto__ = (cljs.core._write[(function (){var G__10880 = x__4434__auto__;
return goog.typeOf(G__10880);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._write["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3778__auto__ = writer;
if(and__3778__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3778__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4434__auto__ = (((writer == null))?null:writer);
return (function (){var or__3790__auto__ = (cljs.core._flush[(function (){var G__10884 = x__4434__auto__;
return goog.typeOf(G__10884);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._flush["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj10886 = {};
return obj10886;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._pr_writer[(function (){var G__10890 = x__4434__auto__;
return goog.typeOf(G__10890);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj10892 = {};
return obj10892;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3778__auto__ = d;
if(and__3778__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3778__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4434__auto__ = (((d == null))?null:d);
return (function (){var or__3790__auto__ = (cljs.core._realized_QMARK_[(function (){var G__10896 = x__4434__auto__;
return goog.typeOf(G__10896);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj10898 = {};
return obj10898;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._notify_watches[(function (){var G__10902 = x__4434__auto__;
return goog.typeOf(G__10902);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._add_watch[(function (){var G__10906 = x__4434__auto__;
return goog.typeOf(G__10906);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3778__auto__ = this$;
if(and__3778__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3778__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4434__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3790__auto__ = (cljs.core._remove_watch[(function (){var G__10910 = x__4434__auto__;
return goog.typeOf(G__10910);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj10912 = {};
return obj10912;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._as_transient[(function (){var G__10916 = x__4434__auto__;
return goog.typeOf(G__10916);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj10918 = {};
return obj10918;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3778__auto__ = tcoll;
if(and__3778__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3778__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4434__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3790__auto__ = (cljs.core._conj_BANG_[(function (){var G__10922 = x__4434__auto__;
return goog.typeOf(G__10922);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3778__auto__ = tcoll;
if(and__3778__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3778__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4434__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3790__auto__ = (cljs.core._persistent_BANG_[(function (){var G__10926 = x__4434__auto__;
return goog.typeOf(G__10926);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj10928 = {};
return obj10928;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3778__auto__ = tcoll;
if(and__3778__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3778__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4434__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3790__auto__ = (cljs.core._assoc_BANG_[(function (){var G__10932 = x__4434__auto__;
return goog.typeOf(G__10932);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj10934 = {};
return obj10934;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3778__auto__ = tcoll;
if(and__3778__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3778__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4434__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3790__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__10938 = x__4434__auto__;
return goog.typeOf(G__10938);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj10940 = {};
return obj10940;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3778__auto__ = tcoll;
if(and__3778__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3778__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4434__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3790__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__10944 = x__4434__auto__;
return goog.typeOf(G__10944);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3778__auto__ = tcoll;
if(and__3778__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3778__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4434__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3790__auto__ = (cljs.core._pop_BANG_[(function (){var G__10948 = x__4434__auto__;
return goog.typeOf(G__10948);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj10950 = {};
return obj10950;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3778__auto__ = tcoll;
if(and__3778__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3778__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4434__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3790__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__10954 = x__4434__auto__;
return goog.typeOf(G__10954);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj10956 = {};
return obj10956;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3778__auto__ = x;
if(and__3778__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3778__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4434__auto__ = (((x == null))?null:x);
return (function (){var or__3790__auto__ = (cljs.core._compare[(function (){var G__10960 = x__4434__auto__;
return goog.typeOf(G__10960);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._compare["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj10962 = {};
return obj10962;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._drop_first[(function (){var G__10966 = x__4434__auto__;
return goog.typeOf(G__10966);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj10968 = {};
return obj10968;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._chunked_first[(function (){var G__10972 = x__4434__auto__;
return goog.typeOf(G__10972);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._chunked_rest[(function (){var G__10976 = x__4434__auto__;
return goog.typeOf(G__10976);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj10978 = {};
return obj10978;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._chunked_next[(function (){var G__10982 = x__4434__auto__;
return goog.typeOf(G__10982);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj10984 = {};
return obj10984;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3778__auto__ = x;
if(and__3778__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3778__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4434__auto__ = (((x == null))?null:x);
return (function (){var or__3790__auto__ = (cljs.core._name[(function (){var G__10988 = x__4434__auto__;
return goog.typeOf(G__10988);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._name["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3778__auto__ = x;
if(and__3778__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3778__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4434__auto__ = (((x == null))?null:x);
return (function (){var or__3790__auto__ = (cljs.core._namespace[(function (){var G__10992 = x__4434__auto__;
return goog.typeOf(G__10992);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._namespace["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj10994 = {};
return obj10994;
})();


cljs.core.IReset = (function (){var obj10996 = {};
return obj10996;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._reset_BANG_[(function (){var G__11000 = x__4434__auto__;
return goog.typeOf(G__11000);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11002 = {};
return obj11002;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._swap_BANG_[(function (){var G__11012 = x__4434__auto__;
return goog.typeOf(G__11012);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._swap_BANG_[(function (){var G__11014 = x__4434__auto__;
return goog.typeOf(G__11014);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._swap_BANG_[(function (){var G__11016 = x__4434__auto__;
return goog.typeOf(G__11016);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._swap_BANG_[(function (){var G__11018 = x__4434__auto__;
return goog.typeOf(G__11018);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11020 = {};
return obj11020;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3778__auto__ = o;
if(and__3778__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3778__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4434__auto__ = (((o == null))?null:o);
return (function (){var or__3790__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11024 = x__4434__auto__;
return goog.typeOf(G__11024);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11026 = {};
return obj11026;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3778__auto__ = coll;
if(and__3778__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3778__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4434__auto__ = (((coll == null))?null:coll);
return (function (){var or__3790__auto__ = (cljs.core._iterator[(function (){var G__11030 = x__4434__auto__;
return goog.typeOf(G__11030);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._iterator["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11033 = (4294967295);
var G__11034 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11033,G__11034) : Math.imul.call(null,G__11033,G__11034));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11037 = a;
var G__11038 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11037,G__11038) : Math.imul.call(null,G__11037,G__11038));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11039 = (i + (2));
var G__11040 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11039;
h1 = G__11040;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11042 = {};
return obj11042;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11043 = (i + (1));
var G__11044 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11043;
hash = G__11044;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11048 = {};
return obj11048;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11051 = o;
if(G__11051){
var bit__4464__auto__ = (G__11051.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4464__auto__) || (G__11051.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11052 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11052) : Math.floor.call(null,G__11052));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3778__auto__ = cljs.core.not(a.ns);
if(and__3778__auto__){
return b.ns;
} else {
return and__3778__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11059 = a.ns;
var G__11060 = b.ns;
return goog.array.defaultCompare(G__11059,G__11060);
})();
if(((0) === nsc)){
var G__11061 = a.name;
var G__11062 = b.name;
return goog.array.defaultCompare(G__11061,G__11062);
} else {
return nsc;
}
}
} else {
var G__11063 = a.name;
var G__11064 = b.name;
return goog.array.defaultCompare(G__11063,G__11064);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4211__auto__ = self__._hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11066 = null;
var G__11066__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11066__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11066 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11066__2.call(this,self__,coll);
case 3:
return G__11066__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11066.cljs$core$IFn$_invoke$arity$2 = G__11066__2;
G__11066.cljs$core$IFn$_invoke$arity$3 = G__11066__3;
return G__11066;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11065){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11065)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11070 = x;
if(G__11070){
var bit__4471__auto__ = null;
if(cljs.core.truth_((function (){var or__3790__auto__ = bit__4471__auto__;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return G__11070.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11070.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11070);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11070);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11072 = value;
if(G__11072){
var bit__4471__auto__ = (G__11072.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4471__auto__) || (G__11072.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11072.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11072);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11072);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11074 = coll;
if(G__11074){
var bit__4464__auto__ = (G__11074.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4464__auto__) || (G__11074.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11076 = coll;
if(G__11076){
var bit__4464__auto__ = (G__11076.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4464__auto__) || (G__11076.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11078 = coll;
if(G__11078){
var bit__4464__auto__ = (G__11078.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4464__auto__) || (G__11078.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11080 = coll;
if(G__11080){
var bit__4464__auto__ = (G__11080.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4464__auto__) || (G__11080.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11085__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11086 = y;
var G__11087 = cljs.core.first(more);
var G__11088 = cljs.core.next(more);
x = G__11086;
y = G__11087;
more = G__11088;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11085 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11089__i = 0, G__11089__a = new Array(arguments.length -  2);
while (G__11089__i < G__11089__a.length) {G__11089__a[G__11089__i] = arguments[G__11089__i + 2]; ++G__11089__i;}
  more = new cljs.core.IndexedSeq(G__11089__a,0);
} 
return G__11085__delegate.call(this,x,y,more);};
G__11085.cljs$lang$maxFixedArity = 2;
G__11085.cljs$lang$applyTo = (function (arglist__11090){
var x = cljs.core.first(arglist__11090);
arglist__11090 = cljs.core.next(arglist__11090);
var y = cljs.core.first(arglist__11090);
var more = cljs.core.rest(arglist__11090);
return G__11085__delegate(x,y,more);
});
G__11085.cljs$core$IFn$_invoke$arity$variadic = G__11085__delegate;
return G__11085;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11091 = null;
if (arguments.length > 2) {
var G__11092__i = 0, G__11092__a = new Array(arguments.length -  2);
while (G__11092__i < G__11092__a.length) {G__11092__a[G__11092__i] = arguments[G__11092__i + 2]; ++G__11092__i;}
G__11091 = new cljs.core.IndexedSeq(G__11092__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11093 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11093) : cljs.core.es6_iterator_seq.call(null,G__11093));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11094 = (n + (1));
var G__11095 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11096 = cljs.core.next(coll__$1);
n = G__11094;
hash_code = G__11095;
coll__$1 = G__11096;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11097 = (n + (1));
var G__11098 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11099 = cljs.core.next(coll__$1);
n = G__11097;
hash_code = G__11098;
coll__$1 = G__11099;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11100 = o;
return goog.getUid(G__11100);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11102 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11102) : cljs.core.deref.call(null,G__11102));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11109 = val;
var G__11110 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11109,G__11110) : f.call(null,G__11109,G__11110));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11115 = nval;
var G__11116 = (n + (1));
val = G__11115;
n = G__11116;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11111 = val__$1;
var G__11112 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11111,G__11112) : f.call(null,G__11111,G__11112));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11117 = nval;
var G__11118 = (n + (1));
val__$1 = G__11117;
n = G__11118;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11113 = val__$1;
var G__11114 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11113,G__11114) : f.call(null,G__11113,G__11114));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11119 = nval;
var G__11120 = (n + (1));
val__$1 = G__11119;
n = G__11120;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11127 = val;
var G__11128 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11127,G__11128) : f.call(null,G__11127,G__11128));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11133 = nval;
var G__11134 = (n + (1));
val = G__11133;
n = G__11134;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11129 = val__$1;
var G__11130 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11129,G__11130) : f.call(null,G__11129,G__11130));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11135 = nval;
var G__11136 = (n + (1));
val__$1 = G__11135;
n = G__11136;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11131 = val__$1;
var G__11132 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11131,G__11132) : f.call(null,G__11131,G__11132));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11137 = nval;
var G__11138 = (n + (1));
val__$1 = G__11137;
n = G__11138;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__11140 = x;
if(G__11140){
var bit__4471__auto__ = (G__11140.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4471__auto__) || (G__11140.cljs$core$ICounted$)){
return true;
} else {
if((!G__11140.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11140);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__11140);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__11142 = x;
if(G__11142){
var bit__4471__auto__ = (G__11142.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4471__auto__) || (G__11142.cljs$core$IIndexed$)){
return true;
} else {
if((!G__11142.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11142);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__11142);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11143 = coll__$1;
var G__11144 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11143,G__11144) : cljs.core.equiv_sequential.call(null,G__11143,G__11144));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11145 = o;
var G__11146 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11145,G__11146) : cljs.core.cons.call(null,G__11145,G__11146));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__11149 = coll__$1;
var G__11150 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__11149,G__11150) : cljs.core.equiv_sequential.call(null,G__11149,G__11150));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__11151 = cljs.core.List.EMPTY;
var G__11152 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__11151,G__11152) : cljs.core.with_meta.call(null,G__11151,G__11152));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__11153 = f;
var G__11154 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__11153,G__11154) : cljs.core.seq_reduce.call(null,G__11153,G__11154));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__11155 = f;
var G__11156 = start;
var G__11157 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__11155,G__11156,G__11157) : cljs.core.seq_reduce.call(null,G__11155,G__11156,G__11157));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__11158 = o;
var G__11159 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__11158,G__11159) : cljs.core.cons.call(null,G__11158,G__11159));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__11160 = sn;
s = G__11160;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__11165__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__11166 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__11167 = cljs.core.first(xs);
var G__11168 = cljs.core.next(xs);
coll = G__11166;
x = G__11167;
xs = G__11168;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__11165 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__11169__i = 0, G__11169__a = new Array(arguments.length -  2);
while (G__11169__i < G__11169__a.length) {G__11169__a[G__11169__i] = arguments[G__11169__i + 2]; ++G__11169__i;}
  xs = new cljs.core.IndexedSeq(G__11169__a,0);
} 
return G__11165__delegate.call(this,coll,x,xs);};
G__11165.cljs$lang$maxFixedArity = 2;
G__11165.cljs$lang$applyTo = (function (arglist__11170){
var coll = cljs.core.first(arglist__11170);
arglist__11170 = cljs.core.next(arglist__11170);
var x = cljs.core.first(arglist__11170);
var xs = cljs.core.rest(arglist__11170);
return G__11165__delegate(coll,x,xs);
});
G__11165.cljs$core$IFn$_invoke$arity$variadic = G__11165__delegate;
return G__11165;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__11171 = null;
if (arguments.length > 2) {
var G__11172__i = 0, G__11172__a = new Array(arguments.length -  2);
while (G__11172__i < G__11172__a.length) {G__11172__a[G__11172__i] = arguments[G__11172__i + 2]; ++G__11172__i;}
G__11171 = new cljs.core.IndexedSeq(G__11172__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__11171);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__11173 = cljs.core.next(s);
var G__11174 = (acc + (1));
s = G__11173;
acc = G__11174;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__11176 = coll;
if(G__11176){
var bit__4464__auto__ = (G__11176.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4464__auto__) || (G__11176.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__11177 = cljs.core.next(coll);
var G__11178 = (n - (1));
coll = G__11177;
n = G__11178;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__11179 = cljs.core.next(coll);
var G__11180 = (n - (1));
var G__11181 = not_found;
coll = G__11179;
n = G__11180;
not_found = G__11181;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__11186 = coll;
if(G__11186){
var bit__4464__auto__ = (G__11186.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4464__auto__) || (G__11186.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11187 = coll;
if(G__11187){
var bit__4471__auto__ = (G__11187.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4471__auto__) || (G__11187.cljs$core$ISeq$)){
return true;
} else {
if((!G__11187.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11187);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11187);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__11188 = coll;
if(G__11188){
var bit__4464__auto__ = (G__11188.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4464__auto__) || (G__11188.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__11189 = coll;
if(G__11189){
var bit__4471__auto__ = (G__11189.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4471__auto__) || (G__11189.cljs$core$ISeq$)){
return true;
} else {
if((!G__11189.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11189);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11189);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__11190 = (n__$1 - (1));
var G__11191 = cljs.core.rest(xs);
n__$1 = G__11190;
xs = G__11191;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__11194 = o;
if(G__11194){
var bit__4464__auto__ = (G__11194.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4464__auto__) || (G__11194.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__11195 = o;
if(G__11195){
var bit__4464__auto__ = (G__11195.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4464__auto__) || (G__11195.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__11199__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__11200 = ret;
var G__11201 = cljs.core.first(kvs);
var G__11202 = cljs.core.second(kvs);
var G__11203 = cljs.core.nnext(kvs);
coll = G__11200;
k = G__11201;
v = G__11202;
kvs = G__11203;
continue;
} else {
return ret;
}
break;
}
};
var G__11199 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11204__i = 0, G__11204__a = new Array(arguments.length -  3);
while (G__11204__i < G__11204__a.length) {G__11204__a[G__11204__i] = arguments[G__11204__i + 3]; ++G__11204__i;}
  kvs = new cljs.core.IndexedSeq(G__11204__a,0);
} 
return G__11199__delegate.call(this,coll,k,v,kvs);};
G__11199.cljs$lang$maxFixedArity = 3;
G__11199.cljs$lang$applyTo = (function (arglist__11205){
var coll = cljs.core.first(arglist__11205);
arglist__11205 = cljs.core.next(arglist__11205);
var k = cljs.core.first(arglist__11205);
arglist__11205 = cljs.core.next(arglist__11205);
var v = cljs.core.first(arglist__11205);
var kvs = cljs.core.rest(arglist__11205);
return G__11199__delegate(coll,k,v,kvs);
});
G__11199.cljs$core$IFn$_invoke$arity$variadic = G__11199__delegate;
return G__11199;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__11206 = null;
if (arguments.length > 3) {
var G__11207__i = 0, G__11207__a = new Array(arguments.length -  3);
while (G__11207__i < G__11207__a.length) {G__11207__a[G__11207__i] = arguments[G__11207__i + 3]; ++G__11207__i;}
G__11206 = new cljs.core.IndexedSeq(G__11207__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__11206);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__11210__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11211 = ret;
var G__11212 = cljs.core.first(ks);
var G__11213 = cljs.core.next(ks);
coll = G__11211;
k = G__11212;
ks = G__11213;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11210 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11214__i = 0, G__11214__a = new Array(arguments.length -  2);
while (G__11214__i < G__11214__a.length) {G__11214__a[G__11214__i] = arguments[G__11214__i + 2]; ++G__11214__i;}
  ks = new cljs.core.IndexedSeq(G__11214__a,0);
} 
return G__11210__delegate.call(this,coll,k,ks);};
G__11210.cljs$lang$maxFixedArity = 2;
G__11210.cljs$lang$applyTo = (function (arglist__11215){
var coll = cljs.core.first(arglist__11215);
arglist__11215 = cljs.core.next(arglist__11215);
var k = cljs.core.first(arglist__11215);
var ks = cljs.core.rest(arglist__11215);
return G__11210__delegate(coll,k,ks);
});
G__11210.cljs$core$IFn$_invoke$arity$variadic = G__11210__delegate;
return G__11210;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__11216 = null;
if (arguments.length > 2) {
var G__11217__i = 0, G__11217__a = new Array(arguments.length -  2);
while (G__11217__i < G__11217__a.length) {G__11217__a[G__11217__i] = arguments[G__11217__i + 2]; ++G__11217__i;}
G__11216 = new cljs.core.IndexedSeq(G__11217__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3790__auto__ = (function (){var G__11222 = f;
return goog.isFunction(G__11222);
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var G__11223 = f;
if(G__11223){
var bit__4471__auto__ = null;
if(cljs.core.truth_((function (){var or__3790__auto____$1 = bit__4471__auto__;
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
return G__11223.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__11223.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11223);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__11223);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__11689 = null;
var G__11689__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__11689__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11225 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11225) : self__.afn.call(null,G__11225));
});
var G__11689__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11226 = a;
var G__11227 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11226,G__11227) : self__.afn.call(null,G__11226,G__11227));
});
var G__11689__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11228 = a;
var G__11229 = b;
var G__11230 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11228,G__11229,G__11230) : self__.afn.call(null,G__11228,G__11229,G__11230));
});
var G__11689__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11231 = a;
var G__11232 = b;
var G__11233 = c;
var G__11234 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11231,G__11232,G__11233,G__11234) : self__.afn.call(null,G__11231,G__11232,G__11233,G__11234));
});
var G__11689__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11235 = a;
var G__11236 = b;
var G__11237 = c;
var G__11238 = d;
var G__11239 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11235,G__11236,G__11237,G__11238,G__11239) : self__.afn.call(null,G__11235,G__11236,G__11237,G__11238,G__11239));
});
var G__11689__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11240 = a;
var G__11241 = b;
var G__11242 = c;
var G__11243 = d;
var G__11244 = e;
var G__11245 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11240,G__11241,G__11242,G__11243,G__11244,G__11245) : self__.afn.call(null,G__11240,G__11241,G__11242,G__11243,G__11244,G__11245));
});
var G__11689__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11246 = a;
var G__11247 = b;
var G__11248 = c;
var G__11249 = d;
var G__11250 = e;
var G__11251 = f;
var G__11252 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252) : self__.afn.call(null,G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252));
});
var G__11689__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11253 = a;
var G__11254 = b;
var G__11255 = c;
var G__11256 = d;
var G__11257 = e;
var G__11258 = f;
var G__11259 = g;
var G__11260 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260) : self__.afn.call(null,G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260));
});
var G__11689__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11261 = a;
var G__11262 = b;
var G__11263 = c;
var G__11264 = d;
var G__11265 = e;
var G__11266 = f;
var G__11267 = g;
var G__11268 = h;
var G__11269 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11261,G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269) : self__.afn.call(null,G__11261,G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269));
});
var G__11689__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11270 = a;
var G__11271 = b;
var G__11272 = c;
var G__11273 = d;
var G__11274 = e;
var G__11275 = f;
var G__11276 = g;
var G__11277 = h;
var G__11278 = i;
var G__11279 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11270,G__11271,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279) : self__.afn.call(null,G__11270,G__11271,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279));
});
var G__11689__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11280 = a;
var G__11281 = b;
var G__11282 = c;
var G__11283 = d;
var G__11284 = e;
var G__11285 = f;
var G__11286 = g;
var G__11287 = h;
var G__11288 = i;
var G__11289 = j;
var G__11290 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288,G__11289,G__11290) : self__.afn.call(null,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288,G__11289,G__11290));
});
var G__11689__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11291 = a;
var G__11292 = b;
var G__11293 = c;
var G__11294 = d;
var G__11295 = e;
var G__11296 = f;
var G__11297 = g;
var G__11298 = h;
var G__11299 = i;
var G__11300 = j;
var G__11301 = k;
var G__11302 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302) : self__.afn.call(null,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302));
});
var G__11689__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11303 = a;
var G__11304 = b;
var G__11305 = c;
var G__11306 = d;
var G__11307 = e;
var G__11308 = f;
var G__11309 = g;
var G__11310 = h;
var G__11311 = i;
var G__11312 = j;
var G__11313 = k;
var G__11314 = l;
var G__11315 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315) : self__.afn.call(null,G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315));
});
var G__11689__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11316 = a;
var G__11317 = b;
var G__11318 = c;
var G__11319 = d;
var G__11320 = e;
var G__11321 = f;
var G__11322 = g;
var G__11323 = h;
var G__11324 = i;
var G__11325 = j;
var G__11326 = k;
var G__11327 = l;
var G__11328 = m;
var G__11329 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329) : self__.afn.call(null,G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329));
});
var G__11689__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11330 = a;
var G__11331 = b;
var G__11332 = c;
var G__11333 = d;
var G__11334 = e;
var G__11335 = f;
var G__11336 = g;
var G__11337 = h;
var G__11338 = i;
var G__11339 = j;
var G__11340 = k;
var G__11341 = l;
var G__11342 = m;
var G__11343 = n;
var G__11344 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11330,G__11331,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344) : self__.afn.call(null,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344));
});
var G__11689__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11345 = a;
var G__11346 = b;
var G__11347 = c;
var G__11348 = d;
var G__11349 = e;
var G__11350 = f;
var G__11351 = g;
var G__11352 = h;
var G__11353 = i;
var G__11354 = j;
var G__11355 = k;
var G__11356 = l;
var G__11357 = m;
var G__11358 = n;
var G__11359 = o;
var G__11360 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360) : self__.afn.call(null,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360));
});
var G__11689__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11361 = a;
var G__11362 = b;
var G__11363 = c;
var G__11364 = d;
var G__11365 = e;
var G__11366 = f;
var G__11367 = g;
var G__11368 = h;
var G__11369 = i;
var G__11370 = j;
var G__11371 = k;
var G__11372 = l;
var G__11373 = m;
var G__11374 = n;
var G__11375 = o;
var G__11376 = p;
var G__11377 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377) : self__.afn.call(null,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377));
});
var G__11689__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11378 = a;
var G__11379 = b;
var G__11380 = c;
var G__11381 = d;
var G__11382 = e;
var G__11383 = f;
var G__11384 = g;
var G__11385 = h;
var G__11386 = i;
var G__11387 = j;
var G__11388 = k;
var G__11389 = l;
var G__11390 = m;
var G__11391 = n;
var G__11392 = o;
var G__11393 = p;
var G__11394 = q;
var G__11395 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395) : self__.afn.call(null,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395));
});
var G__11689__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11396 = a;
var G__11397 = b;
var G__11398 = c;
var G__11399 = d;
var G__11400 = e;
var G__11401 = f;
var G__11402 = g;
var G__11403 = h;
var G__11404 = i;
var G__11405 = j;
var G__11406 = k;
var G__11407 = l;
var G__11408 = m;
var G__11409 = n;
var G__11410 = o;
var G__11411 = p;
var G__11412 = q;
var G__11413 = r;
var G__11414 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414) : self__.afn.call(null,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414));
});
var G__11689__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11415 = a;
var G__11416 = b;
var G__11417 = c;
var G__11418 = d;
var G__11419 = e;
var G__11420 = f;
var G__11421 = g;
var G__11422 = h;
var G__11423 = i;
var G__11424 = j;
var G__11425 = k;
var G__11426 = l;
var G__11427 = m;
var G__11428 = n;
var G__11429 = o;
var G__11430 = p;
var G__11431 = q;
var G__11432 = r;
var G__11433 = s;
var G__11434 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434) : self__.afn.call(null,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434));
});
var G__11689__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11435 = self__.afn;
var G__11436 = a;
var G__11437 = b;
var G__11438 = c;
var G__11439 = d;
var G__11440 = e;
var G__11441 = f;
var G__11442 = g;
var G__11443 = h;
var G__11444 = i;
var G__11445 = j;
var G__11446 = k;
var G__11447 = l;
var G__11448 = m;
var G__11449 = n;
var G__11450 = o;
var G__11451 = p;
var G__11452 = q;
var G__11453 = r;
var G__11454 = s;
var G__11455 = t;
var G__11456 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456) : cljs.core.apply.call(null,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456));
});
G__11689 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11689__1.call(this,self__);
case 2:
return G__11689__2.call(this,self__,a);
case 3:
return G__11689__3.call(this,self__,a,b);
case 4:
return G__11689__4.call(this,self__,a,b,c);
case 5:
return G__11689__5.call(this,self__,a,b,c,d);
case 6:
return G__11689__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11689__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11689__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11689__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11689__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11689__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11689__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11689__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11689__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11689__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11689__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11689__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11689__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11689__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11689__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11689__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11689__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11689.cljs$core$IFn$_invoke$arity$1 = G__11689__1;
G__11689.cljs$core$IFn$_invoke$arity$2 = G__11689__2;
G__11689.cljs$core$IFn$_invoke$arity$3 = G__11689__3;
G__11689.cljs$core$IFn$_invoke$arity$4 = G__11689__4;
G__11689.cljs$core$IFn$_invoke$arity$5 = G__11689__5;
G__11689.cljs$core$IFn$_invoke$arity$6 = G__11689__6;
G__11689.cljs$core$IFn$_invoke$arity$7 = G__11689__7;
G__11689.cljs$core$IFn$_invoke$arity$8 = G__11689__8;
G__11689.cljs$core$IFn$_invoke$arity$9 = G__11689__9;
G__11689.cljs$core$IFn$_invoke$arity$10 = G__11689__10;
G__11689.cljs$core$IFn$_invoke$arity$11 = G__11689__11;
G__11689.cljs$core$IFn$_invoke$arity$12 = G__11689__12;
G__11689.cljs$core$IFn$_invoke$arity$13 = G__11689__13;
G__11689.cljs$core$IFn$_invoke$arity$14 = G__11689__14;
G__11689.cljs$core$IFn$_invoke$arity$15 = G__11689__15;
G__11689.cljs$core$IFn$_invoke$arity$16 = G__11689__16;
G__11689.cljs$core$IFn$_invoke$arity$17 = G__11689__17;
G__11689.cljs$core$IFn$_invoke$arity$18 = G__11689__18;
G__11689.cljs$core$IFn$_invoke$arity$19 = G__11689__19;
G__11689.cljs$core$IFn$_invoke$arity$20 = G__11689__20;
G__11689.cljs$core$IFn$_invoke$arity$21 = G__11689__21;
G__11689.cljs$core$IFn$_invoke$arity$22 = G__11689__22;
return G__11689;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args11224){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11224)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__11457 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11457) : self__.afn.call(null,G__11457));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__11458 = a;
var G__11459 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11458,G__11459) : self__.afn.call(null,G__11458,G__11459));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__11460 = a;
var G__11461 = b;
var G__11462 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11460,G__11461,G__11462) : self__.afn.call(null,G__11460,G__11461,G__11462));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__11463 = a;
var G__11464 = b;
var G__11465 = c;
var G__11466 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11463,G__11464,G__11465,G__11466) : self__.afn.call(null,G__11463,G__11464,G__11465,G__11466));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__11467 = a;
var G__11468 = b;
var G__11469 = c;
var G__11470 = d;
var G__11471 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11467,G__11468,G__11469,G__11470,G__11471) : self__.afn.call(null,G__11467,G__11468,G__11469,G__11470,G__11471));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__11472 = a;
var G__11473 = b;
var G__11474 = c;
var G__11475 = d;
var G__11476 = e;
var G__11477 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11472,G__11473,G__11474,G__11475,G__11476,G__11477) : self__.afn.call(null,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__11478 = a;
var G__11479 = b;
var G__11480 = c;
var G__11481 = d;
var G__11482 = e;
var G__11483 = f;
var G__11484 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484) : self__.afn.call(null,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__11485 = a;
var G__11486 = b;
var G__11487 = c;
var G__11488 = d;
var G__11489 = e;
var G__11490 = f;
var G__11491 = g;
var G__11492 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492) : self__.afn.call(null,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__11493 = a;
var G__11494 = b;
var G__11495 = c;
var G__11496 = d;
var G__11497 = e;
var G__11498 = f;
var G__11499 = g;
var G__11500 = h;
var G__11501 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501) : self__.afn.call(null,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__11502 = a;
var G__11503 = b;
var G__11504 = c;
var G__11505 = d;
var G__11506 = e;
var G__11507 = f;
var G__11508 = g;
var G__11509 = h;
var G__11510 = i;
var G__11511 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511) : self__.afn.call(null,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__11512 = a;
var G__11513 = b;
var G__11514 = c;
var G__11515 = d;
var G__11516 = e;
var G__11517 = f;
var G__11518 = g;
var G__11519 = h;
var G__11520 = i;
var G__11521 = j;
var G__11522 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522) : self__.afn.call(null,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__11523 = a;
var G__11524 = b;
var G__11525 = c;
var G__11526 = d;
var G__11527 = e;
var G__11528 = f;
var G__11529 = g;
var G__11530 = h;
var G__11531 = i;
var G__11532 = j;
var G__11533 = k;
var G__11534 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534) : self__.afn.call(null,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__11535 = a;
var G__11536 = b;
var G__11537 = c;
var G__11538 = d;
var G__11539 = e;
var G__11540 = f;
var G__11541 = g;
var G__11542 = h;
var G__11543 = i;
var G__11544 = j;
var G__11545 = k;
var G__11546 = l;
var G__11547 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11535,G__11536,G__11537,G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547) : self__.afn.call(null,G__11535,G__11536,G__11537,G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__11548 = a;
var G__11549 = b;
var G__11550 = c;
var G__11551 = d;
var G__11552 = e;
var G__11553 = f;
var G__11554 = g;
var G__11555 = h;
var G__11556 = i;
var G__11557 = j;
var G__11558 = k;
var G__11559 = l;
var G__11560 = m;
var G__11561 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561) : self__.afn.call(null,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__11562 = a;
var G__11563 = b;
var G__11564 = c;
var G__11565 = d;
var G__11566 = e;
var G__11567 = f;
var G__11568 = g;
var G__11569 = h;
var G__11570 = i;
var G__11571 = j;
var G__11572 = k;
var G__11573 = l;
var G__11574 = m;
var G__11575 = n;
var G__11576 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576) : self__.afn.call(null,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__11577 = a;
var G__11578 = b;
var G__11579 = c;
var G__11580 = d;
var G__11581 = e;
var G__11582 = f;
var G__11583 = g;
var G__11584 = h;
var G__11585 = i;
var G__11586 = j;
var G__11587 = k;
var G__11588 = l;
var G__11589 = m;
var G__11590 = n;
var G__11591 = o;
var G__11592 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592) : self__.afn.call(null,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591,G__11592));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__11593 = a;
var G__11594 = b;
var G__11595 = c;
var G__11596 = d;
var G__11597 = e;
var G__11598 = f;
var G__11599 = g;
var G__11600 = h;
var G__11601 = i;
var G__11602 = j;
var G__11603 = k;
var G__11604 = l;
var G__11605 = m;
var G__11606 = n;
var G__11607 = o;
var G__11608 = p;
var G__11609 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609) : self__.afn.call(null,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__11610 = a;
var G__11611 = b;
var G__11612 = c;
var G__11613 = d;
var G__11614 = e;
var G__11615 = f;
var G__11616 = g;
var G__11617 = h;
var G__11618 = i;
var G__11619 = j;
var G__11620 = k;
var G__11621 = l;
var G__11622 = m;
var G__11623 = n;
var G__11624 = o;
var G__11625 = p;
var G__11626 = q;
var G__11627 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626,G__11627) : self__.afn.call(null,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626,G__11627));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__11628 = a;
var G__11629 = b;
var G__11630 = c;
var G__11631 = d;
var G__11632 = e;
var G__11633 = f;
var G__11634 = g;
var G__11635 = h;
var G__11636 = i;
var G__11637 = j;
var G__11638 = k;
var G__11639 = l;
var G__11640 = m;
var G__11641 = n;
var G__11642 = o;
var G__11643 = p;
var G__11644 = q;
var G__11645 = r;
var G__11646 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646) : self__.afn.call(null,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__11647 = a;
var G__11648 = b;
var G__11649 = c;
var G__11650 = d;
var G__11651 = e;
var G__11652 = f;
var G__11653 = g;
var G__11654 = h;
var G__11655 = i;
var G__11656 = j;
var G__11657 = k;
var G__11658 = l;
var G__11659 = m;
var G__11660 = n;
var G__11661 = o;
var G__11662 = p;
var G__11663 = q;
var G__11664 = r;
var G__11665 = s;
var G__11666 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666) : self__.afn.call(null,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11667 = self__.afn;
var G__11668 = a;
var G__11669 = b;
var G__11670 = c;
var G__11671 = d;
var G__11672 = e;
var G__11673 = f;
var G__11674 = g;
var G__11675 = h;
var G__11676 = i;
var G__11677 = j;
var G__11678 = k;
var G__11679 = l;
var G__11680 = m;
var G__11681 = n;
var G__11682 = o;
var G__11683 = p;
var G__11684 = q;
var G__11685 = r;
var G__11686 = s;
var G__11687 = t;
var G__11688 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688) : cljs.core.apply.call(null,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__11693 = o;
if(G__11693){
var bit__4471__auto__ = (G__11693.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4471__auto__) || (G__11693.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__11693.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11693);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11693);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3778__auto__ = !((o == null));
if(and__3778__auto__){
var G__11697 = o;
if(G__11697){
var bit__4471__auto__ = (G__11697.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4471__auto__) || (G__11697.cljs$core$IMeta$)){
return true;
} else {
if((!G__11697.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11697);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11697);
}
} else {
return and__3778__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__11700__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11701 = ret;
var G__11702 = cljs.core.first(ks);
var G__11703 = cljs.core.next(ks);
coll = G__11701;
k = G__11702;
ks = G__11703;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11700 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11704__i = 0, G__11704__a = new Array(arguments.length -  2);
while (G__11704__i < G__11704__a.length) {G__11704__a[G__11704__i] = arguments[G__11704__i + 2]; ++G__11704__i;}
  ks = new cljs.core.IndexedSeq(G__11704__a,0);
} 
return G__11700__delegate.call(this,coll,k,ks);};
G__11700.cljs$lang$maxFixedArity = 2;
G__11700.cljs$lang$applyTo = (function (arglist__11705){
var coll = cljs.core.first(arglist__11705);
arglist__11705 = cljs.core.next(arglist__11705);
var k = cljs.core.first(arglist__11705);
var ks = cljs.core.rest(arglist__11705);
return G__11700__delegate(coll,k,ks);
});
G__11700.cljs$core$IFn$_invoke$arity$variadic = G__11700__delegate;
return G__11700;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__11706 = null;
if (arguments.length > 2) {
var G__11707__i = 0, G__11707__a = new Array(arguments.length -  2);
while (G__11707__i < G__11707__a.length) {G__11707__a[G__11707__i] = arguments[G__11707__i + 2]; ++G__11707__i;}
G__11706 = new cljs.core.IndexedSeq(G__11707__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11709 = x;
if(G__11709){
var bit__4471__auto__ = (G__11709.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4471__auto__) || (G__11709.cljs$core$ICollection$)){
return true;
} else {
if((!G__11709.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11709);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11709);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11711 = x;
if(G__11711){
var bit__4471__auto__ = (G__11711.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4471__auto__) || (G__11711.cljs$core$ISet$)){
return true;
} else {
if((!G__11711.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11711);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11711);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__11713 = x;
if(G__11713){
var bit__4471__auto__ = (G__11713.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4471__auto__) || (G__11713.cljs$core$IAssociative$)){
return true;
} else {
if((!G__11713.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11713);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11713);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__11715 = x;
if(G__11715){
var bit__4471__auto__ = (G__11715.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4471__auto__) || (G__11715.cljs$core$ISequential$)){
return true;
} else {
if((!G__11715.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11715);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11715);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__11717 = x;
if(G__11717){
var bit__4471__auto__ = (G__11717.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4471__auto__) || (G__11717.cljs$core$ISorted$)){
return true;
} else {
if((!G__11717.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11717);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11717);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__11719 = x;
if(G__11719){
var bit__4471__auto__ = (G__11719.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4471__auto__) || (G__11719.cljs$core$IReduce$)){
return true;
} else {
if((!G__11719.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11719);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11719);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11721 = x;
if(G__11721){
var bit__4471__auto__ = (G__11721.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4471__auto__) || (G__11721.cljs$core$IMap$)){
return true;
} else {
if((!G__11721.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11721);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11721);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__11723 = x;
if(G__11723){
var bit__4471__auto__ = (G__11723.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4471__auto__) || (G__11723.cljs$core$IVector$)){
return true;
} else {
if((!G__11723.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11723);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11723);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__11725 = x;
if(G__11725){
var bit__4464__auto__ = (G__11725.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4464__auto__) || (G__11725.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj11731 = {};
return obj11731;
});
var js_obj__1 = (function() { 
var G__11734__delegate = function (keyvals){
var G__11732 = goog.object.create;
var G__11733 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__11732,G__11733) : cljs.core.apply.call(null,G__11732,G__11733));
};
var G__11734 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11735__i = 0, G__11735__a = new Array(arguments.length -  0);
while (G__11735__i < G__11735__a.length) {G__11735__a[G__11735__i] = arguments[G__11735__i + 0]; ++G__11735__i;}
  keyvals = new cljs.core.IndexedSeq(G__11735__a,0);
} 
return G__11734__delegate.call(this,keyvals);};
G__11734.cljs$lang$maxFixedArity = 0;
G__11734.cljs$lang$applyTo = (function (arglist__11736){
var keyvals = cljs.core.seq(arglist__11736);
return G__11734__delegate(keyvals);
});
G__11734.cljs$core$IFn$_invoke$arity$variadic = G__11734__delegate;
return G__11734;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__11737 = null;
if (arguments.length > 0) {
var G__11738__i = 0, G__11738__a = new Array(arguments.length -  0);
while (G__11738__i < G__11738__a.length) {G__11738__a[G__11738__i] = arguments[G__11738__i + 0]; ++G__11738__i;}
G__11737 = new cljs.core.IndexedSeq(G__11738__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__11737);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__11741_11743 = obj;
var G__11742_11744 = ((function (G__11741_11743,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__11741_11743,keys))
;
goog.object.forEach(G__11741_11743,G__11742_11744);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11745 = (i__$1 + (1));
var G__11746 = (j__$1 + (1));
var G__11747 = (len__$1 - (1));
i__$1 = G__11745;
j__$1 = G__11746;
len__$1 = G__11747;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11748 = (i__$1 - (1));
var G__11749 = (j__$1 - (1));
var G__11750 = (len__$1 - (1));
i__$1 = G__11748;
j__$1 = G__11749;
len__$1 = G__11750;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj11752 = {};
return obj11752;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__11754 = s;
if(G__11754){
var bit__4471__auto__ = (G__11754.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4471__auto__) || (G__11754.cljs$core$ISeq$)){
return true;
} else {
if((!G__11754.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11754);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11754);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__11756 = s;
if(G__11756){
var bit__4471__auto__ = (G__11756.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4471__auto__) || (G__11756.cljs$core$ISeqable$)){
return true;
} else {
if((!G__11756.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11756);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11756);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3790__auto__ = cljs.core.fn_QMARK_(f);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var G__11760 = f;
if(G__11760){
var bit__4471__auto__ = (G__11760.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4471__auto__) || (G__11760.cljs$core$IFn$)){
return true;
} else {
if((!G__11760.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11760);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11760);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__11773 = n;
return isNaN(G__11773);
})())) && (!((n === Infinity))) && (((function (){var G__11774 = n;
return parseFloat(G__11774);
})() === (function (){var G__11775 = n;
var G__11776 = (10);
return parseInt(G__11775,G__11776);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__11777__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__11778 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__11779 = etc;
s = G__11778;
xs = G__11779;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__11777 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11780__i = 0, G__11780__a = new Array(arguments.length -  2);
while (G__11780__i < G__11780__a.length) {G__11780__a[G__11780__i] = arguments[G__11780__i + 2]; ++G__11780__i;}
  more = new cljs.core.IndexedSeq(G__11780__a,0);
} 
return G__11777__delegate.call(this,x,y,more);};
G__11777.cljs$lang$maxFixedArity = 2;
G__11777.cljs$lang$applyTo = (function (arglist__11781){
var x = cljs.core.first(arglist__11781);
arglist__11781 = cljs.core.next(arglist__11781);
var y = cljs.core.first(arglist__11781);
var more = cljs.core.rest(arglist__11781);
return G__11777__delegate(x,y,more);
});
G__11777.cljs$core$IFn$_invoke$arity$variadic = G__11777__delegate;
return G__11777;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__11782 = null;
if (arguments.length > 2) {
var G__11783__i = 0, G__11783__a = new Array(arguments.length -  2);
while (G__11783__i < G__11783__a.length) {G__11783__a[G__11783__i] = arguments[G__11783__i + 2]; ++G__11783__i;}
G__11782 = new cljs.core.IndexedSeq(G__11783__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__11787 = x;
if(G__11787){
var bit__4464__auto__ = (G__11787.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4464__auto__) || (G__11787.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__11788 = x;
var G__11789 = y;
return goog.array.defaultCompare(G__11788,G__11789);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__11794 = xs;
var G__11795 = ys;
var G__11796 = len;
var G__11797 = (n + (1));
xs = G__11794;
ys = G__11795;
len = G__11796;
n = G__11797;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__11802 = x;
var G__11803 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11802,G__11803) : f.call(null,G__11802,G__11803));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11804 = y;
var G__11805 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11804,G__11805) : f.call(null,G__11804,G__11805));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__11811 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11811) : cljs.core.to_array.call(null,G__11811));
})();
var G__11812_11814 = a;
var G__11813_11815 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__11812_11814,G__11813_11815);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__11821 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11821) : keyfn.call(null,G__11821));
})(),(function (){var G__11822 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11822) : keyfn.call(null,G__11822));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__11828 = f;
var G__11829 = cljs.core.first(s);
var G__11830 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11828,G__11829,G__11830) : cljs.core.reduce.call(null,G__11828,G__11829,G__11830));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__11831 = val__$1;
var G__11832 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11831,G__11832) : f.call(null,G__11831,G__11832));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11833 = nval;
var G__11834 = cljs.core.next(coll__$1);
val__$1 = G__11833;
coll__$1 = G__11834;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__11838 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11838) : cljs.core.to_array.call(null,G__11838));
})();
var G__11839_11841 = a;
goog.array.shuffle(G__11839_11841);

var G__11840 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__11840) : cljs.core.vec.call(null,G__11840));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__11844 = coll;
if(G__11844){
var bit__4464__auto__ = (G__11844.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4464__auto__) || (G__11844.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__11845 = coll;
if(G__11845){
var bit__4464__auto__ = (G__11845.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4464__auto__) || (G__11845.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__11854 = null;
var G__11854__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__11854__1 = (function (x){
var G__11851 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__11851) : cf.call(null,G__11851));
});
var G__11854__2 = (function (x,y){
var G__11852 = x;
var G__11853 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11852,G__11853) : f.call(null,G__11852,G__11853));
});
G__11854 = function(x,y){
switch(arguments.length){
case 0:
return G__11854__0.call(this);
case 1:
return G__11854__1.call(this,x);
case 2:
return G__11854__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11854.cljs$core$IFn$_invoke$arity$0 = G__11854__0;
G__11854.cljs$core$IFn$_invoke$arity$1 = G__11854__1;
G__11854.cljs$core$IFn$_invoke$arity$2 = G__11854__2;
return G__11854;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__11861 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11861) : xform.call(null,G__11861));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__11862 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__11862) : f__$1.call(null,G__11862));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__11863__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__11863 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11864__i = 0, G__11864__a = new Array(arguments.length -  2);
while (G__11864__i < G__11864__a.length) {G__11864__a[G__11864__i] = arguments[G__11864__i + 2]; ++G__11864__i;}
  more = new cljs.core.IndexedSeq(G__11864__a,0);
} 
return G__11863__delegate.call(this,x,y,more);};
G__11863.cljs$lang$maxFixedArity = 2;
G__11863.cljs$lang$applyTo = (function (arglist__11865){
var x = cljs.core.first(arglist__11865);
arglist__11865 = cljs.core.next(arglist__11865);
var y = cljs.core.first(arglist__11865);
var more = cljs.core.rest(arglist__11865);
return G__11863__delegate(x,y,more);
});
G__11863.cljs$core$IFn$_invoke$arity$variadic = G__11863__delegate;
return G__11863;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__11866 = null;
if (arguments.length > 2) {
var G__11867__i = 0, G__11867__a = new Array(arguments.length -  2);
while (G__11867__i < G__11867__a.length) {G__11867__a[G__11867__i] = arguments[G__11867__i + 2]; ++G__11867__i;}
G__11866 = new cljs.core.IndexedSeq(G__11867__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11866);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__11868__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__11868 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11869__i = 0, G__11869__a = new Array(arguments.length -  2);
while (G__11869__i < G__11869__a.length) {G__11869__a[G__11869__i] = arguments[G__11869__i + 2]; ++G__11869__i;}
  more = new cljs.core.IndexedSeq(G__11869__a,0);
} 
return G__11868__delegate.call(this,x,y,more);};
G__11868.cljs$lang$maxFixedArity = 2;
G__11868.cljs$lang$applyTo = (function (arglist__11870){
var x = cljs.core.first(arglist__11870);
arglist__11870 = cljs.core.next(arglist__11870);
var y = cljs.core.first(arglist__11870);
var more = cljs.core.rest(arglist__11870);
return G__11868__delegate(x,y,more);
});
G__11868.cljs$core$IFn$_invoke$arity$variadic = G__11868__delegate;
return G__11868;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__11871 = null;
if (arguments.length > 2) {
var G__11872__i = 0, G__11872__a = new Array(arguments.length -  2);
while (G__11872__i < G__11872__a.length) {G__11872__a[G__11872__i] = arguments[G__11872__i + 2]; ++G__11872__i;}
G__11871 = new cljs.core.IndexedSeq(G__11872__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11871);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__11873__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__11873 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11874__i = 0, G__11874__a = new Array(arguments.length -  2);
while (G__11874__i < G__11874__a.length) {G__11874__a[G__11874__i] = arguments[G__11874__i + 2]; ++G__11874__i;}
  more = new cljs.core.IndexedSeq(G__11874__a,0);
} 
return G__11873__delegate.call(this,x,y,more);};
G__11873.cljs$lang$maxFixedArity = 2;
G__11873.cljs$lang$applyTo = (function (arglist__11875){
var x = cljs.core.first(arglist__11875);
arglist__11875 = cljs.core.next(arglist__11875);
var y = cljs.core.first(arglist__11875);
var more = cljs.core.rest(arglist__11875);
return G__11873__delegate(x,y,more);
});
G__11873.cljs$core$IFn$_invoke$arity$variadic = G__11873__delegate;
return G__11873;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__11876 = null;
if (arguments.length > 2) {
var G__11877__i = 0, G__11877__a = new Array(arguments.length -  2);
while (G__11877__i < G__11877__a.length) {G__11877__a[G__11877__i] = arguments[G__11877__i + 2]; ++G__11877__i;}
G__11876 = new cljs.core.IndexedSeq(G__11877__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__11882__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__11882 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11883__i = 0, G__11883__a = new Array(arguments.length -  2);
while (G__11883__i < G__11883__a.length) {G__11883__a[G__11883__i] = arguments[G__11883__i + 2]; ++G__11883__i;}
  more = new cljs.core.IndexedSeq(G__11883__a,0);
} 
return G__11882__delegate.call(this,x,y,more);};
G__11882.cljs$lang$maxFixedArity = 2;
G__11882.cljs$lang$applyTo = (function (arglist__11884){
var x = cljs.core.first(arglist__11884);
arglist__11884 = cljs.core.next(arglist__11884);
var y = cljs.core.first(arglist__11884);
var more = cljs.core.rest(arglist__11884);
return G__11882__delegate(x,y,more);
});
G__11882.cljs$core$IFn$_invoke$arity$variadic = G__11882__delegate;
return G__11882;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__11885 = null;
if (arguments.length > 2) {
var G__11886__i = 0, G__11886__a = new Array(arguments.length -  2);
while (G__11886__i < G__11886__a.length) {G__11886__a[G__11886__i] = arguments[G__11886__i + 2]; ++G__11886__i;}
G__11885 = new cljs.core.IndexedSeq(G__11886__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__11887__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__11888 = y;
var G__11889 = cljs.core.first(more);
var G__11890 = cljs.core.next(more);
x = G__11888;
y = G__11889;
more = G__11890;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11887 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11891__i = 0, G__11891__a = new Array(arguments.length -  2);
while (G__11891__i < G__11891__a.length) {G__11891__a[G__11891__i] = arguments[G__11891__i + 2]; ++G__11891__i;}
  more = new cljs.core.IndexedSeq(G__11891__a,0);
} 
return G__11887__delegate.call(this,x,y,more);};
G__11887.cljs$lang$maxFixedArity = 2;
G__11887.cljs$lang$applyTo = (function (arglist__11892){
var x = cljs.core.first(arglist__11892);
arglist__11892 = cljs.core.next(arglist__11892);
var y = cljs.core.first(arglist__11892);
var more = cljs.core.rest(arglist__11892);
return G__11887__delegate(x,y,more);
});
G__11887.cljs$core$IFn$_invoke$arity$variadic = G__11887__delegate;
return G__11887;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__11893 = null;
if (arguments.length > 2) {
var G__11894__i = 0, G__11894__a = new Array(arguments.length -  2);
while (G__11894__i < G__11894__a.length) {G__11894__a[G__11894__i] = arguments[G__11894__i + 2]; ++G__11894__i;}
G__11893 = new cljs.core.IndexedSeq(G__11894__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__11895__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__11896 = y;
var G__11897 = cljs.core.first(more);
var G__11898 = cljs.core.next(more);
x = G__11896;
y = G__11897;
more = G__11898;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11895 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11899__i = 0, G__11899__a = new Array(arguments.length -  2);
while (G__11899__i < G__11899__a.length) {G__11899__a[G__11899__i] = arguments[G__11899__i + 2]; ++G__11899__i;}
  more = new cljs.core.IndexedSeq(G__11899__a,0);
} 
return G__11895__delegate.call(this,x,y,more);};
G__11895.cljs$lang$maxFixedArity = 2;
G__11895.cljs$lang$applyTo = (function (arglist__11900){
var x = cljs.core.first(arglist__11900);
arglist__11900 = cljs.core.next(arglist__11900);
var y = cljs.core.first(arglist__11900);
var more = cljs.core.rest(arglist__11900);
return G__11895__delegate(x,y,more);
});
G__11895.cljs$core$IFn$_invoke$arity$variadic = G__11895__delegate;
return G__11895;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__11901 = null;
if (arguments.length > 2) {
var G__11902__i = 0, G__11902__a = new Array(arguments.length -  2);
while (G__11902__i < G__11902__a.length) {G__11902__a[G__11902__i] = arguments[G__11902__i + 2]; ++G__11902__i;}
G__11901 = new cljs.core.IndexedSeq(G__11902__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__11903__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__11904 = y;
var G__11905 = cljs.core.first(more);
var G__11906 = cljs.core.next(more);
x = G__11904;
y = G__11905;
more = G__11906;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11903 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11907__i = 0, G__11907__a = new Array(arguments.length -  2);
while (G__11907__i < G__11907__a.length) {G__11907__a[G__11907__i] = arguments[G__11907__i + 2]; ++G__11907__i;}
  more = new cljs.core.IndexedSeq(G__11907__a,0);
} 
return G__11903__delegate.call(this,x,y,more);};
G__11903.cljs$lang$maxFixedArity = 2;
G__11903.cljs$lang$applyTo = (function (arglist__11908){
var x = cljs.core.first(arglist__11908);
arglist__11908 = cljs.core.next(arglist__11908);
var y = cljs.core.first(arglist__11908);
var more = cljs.core.rest(arglist__11908);
return G__11903__delegate(x,y,more);
});
G__11903.cljs$core$IFn$_invoke$arity$variadic = G__11903__delegate;
return G__11903;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__11909 = null;
if (arguments.length > 2) {
var G__11910__i = 0, G__11910__a = new Array(arguments.length -  2);
while (G__11910__i < G__11910__a.length) {G__11910__a[G__11910__i] = arguments[G__11910__i + 2]; ++G__11910__i;}
G__11909 = new cljs.core.IndexedSeq(G__11910__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__11911__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__11912 = y;
var G__11913 = cljs.core.first(more);
var G__11914 = cljs.core.next(more);
x = G__11912;
y = G__11913;
more = G__11914;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11911 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11915__i = 0, G__11915__a = new Array(arguments.length -  2);
while (G__11915__i < G__11915__a.length) {G__11915__a[G__11915__i] = arguments[G__11915__i + 2]; ++G__11915__i;}
  more = new cljs.core.IndexedSeq(G__11915__a,0);
} 
return G__11911__delegate.call(this,x,y,more);};
G__11911.cljs$lang$maxFixedArity = 2;
G__11911.cljs$lang$applyTo = (function (arglist__11916){
var x = cljs.core.first(arglist__11916);
arglist__11916 = cljs.core.next(arglist__11916);
var y = cljs.core.first(arglist__11916);
var more = cljs.core.rest(arglist__11916);
return G__11911__delegate(x,y,more);
});
G__11911.cljs$core$IFn$_invoke$arity$variadic = G__11911__delegate;
return G__11911;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__11917 = null;
if (arguments.length > 2) {
var G__11918__i = 0, G__11918__a = new Array(arguments.length -  2);
while (G__11918__i < G__11918__a.length) {G__11918__a[G__11918__i] = arguments[G__11918__i + 2]; ++G__11918__i;}
G__11917 = new cljs.core.IndexedSeq(G__11918__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4107__auto__ = x;
var y__4108__auto__ = y;
return ((x__4107__auto__ > y__4108__auto__) ? x__4107__auto__ : y__4108__auto__);
});
var max__3 = (function() { 
var G__11919__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4107__auto__ = x;
var y__4108__auto__ = y;
return ((x__4107__auto__ > y__4108__auto__) ? x__4107__auto__ : y__4108__auto__);
})(),more);
};
var G__11919 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11920__i = 0, G__11920__a = new Array(arguments.length -  2);
while (G__11920__i < G__11920__a.length) {G__11920__a[G__11920__i] = arguments[G__11920__i + 2]; ++G__11920__i;}
  more = new cljs.core.IndexedSeq(G__11920__a,0);
} 
return G__11919__delegate.call(this,x,y,more);};
G__11919.cljs$lang$maxFixedArity = 2;
G__11919.cljs$lang$applyTo = (function (arglist__11921){
var x = cljs.core.first(arglist__11921);
arglist__11921 = cljs.core.next(arglist__11921);
var y = cljs.core.first(arglist__11921);
var more = cljs.core.rest(arglist__11921);
return G__11919__delegate(x,y,more);
});
G__11919.cljs$core$IFn$_invoke$arity$variadic = G__11919__delegate;
return G__11919;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__11922 = null;
if (arguments.length > 2) {
var G__11923__i = 0, G__11923__a = new Array(arguments.length -  2);
while (G__11923__i < G__11923__a.length) {G__11923__a[G__11923__i] = arguments[G__11923__i + 2]; ++G__11923__i;}
G__11922 = new cljs.core.IndexedSeq(G__11923__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4114__auto__ = x;
var y__4115__auto__ = y;
return ((x__4114__auto__ < y__4115__auto__) ? x__4114__auto__ : y__4115__auto__);
});
var min__3 = (function() { 
var G__11924__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4114__auto__ = x;
var y__4115__auto__ = y;
return ((x__4114__auto__ < y__4115__auto__) ? x__4114__auto__ : y__4115__auto__);
})(),more);
};
var G__11924 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11925__i = 0, G__11925__a = new Array(arguments.length -  2);
while (G__11925__i < G__11925__a.length) {G__11925__a[G__11925__i] = arguments[G__11925__i + 2]; ++G__11925__i;}
  more = new cljs.core.IndexedSeq(G__11925__a,0);
} 
return G__11924__delegate.call(this,x,y,more);};
G__11924.cljs$lang$maxFixedArity = 2;
G__11924.cljs$lang$applyTo = (function (arglist__11926){
var x = cljs.core.first(arglist__11926);
arglist__11926 = cljs.core.next(arglist__11926);
var y = cljs.core.first(arglist__11926);
var more = cljs.core.rest(arglist__11926);
return G__11924__delegate(x,y,more);
});
G__11924.cljs$core$IFn$_invoke$arity$variadic = G__11924__delegate;
return G__11924;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__11927 = null;
if (arguments.length > 2) {
var G__11928__i = 0, G__11928__a = new Array(arguments.length -  2);
while (G__11928__i < G__11928__a.length) {G__11928__a[G__11928__i] = arguments[G__11928__i + 2]; ++G__11928__i;}
G__11927 = new cljs.core.IndexedSeq(G__11928__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__11929__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__11929 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11930__i = 0, G__11930__a = new Array(arguments.length -  2);
while (G__11930__i < G__11930__a.length) {G__11930__a[G__11930__i] = arguments[G__11930__i + 2]; ++G__11930__i;}
  more = new cljs.core.IndexedSeq(G__11930__a,0);
} 
return G__11929__delegate.call(this,x,y,more);};
G__11929.cljs$lang$maxFixedArity = 2;
G__11929.cljs$lang$applyTo = (function (arglist__11931){
var x = cljs.core.first(arglist__11931);
arglist__11931 = cljs.core.next(arglist__11931);
var y = cljs.core.first(arglist__11931);
var more = cljs.core.rest(arglist__11931);
return G__11929__delegate(x,y,more);
});
G__11929.cljs$core$IFn$_invoke$arity$variadic = G__11929__delegate;
return G__11929;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__11932 = null;
if (arguments.length > 2) {
var G__11933__i = 0, G__11933__a = new Array(arguments.length -  2);
while (G__11933__i < G__11933__a.length) {G__11933__a[G__11933__i] = arguments[G__11933__i + 2]; ++G__11933__i;}
G__11932 = new cljs.core.IndexedSeq(G__11933__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__11934__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__11934 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11935__i = 0, G__11935__a = new Array(arguments.length -  2);
while (G__11935__i < G__11935__a.length) {G__11935__a[G__11935__i] = arguments[G__11935__i + 2]; ++G__11935__i;}
  more = new cljs.core.IndexedSeq(G__11935__a,0);
} 
return G__11934__delegate.call(this,x,y,more);};
G__11934.cljs$lang$maxFixedArity = 2;
G__11934.cljs$lang$applyTo = (function (arglist__11936){
var x = cljs.core.first(arglist__11936);
arglist__11936 = cljs.core.next(arglist__11936);
var y = cljs.core.first(arglist__11936);
var more = cljs.core.rest(arglist__11936);
return G__11934__delegate(x,y,more);
});
G__11934.cljs$core$IFn$_invoke$arity$variadic = G__11934__delegate;
return G__11934;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__11937 = null;
if (arguments.length > 2) {
var G__11938__i = 0, G__11938__a = new Array(arguments.length -  2);
while (G__11938__i < G__11938__a.length) {G__11938__a[G__11938__i] = arguments[G__11938__i + 2]; ++G__11938__i;}
G__11937 = new cljs.core.IndexedSeq(G__11938__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11937);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__11943__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__11943 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11944__i = 0, G__11944__a = new Array(arguments.length -  2);
while (G__11944__i < G__11944__a.length) {G__11944__a[G__11944__i] = arguments[G__11944__i + 2]; ++G__11944__i;}
  more = new cljs.core.IndexedSeq(G__11944__a,0);
} 
return G__11943__delegate.call(this,x,y,more);};
G__11943.cljs$lang$maxFixedArity = 2;
G__11943.cljs$lang$applyTo = (function (arglist__11945){
var x = cljs.core.first(arglist__11945);
arglist__11945 = cljs.core.next(arglist__11945);
var y = cljs.core.first(arglist__11945);
var more = cljs.core.rest(arglist__11945);
return G__11943__delegate(x,y,more);
});
G__11943.cljs$core$IFn$_invoke$arity$variadic = G__11943__delegate;
return G__11943;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__11946 = null;
if (arguments.length > 2) {
var G__11947__i = 0, G__11947__a = new Array(arguments.length -  2);
while (G__11947__i < G__11947__a.length) {G__11947__a[G__11947__i] = arguments[G__11947__i + 2]; ++G__11947__i;}
G__11946 = new cljs.core.IndexedSeq(G__11947__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__11948__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__11948 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11949__i = 0, G__11949__a = new Array(arguments.length -  2);
while (G__11949__i < G__11949__a.length) {G__11949__a[G__11949__i] = arguments[G__11949__i + 2]; ++G__11949__i;}
  more = new cljs.core.IndexedSeq(G__11949__a,0);
} 
return G__11948__delegate.call(this,x,y,more);};
G__11948.cljs$lang$maxFixedArity = 2;
G__11948.cljs$lang$applyTo = (function (arglist__11950){
var x = cljs.core.first(arglist__11950);
arglist__11950 = cljs.core.next(arglist__11950);
var y = cljs.core.first(arglist__11950);
var more = cljs.core.rest(arglist__11950);
return G__11948__delegate(x,y,more);
});
G__11948.cljs$core$IFn$_invoke$arity$variadic = G__11948__delegate;
return G__11948;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__11951 = null;
if (arguments.length > 2) {
var G__11952__i = 0, G__11952__a = new Array(arguments.length -  2);
while (G__11952__i < G__11952__a.length) {G__11952__a[G__11952__i] = arguments[G__11952__i + 2]; ++G__11952__i;}
G__11951 = new cljs.core.IndexedSeq(G__11952__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__11953__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__11953 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11954__i = 0, G__11954__a = new Array(arguments.length -  2);
while (G__11954__i < G__11954__a.length) {G__11954__a[G__11954__i] = arguments[G__11954__i + 2]; ++G__11954__i;}
  more = new cljs.core.IndexedSeq(G__11954__a,0);
} 
return G__11953__delegate.call(this,x,y,more);};
G__11953.cljs$lang$maxFixedArity = 2;
G__11953.cljs$lang$applyTo = (function (arglist__11955){
var x = cljs.core.first(arglist__11955);
arglist__11955 = cljs.core.next(arglist__11955);
var y = cljs.core.first(arglist__11955);
var more = cljs.core.rest(arglist__11955);
return G__11953__delegate(x,y,more);
});
G__11953.cljs$core$IFn$_invoke$arity$variadic = G__11953__delegate;
return G__11953;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__11956 = null;
if (arguments.length > 2) {
var G__11957__i = 0, G__11957__a = new Array(arguments.length -  2);
while (G__11957__i < G__11957__a.length) {G__11957__a[G__11957__i] = arguments[G__11957__i + 2]; ++G__11957__i;}
G__11956 = new cljs.core.IndexedSeq(G__11957__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11956);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__11960 = x;
var G__11961 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__11960,G__11961) : cljs.core.mod.call(null,G__11960,G__11961));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__11962__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__11962 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11963__i = 0, G__11963__a = new Array(arguments.length -  2);
while (G__11963__i < G__11963__a.length) {G__11963__a[G__11963__i] = arguments[G__11963__i + 2]; ++G__11963__i;}
  more = new cljs.core.IndexedSeq(G__11963__a,0);
} 
return G__11962__delegate.call(this,x,y,more);};
G__11962.cljs$lang$maxFixedArity = 2;
G__11962.cljs$lang$applyTo = (function (arglist__11964){
var x = cljs.core.first(arglist__11964);
arglist__11964 = cljs.core.next(arglist__11964);
var y = cljs.core.first(arglist__11964);
var more = cljs.core.rest(arglist__11964);
return G__11962__delegate(x,y,more);
});
G__11962.cljs$core$IFn$_invoke$arity$variadic = G__11962__delegate;
return G__11962;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__11965 = null;
if (arguments.length > 2) {
var G__11966__i = 0, G__11966__a = new Array(arguments.length -  2);
while (G__11966__i < G__11966__a.length) {G__11966__a[G__11966__i] = arguments[G__11966__i + 2]; ++G__11966__i;}
G__11965 = new cljs.core.IndexedSeq(G__11966__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__11967__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__11967 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11968__i = 0, G__11968__a = new Array(arguments.length -  2);
while (G__11968__i < G__11968__a.length) {G__11968__a[G__11968__i] = arguments[G__11968__i + 2]; ++G__11968__i;}
  more = new cljs.core.IndexedSeq(G__11968__a,0);
} 
return G__11967__delegate.call(this,x,y,more);};
G__11967.cljs$lang$maxFixedArity = 2;
G__11967.cljs$lang$applyTo = (function (arglist__11969){
var x = cljs.core.first(arglist__11969);
arglist__11969 = cljs.core.next(arglist__11969);
var y = cljs.core.first(arglist__11969);
var more = cljs.core.rest(arglist__11969);
return G__11967__delegate(x,y,more);
});
G__11967.cljs$core$IFn$_invoke$arity$variadic = G__11967__delegate;
return G__11967;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__11970 = null;
if (arguments.length > 2) {
var G__11971__i = 0, G__11971__a = new Array(arguments.length -  2);
while (G__11971__i < G__11971__a.length) {G__11971__a[G__11971__i] = arguments[G__11971__i + 2]; ++G__11971__i;}
G__11970 = new cljs.core.IndexedSeq(G__11971__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__11974 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11974) : Math.floor.call(null,G__11974));
} else {
var G__11975 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11975) : Math.ceil.call(null,G__11975));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__11980__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11981 = y;
var G__11982 = cljs.core.first(more);
var G__11983 = cljs.core.next(more);
x = G__11981;
y = G__11982;
more = G__11983;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11980 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11984__i = 0, G__11984__a = new Array(arguments.length -  2);
while (G__11984__i < G__11984__a.length) {G__11984__a[G__11984__i] = arguments[G__11984__i + 2]; ++G__11984__i;}
  more = new cljs.core.IndexedSeq(G__11984__a,0);
} 
return G__11980__delegate.call(this,x,y,more);};
G__11980.cljs$lang$maxFixedArity = 2;
G__11980.cljs$lang$applyTo = (function (arglist__11985){
var x = cljs.core.first(arglist__11985);
arglist__11985 = cljs.core.next(arglist__11985);
var y = cljs.core.first(arglist__11985);
var more = cljs.core.rest(arglist__11985);
return G__11980__delegate(x,y,more);
});
G__11980.cljs$core$IFn$_invoke$arity$variadic = G__11980__delegate;
return G__11980;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__11986 = null;
if (arguments.length > 2) {
var G__11987__i = 0, G__11987__a = new Array(arguments.length -  2);
while (G__11987__i < G__11987__a.length) {G__11987__a[G__11987__i] = arguments[G__11987__i + 2]; ++G__11987__i;}
G__11986 = new cljs.core.IndexedSeq(G__11987__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__11988 = (n__$1 - (1));
var G__11989 = cljs.core.next(xs);
n__$1 = G__11988;
xs = G__11989;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__11993 = x;
return goog.string.buildString(G__11993);
}
});
var str__2 = (function() { 
var G__11994__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__11995 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__11996 = cljs.core.next(more);
sb = G__11995;
more = G__11996;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__11994 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__11997__i = 0, G__11997__a = new Array(arguments.length -  1);
while (G__11997__i < G__11997__a.length) {G__11997__a[G__11997__i] = arguments[G__11997__i + 1]; ++G__11997__i;}
  ys = new cljs.core.IndexedSeq(G__11997__a,0);
} 
return G__11994__delegate.call(this,x,ys);};
G__11994.cljs$lang$maxFixedArity = 1;
G__11994.cljs$lang$applyTo = (function (arglist__11998){
var x = cljs.core.first(arglist__11998);
var ys = cljs.core.rest(arglist__11998);
return G__11994__delegate(x,ys);
});
G__11994.cljs$core$IFn$_invoke$arity$variadic = G__11994__delegate;
return G__11994;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__11999 = null;
if (arguments.length > 1) {
var G__12000__i = 0, G__12000__a = new Array(arguments.length -  1);
while (G__12000__i < G__12000__a.length) {G__12000__a[G__12000__i] = arguments[G__12000__i + 1]; ++G__12000__i;}
G__11999 = new cljs.core.IndexedSeq(G__12000__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11999);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12001 = cljs.core.next(xs);
var G__12002 = cljs.core.next(ys);
xs = G__12001;
ys = G__12002;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12003 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12004 = cljs.core.next(s);
res = G__12003;
s = G__12004;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12009 = ((h + (cljs.core.hash((function (){var G__12007 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12007) : cljs.core.key.call(null,G__12007));
})()) ^ cljs.core.hash((function (){var G__12008 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12008) : cljs.core.val.call(null,G__12008));
})()))) % (4503599627370496));
var G__12010 = cljs.core.next(s);
h = G__12009;
s = G__12010;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12011 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12012 = cljs.core.next(s__$1);
h = G__12011;
s__$1 = G__12012;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12023_12033 = cljs.core.seq(fn_map);
var chunk__12024_12034 = null;
var count__12025_12035 = (0);
var i__12026_12036 = (0);
while(true){
if((i__12026_12036 < count__12025_12035)){
var vec__12027_12037 = chunk__12024_12034.cljs$core$IIndexed$_nth$arity$2(null,i__12026_12036);
var key_name_12038 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12027_12037,(0),null);
var f_12039 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12027_12037,(1),null);
var str_name_12040 = (function (){var G__12028 = key_name_12038;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12028) : cljs.core.name.call(null,G__12028));
})();
(obj[str_name_12040] = f_12039);

var G__12041 = seq__12023_12033;
var G__12042 = chunk__12024_12034;
var G__12043 = count__12025_12035;
var G__12044 = (i__12026_12036 + (1));
seq__12023_12033 = G__12041;
chunk__12024_12034 = G__12042;
count__12025_12035 = G__12043;
i__12026_12036 = G__12044;
continue;
} else {
var temp__4126__auto___12045 = cljs.core.seq(seq__12023_12033);
if(temp__4126__auto___12045){
var seq__12023_12046__$1 = temp__4126__auto___12045;
if(cljs.core.chunked_seq_QMARK_(seq__12023_12046__$1)){
var c__4577__auto___12047 = (function (){var G__12029 = seq__12023_12046__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12029) : cljs.core.chunk_first.call(null,G__12029));
})();
var G__12048 = (function (){var G__12030 = seq__12023_12046__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12030) : cljs.core.chunk_rest.call(null,G__12030));
})();
var G__12049 = c__4577__auto___12047;
var G__12050 = cljs.core.count(c__4577__auto___12047);
var G__12051 = (0);
seq__12023_12033 = G__12048;
chunk__12024_12034 = G__12049;
count__12025_12035 = G__12050;
i__12026_12036 = G__12051;
continue;
} else {
var vec__12031_12052 = cljs.core.first(seq__12023_12046__$1);
var key_name_12053 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12031_12052,(0),null);
var f_12054 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12031_12052,(1),null);
var str_name_12055 = (function (){var G__12032 = key_name_12053;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12032) : cljs.core.name.call(null,G__12032));
})();
(obj[str_name_12055] = f_12054);

var G__12056 = cljs.core.next(seq__12023_12046__$1);
var G__12057 = null;
var G__12058 = (0);
var G__12059 = (0);
seq__12023_12033 = G__12056;
chunk__12024_12034 = G__12057;
count__12025_12035 = G__12058;
i__12026_12036 = G__12059;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12061 = coll;
if(G__12061){
var bit__4471__auto__ = (G__12061.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4471__auto__) || (G__12061.cljs$core$IReversible$)){
return true;
} else {
if((!G__12061.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12061);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12061);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12062 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12062;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12063 = (i - (1));
var G__12064 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12063;
r = G__12064;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12065__i = 0, G__12065__a = new Array(arguments.length -  0);
while (G__12065__i < G__12065__a.length) {G__12065__a[G__12065__i] = arguments[G__12065__i + 0]; ++G__12065__i;}
  xs = new cljs.core.IndexedSeq(G__12065__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12066){
var xs = cljs.core.seq(arglist__12066);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3790__auto__ = (coll == null);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var G__12070 = coll;
if(G__12070){
var bit__4464__auto__ = (G__12070.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4464__auto__) || (G__12070.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12072 = x;
if(G__12072){
var bit__4471__auto__ = (G__12072.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4471__auto__) || (G__12072.cljs$core$IList$)){
return true;
} else {
if((!G__12072.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12072);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12072);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3778__auto__ = cljs.core.not(a.ns);
if(and__3778__auto__){
return b.ns;
} else {
return and__3778__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12079 = a.ns;
var G__12080 = b.ns;
return goog.array.defaultCompare(G__12079,G__12080);
})();
if(((0) === nsc)){
var G__12081 = a.name;
var G__12082 = b.name;
return goog.array.defaultCompare(G__12081,G__12082);
} else {
return nsc;
}
}
} else {
var G__12083 = a.name;
var G__12084 = b.name;
return goog.array.defaultCompare(G__12083,G__12084);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4211__auto__ = self__._hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12086 = null;
var G__12086__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12086__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12086 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12086__2.call(this,self__,coll);
case 3:
return G__12086__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12086.cljs$core$IFn$_invoke$arity$2 = G__12086__2;
G__12086.cljs$core$IFn$_invoke$arity$3 = G__12086__3;
return G__12086;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12085){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12085)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__12088 = x;
if(G__12088){
var bit__4464__auto__ = (G__12088.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4464__auto__) || (G__12088.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12090 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12090) : cljs.core.name.call(null,G__12090));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12091 = ls.sval();
ls = G__12091;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12093 = s;
if(G__12093){
var bit__4464__auto__ = (G__12093.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4464__auto__) || (G__12093.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12094 = cljs.core.next(s__$1);
s__$1 = G__12094;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12095 = (0);
var xs_12096 = cljs.core.seq(coll);
while(true){
if(xs_12096){
(ret[i_12095] = cljs.core.to_array(cljs.core.first(xs_12096)));

var G__12097 = (i_12095 + (1));
var G__12098 = cljs.core.next(xs_12096);
i_12095 = G__12097;
xs_12096 = G__12098;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12101 = (i + (1));
var G__12102 = cljs.core.next(s__$1);
i = G__12101;
s__$1 = G__12102;
continue;
} else {
return a;
}
break;
}
} else {
var n__4677__auto___12103 = size;
var i_12104 = (0);
while(true){
if((i_12104 < n__4677__auto___12103)){
(a[i_12104] = init_val_or_seq);

var G__12105 = (i_12104 + (1));
i_12104 = G__12105;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12108 = (i + (1));
var G__12109 = cljs.core.next(s__$1);
i = G__12108;
s__$1 = G__12109;
continue;
} else {
return a;
}
break;
}
} else {
var n__4677__auto___12110 = size;
var i_12111 = (0);
while(true){
if((i_12111 < n__4677__auto___12110)){
(a[i_12111] = init_val_or_seq);

var G__12112 = (i_12111 + (1));
i_12111 = G__12112;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12115 = (i + (1));
var G__12116 = cljs.core.next(s__$1);
i = G__12115;
s__$1 = G__12116;
continue;
} else {
return a;
}
break;
}
} else {
var n__4677__auto___12117 = size;
var i_12118 = (0);
while(true){
if((i_12118 < n__4677__auto___12117)){
(a[i_12118] = init_val_or_seq);

var G__12119 = (i_12118 + (1));
i_12118 = G__12119;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12122 = (i + (1));
var G__12123 = cljs.core.next(s__$1);
i = G__12122;
s__$1 = G__12123;
continue;
} else {
return a;
}
break;
}
} else {
var n__4677__auto___12124 = size;
var i_12125 = (0);
while(true){
if((i_12125 < n__4677__auto___12124)){
(a[i_12125] = init_val_or_seq);

var G__12126 = (i_12125 + (1));
i_12125 = G__12126;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__12127 = cljs.core.next(s__$1);
var G__12128 = (i - (1));
var G__12129 = (sum + (1));
s__$1 = G__12127;
i = G__12128;
sum = G__12129;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__12149__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__12149 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12150__i = 0, G__12150__a = new Array(arguments.length -  2);
while (G__12150__i < G__12150__a.length) {G__12150__a[G__12150__i] = arguments[G__12150__i + 2]; ++G__12150__i;}
  zs = new cljs.core.IndexedSeq(G__12150__a,0);
} 
return G__12149__delegate.call(this,x,y,zs);};
G__12149.cljs$lang$maxFixedArity = 2;
G__12149.cljs$lang$applyTo = (function (arglist__12151){
var x = cljs.core.first(arglist__12151);
arglist__12151 = cljs.core.next(arglist__12151);
var y = cljs.core.first(arglist__12151);
var zs = cljs.core.rest(arglist__12151);
return G__12149__delegate(x,y,zs);
});
G__12149.cljs$core$IFn$_invoke$arity$variadic = G__12149__delegate;
return G__12149;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__12152 = null;
if (arguments.length > 2) {
var G__12153__i = 0, G__12153__a = new Array(arguments.length -  2);
while (G__12153__i < G__12153__a.length) {G__12153__a[G__12153__i] = arguments[G__12153__i + 2]; ++G__12153__i;}
G__12152 = new cljs.core.IndexedSeq(G__12153__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__12154__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__12154 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__12155__i = 0, G__12155__a = new Array(arguments.length -  4);
while (G__12155__i < G__12155__a.length) {G__12155__a[G__12155__i] = arguments[G__12155__i + 4]; ++G__12155__i;}
  more = new cljs.core.IndexedSeq(G__12155__a,0);
} 
return G__12154__delegate.call(this,a,b,c,d,more);};
G__12154.cljs$lang$maxFixedArity = 4;
G__12154.cljs$lang$applyTo = (function (arglist__12156){
var a = cljs.core.first(arglist__12156);
arglist__12156 = cljs.core.next(arglist__12156);
var b = cljs.core.first(arglist__12156);
arglist__12156 = cljs.core.next(arglist__12156);
var c = cljs.core.first(arglist__12156);
arglist__12156 = cljs.core.next(arglist__12156);
var d = cljs.core.first(arglist__12156);
var more = cljs.core.rest(arglist__12156);
return G__12154__delegate(a,b,c,d,more);
});
G__12154.cljs$core$IFn$_invoke$arity$variadic = G__12154__delegate;
return G__12154;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__12157 = null;
if (arguments.length > 4) {
var G__12158__i = 0, G__12158__a = new Array(arguments.length -  4);
while (G__12158__i < G__12158__a.length) {G__12158__a[G__12158__i] = arguments[G__12158__i + 4]; ++G__12158__i;}
G__12157 = new cljs.core.IndexedSeq(G__12158__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__12157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__12159__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12160 = ntcoll;
var G__12161 = cljs.core.first(vals);
var G__12162 = cljs.core.next(vals);
tcoll = G__12160;
val = G__12161;
vals = G__12162;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12159 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12163__i = 0, G__12163__a = new Array(arguments.length -  2);
while (G__12163__i < G__12163__a.length) {G__12163__a[G__12163__i] = arguments[G__12163__i + 2]; ++G__12163__i;}
  vals = new cljs.core.IndexedSeq(G__12163__a,0);
} 
return G__12159__delegate.call(this,tcoll,val,vals);};
G__12159.cljs$lang$maxFixedArity = 2;
G__12159.cljs$lang$applyTo = (function (arglist__12164){
var tcoll = cljs.core.first(arglist__12164);
arglist__12164 = cljs.core.next(arglist__12164);
var val = cljs.core.first(arglist__12164);
var vals = cljs.core.rest(arglist__12164);
return G__12159__delegate(tcoll,val,vals);
});
G__12159.cljs$core$IFn$_invoke$arity$variadic = G__12159__delegate;
return G__12159;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__12165 = null;
if (arguments.length > 2) {
var G__12166__i = 0, G__12166__a = new Array(arguments.length -  2);
while (G__12166__i < G__12166__a.length) {G__12166__a[G__12166__i] = arguments[G__12166__i + 2]; ++G__12166__i;}
G__12165 = new cljs.core.IndexedSeq(G__12166__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12165);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__12167__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__12168 = ntcoll;
var G__12169 = cljs.core.first(kvs);
var G__12170 = cljs.core.second(kvs);
var G__12171 = cljs.core.nnext(kvs);
tcoll = G__12168;
key = G__12169;
val = G__12170;
kvs = G__12171;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12167 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12172__i = 0, G__12172__a = new Array(arguments.length -  3);
while (G__12172__i < G__12172__a.length) {G__12172__a[G__12172__i] = arguments[G__12172__i + 3]; ++G__12172__i;}
  kvs = new cljs.core.IndexedSeq(G__12172__a,0);
} 
return G__12167__delegate.call(this,tcoll,key,val,kvs);};
G__12167.cljs$lang$maxFixedArity = 3;
G__12167.cljs$lang$applyTo = (function (arglist__12173){
var tcoll = cljs.core.first(arglist__12173);
arglist__12173 = cljs.core.next(arglist__12173);
var key = cljs.core.first(arglist__12173);
arglist__12173 = cljs.core.next(arglist__12173);
var val = cljs.core.first(arglist__12173);
var kvs = cljs.core.rest(arglist__12173);
return G__12167__delegate(tcoll,key,val,kvs);
});
G__12167.cljs$core$IFn$_invoke$arity$variadic = G__12167__delegate;
return G__12167;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__12174 = null;
if (arguments.length > 3) {
var G__12175__i = 0, G__12175__a = new Array(arguments.length -  3);
while (G__12175__i < G__12175__a.length) {G__12175__a[G__12175__i] = arguments[G__12175__i + 3]; ++G__12175__i;}
G__12174 = new cljs.core.IndexedSeq(G__12175__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__12174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__12176__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__12177 = ntcoll;
var G__12178 = cljs.core.first(ks);
var G__12179 = cljs.core.next(ks);
tcoll = G__12177;
key = G__12178;
ks = G__12179;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12176 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12180__i = 0, G__12180__a = new Array(arguments.length -  2);
while (G__12180__i < G__12180__a.length) {G__12180__a[G__12180__i] = arguments[G__12180__i + 2]; ++G__12180__i;}
  ks = new cljs.core.IndexedSeq(G__12180__a,0);
} 
return G__12176__delegate.call(this,tcoll,key,ks);};
G__12176.cljs$lang$maxFixedArity = 2;
G__12176.cljs$lang$applyTo = (function (arglist__12181){
var tcoll = cljs.core.first(arglist__12181);
arglist__12181 = cljs.core.next(arglist__12181);
var key = cljs.core.first(arglist__12181);
var ks = cljs.core.rest(arglist__12181);
return G__12176__delegate(tcoll,key,ks);
});
G__12176.cljs$core$IFn$_invoke$arity$variadic = G__12176__delegate;
return G__12176;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__12182 = null;
if (arguments.length > 2) {
var G__12183__i = 0, G__12183__a = new Array(arguments.length -  2);
while (G__12183__i < G__12183__a.length) {G__12183__a[G__12183__i] = arguments[G__12183__i + 2]; ++G__12183__i;}
G__12182 = new cljs.core.IndexedSeq(G__12183__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__12182);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__12184__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__12185 = ntcoll;
var G__12186 = cljs.core.first(vals);
var G__12187 = cljs.core.next(vals);
tcoll = G__12185;
val = G__12186;
vals = G__12187;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__12184 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__12188__i = 0, G__12188__a = new Array(arguments.length -  2);
while (G__12188__i < G__12188__a.length) {G__12188__a[G__12188__i] = arguments[G__12188__i + 2]; ++G__12188__i;}
  vals = new cljs.core.IndexedSeq(G__12188__a,0);
} 
return G__12184__delegate.call(this,tcoll,val,vals);};
G__12184.cljs$lang$maxFixedArity = 2;
G__12184.cljs$lang$applyTo = (function (arglist__12189){
var tcoll = cljs.core.first(arglist__12189);
arglist__12189 = cljs.core.next(arglist__12189);
var val = cljs.core.first(arglist__12189);
var vals = cljs.core.rest(arglist__12189);
return G__12184__delegate(tcoll,val,vals);
});
G__12184.cljs$core$IFn$_invoke$arity$variadic = G__12184__delegate;
return G__12184;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__12190 = null;
if (arguments.length > 2) {
var G__12191__i = 0, G__12191__a = new Array(arguments.length -  2);
while (G__12191__i < G__12191__a.length) {G__12191__a[G__12191__i] = arguments[G__12191__i + 2]; ++G__12191__i;}
G__12190 = new cljs.core.IndexedSeq(G__12191__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__12190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4721 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4721);
} else {
var G__12402 = a4721;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12402) : f.call(null,G__12402));
}
} else {
var b4722 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4721,b4722);
} else {
var G__12403 = a4721;
var G__12404 = b4722;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12403,G__12404) : f.call(null,G__12403,G__12404));
}
} else {
var c4723 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4721,b4722,c4723);
} else {
var G__12405 = a4721;
var G__12406 = b4722;
var G__12407 = c4723;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12405,G__12406,G__12407) : f.call(null,G__12405,G__12406,G__12407));
}
} else {
var d4724 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4721,b4722,c4723,d4724);
} else {
var G__12408 = a4721;
var G__12409 = b4722;
var G__12410 = c4723;
var G__12411 = d4724;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12408,G__12409,G__12410,G__12411) : f.call(null,G__12408,G__12409,G__12410,G__12411));
}
} else {
var e4725 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4721,b4722,c4723,d4724,e4725);
} else {
var G__12412 = a4721;
var G__12413 = b4722;
var G__12414 = c4723;
var G__12415 = d4724;
var G__12416 = e4725;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12412,G__12413,G__12414,G__12415,G__12416) : f.call(null,G__12412,G__12413,G__12414,G__12415,G__12416));
}
} else {
var f4726 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4721,b4722,c4723,d4724,e4725,f4726);
} else {
var G__12417 = a4721;
var G__12418 = b4722;
var G__12419 = c4723;
var G__12420 = d4724;
var G__12421 = e4725;
var G__12422 = f4726;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12417,G__12418,G__12419,G__12420,G__12421,G__12422) : f.call(null,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422));
}
} else {
var g4727 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4721,b4722,c4723,d4724,e4725,f4726,g4727);
} else {
var G__12423 = a4721;
var G__12424 = b4722;
var G__12425 = c4723;
var G__12426 = d4724;
var G__12427 = e4725;
var G__12428 = f4726;
var G__12429 = g4727;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__12423,G__12424,G__12425,G__12426,G__12427,G__12428,G__12429) : f.call(null,G__12423,G__12424,G__12425,G__12426,G__12427,G__12428,G__12429));
}
} else {
var h4728 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728);
} else {
var G__12430 = a4721;
var G__12431 = b4722;
var G__12432 = c4723;
var G__12433 = d4724;
var G__12434 = e4725;
var G__12435 = f4726;
var G__12436 = g4727;
var G__12437 = h4728;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436,G__12437) : f.call(null,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436,G__12437));
}
} else {
var i4729 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729);
} else {
var G__12438 = a4721;
var G__12439 = b4722;
var G__12440 = c4723;
var G__12441 = d4724;
var G__12442 = e4725;
var G__12443 = f4726;
var G__12444 = g4727;
var G__12445 = h4728;
var G__12446 = i4729;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446) : f.call(null,G__12438,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446));
}
} else {
var j4730 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730);
} else {
var G__12447 = a4721;
var G__12448 = b4722;
var G__12449 = c4723;
var G__12450 = d4724;
var G__12451 = e4725;
var G__12452 = f4726;
var G__12453 = g4727;
var G__12454 = h4728;
var G__12455 = i4729;
var G__12456 = j4730;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455,G__12456) : f.call(null,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455,G__12456));
}
} else {
var k4731 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731);
} else {
var G__12457 = a4721;
var G__12458 = b4722;
var G__12459 = c4723;
var G__12460 = d4724;
var G__12461 = e4725;
var G__12462 = f4726;
var G__12463 = g4727;
var G__12464 = h4728;
var G__12465 = i4729;
var G__12466 = j4730;
var G__12467 = k4731;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467) : f.call(null,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467));
}
} else {
var l4732 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732);
} else {
var G__12468 = a4721;
var G__12469 = b4722;
var G__12470 = c4723;
var G__12471 = d4724;
var G__12472 = e4725;
var G__12473 = f4726;
var G__12474 = g4727;
var G__12475 = h4728;
var G__12476 = i4729;
var G__12477 = j4730;
var G__12478 = k4731;
var G__12479 = l4732;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__12468,G__12469,G__12470,G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479) : f.call(null,G__12468,G__12469,G__12470,G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479));
}
} else {
var m4733 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733);
} else {
var G__12480 = a4721;
var G__12481 = b4722;
var G__12482 = c4723;
var G__12483 = d4724;
var G__12484 = e4725;
var G__12485 = f4726;
var G__12486 = g4727;
var G__12487 = h4728;
var G__12488 = i4729;
var G__12489 = j4730;
var G__12490 = k4731;
var G__12491 = l4732;
var G__12492 = m4733;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488,G__12489,G__12490,G__12491,G__12492) : f.call(null,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488,G__12489,G__12490,G__12491,G__12492));
}
} else {
var n4734 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733,n4734);
} else {
var G__12493 = a4721;
var G__12494 = b4722;
var G__12495 = c4723;
var G__12496 = d4724;
var G__12497 = e4725;
var G__12498 = f4726;
var G__12499 = g4727;
var G__12500 = h4728;
var G__12501 = i4729;
var G__12502 = j4730;
var G__12503 = k4731;
var G__12504 = l4732;
var G__12505 = m4733;
var G__12506 = n4734;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506) : f.call(null,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506));
}
} else {
var o4735 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733,n4734,o4735);
} else {
var G__12507 = a4721;
var G__12508 = b4722;
var G__12509 = c4723;
var G__12510 = d4724;
var G__12511 = e4725;
var G__12512 = f4726;
var G__12513 = g4727;
var G__12514 = h4728;
var G__12515 = i4729;
var G__12516 = j4730;
var G__12517 = k4731;
var G__12518 = l4732;
var G__12519 = m4733;
var G__12520 = n4734;
var G__12521 = o4735;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__12507,G__12508,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521) : f.call(null,G__12507,G__12508,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521));
}
} else {
var p4736 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733,n4734,o4735,p4736);
} else {
var G__12522 = a4721;
var G__12523 = b4722;
var G__12524 = c4723;
var G__12525 = d4724;
var G__12526 = e4725;
var G__12527 = f4726;
var G__12528 = g4727;
var G__12529 = h4728;
var G__12530 = i4729;
var G__12531 = j4730;
var G__12532 = k4731;
var G__12533 = l4732;
var G__12534 = m4733;
var G__12535 = n4734;
var G__12536 = o4735;
var G__12537 = p4736;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537) : f.call(null,G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537));
}
} else {
var q4737 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733,n4734,o4735,p4736,q4737);
} else {
var G__12538 = a4721;
var G__12539 = b4722;
var G__12540 = c4723;
var G__12541 = d4724;
var G__12542 = e4725;
var G__12543 = f4726;
var G__12544 = g4727;
var G__12545 = h4728;
var G__12546 = i4729;
var G__12547 = j4730;
var G__12548 = k4731;
var G__12549 = l4732;
var G__12550 = m4733;
var G__12551 = n4734;
var G__12552 = o4735;
var G__12553 = p4736;
var G__12554 = q4737;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554) : f.call(null,G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554));
}
} else {
var r4738 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733,n4734,o4735,p4736,q4737,r4738);
} else {
var G__12555 = a4721;
var G__12556 = b4722;
var G__12557 = c4723;
var G__12558 = d4724;
var G__12559 = e4725;
var G__12560 = f4726;
var G__12561 = g4727;
var G__12562 = h4728;
var G__12563 = i4729;
var G__12564 = j4730;
var G__12565 = k4731;
var G__12566 = l4732;
var G__12567 = m4733;
var G__12568 = n4734;
var G__12569 = o4735;
var G__12570 = p4736;
var G__12571 = q4737;
var G__12572 = r4738;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569,G__12570,G__12571,G__12572) : f.call(null,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569,G__12570,G__12571,G__12572));
}
} else {
var s4739 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733,n4734,o4735,p4736,q4737,r4738,s4739);
} else {
var G__12573 = a4721;
var G__12574 = b4722;
var G__12575 = c4723;
var G__12576 = d4724;
var G__12577 = e4725;
var G__12578 = f4726;
var G__12579 = g4727;
var G__12580 = h4728;
var G__12581 = i4729;
var G__12582 = j4730;
var G__12583 = k4731;
var G__12584 = l4732;
var G__12585 = m4733;
var G__12586 = n4734;
var G__12587 = o4735;
var G__12588 = p4736;
var G__12589 = q4737;
var G__12590 = r4738;
var G__12591 = s4739;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591) : f.call(null,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582,G__12583,G__12584,G__12585,G__12586,G__12587,G__12588,G__12589,G__12590,G__12591));
}
} else {
var t4740 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4721,b4722,c4723,d4724,e4725,f4726,g4727,h4728,i4729,j4730,k4731,l4732,m4733,n4734,o4735,p4736,q4737,r4738,s4739,t4740);
} else {
var G__12592 = a4721;
var G__12593 = b4722;
var G__12594 = c4723;
var G__12595 = d4724;
var G__12596 = e4725;
var G__12597 = f4726;
var G__12598 = g4727;
var G__12599 = h4728;
var G__12600 = i4729;
var G__12601 = j4730;
var G__12602 = k4731;
var G__12603 = l4732;
var G__12604 = m4733;
var G__12605 = n4734;
var G__12606 = o4735;
var G__12607 = p4736;
var G__12608 = q4737;
var G__12609 = r4738;
var G__12610 = s4739;
var G__12611 = t4740;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611) : f.call(null,G__12592,G__12593,G__12594,G__12595,G__12596,G__12597,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603,G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610,G__12611));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__12612__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__12612 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__12613__i = 0, G__12613__a = new Array(arguments.length -  5);
while (G__12613__i < G__12613__a.length) {G__12613__a[G__12613__i] = arguments[G__12613__i + 5]; ++G__12613__i;}
  args = new cljs.core.IndexedSeq(G__12613__a,0);
} 
return G__12612__delegate.call(this,f,a,b,c,d,args);};
G__12612.cljs$lang$maxFixedArity = 5;
G__12612.cljs$lang$applyTo = (function (arglist__12614){
var f = cljs.core.first(arglist__12614);
arglist__12614 = cljs.core.next(arglist__12614);
var a = cljs.core.first(arglist__12614);
arglist__12614 = cljs.core.next(arglist__12614);
var b = cljs.core.first(arglist__12614);
arglist__12614 = cljs.core.next(arglist__12614);
var c = cljs.core.first(arglist__12614);
arglist__12614 = cljs.core.next(arglist__12614);
var d = cljs.core.first(arglist__12614);
var args = cljs.core.rest(arglist__12614);
return G__12612__delegate(f,a,b,c,d,args);
});
G__12612.cljs$core$IFn$_invoke$arity$variadic = G__12612__delegate;
return G__12612;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__12615 = null;
if (arguments.length > 5) {
var G__12616__i = 0, G__12616__a = new Array(arguments.length -  5);
while (G__12616__i < G__12616__a.length) {G__12616__a[G__12616__i] = arguments[G__12616__i + 5]; ++G__12616__i;}
G__12615 = new cljs.core.IndexedSeq(G__12616__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__12615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__12632 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12632) : f.call(null,G__12632));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__12633 = cljs.core.meta(obj);
var G__12634 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12633,G__12634) : f.call(null,G__12633,G__12634));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__12635 = cljs.core.meta(obj);
var G__12636 = a;
var G__12637 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12635,G__12636,G__12637) : f.call(null,G__12635,G__12636,G__12637));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__12638 = cljs.core.meta(obj);
var G__12639 = a;
var G__12640 = b;
var G__12641 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12638,G__12639,G__12640,G__12641) : f.call(null,G__12638,G__12639,G__12640,G__12641));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__12642 = cljs.core.meta(obj);
var G__12643 = a;
var G__12644 = b;
var G__12645 = c;
var G__12646 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12642,G__12643,G__12644,G__12645,G__12646) : f.call(null,G__12642,G__12643,G__12644,G__12645,G__12646));
})());
});
var vary_meta__7 = (function() { 
var G__12647__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__12647 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__12648__i = 0, G__12648__a = new Array(arguments.length -  6);
while (G__12648__i < G__12648__a.length) {G__12648__a[G__12648__i] = arguments[G__12648__i + 6]; ++G__12648__i;}
  args = new cljs.core.IndexedSeq(G__12648__a,0);
} 
return G__12647__delegate.call(this,obj,f,a,b,c,d,args);};
G__12647.cljs$lang$maxFixedArity = 6;
G__12647.cljs$lang$applyTo = (function (arglist__12649){
var obj = cljs.core.first(arglist__12649);
arglist__12649 = cljs.core.next(arglist__12649);
var f = cljs.core.first(arglist__12649);
arglist__12649 = cljs.core.next(arglist__12649);
var a = cljs.core.first(arglist__12649);
arglist__12649 = cljs.core.next(arglist__12649);
var b = cljs.core.first(arglist__12649);
arglist__12649 = cljs.core.next(arglist__12649);
var c = cljs.core.first(arglist__12649);
arglist__12649 = cljs.core.next(arglist__12649);
var d = cljs.core.first(arglist__12649);
var args = cljs.core.rest(arglist__12649);
return G__12647__delegate(obj,f,a,b,c,d,args);
});
G__12647.cljs$core$IFn$_invoke$arity$variadic = G__12647__delegate;
return G__12647;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__12650 = null;
if (arguments.length > 6) {
var G__12651__i = 0, G__12651__a = new Array(arguments.length -  6);
while (G__12651__i < G__12651__a.length) {G__12651__a[G__12651__i] = arguments[G__12651__i + 6]; ++G__12651__i;}
G__12650 = new cljs.core.IndexedSeq(G__12651__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__12650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__12652__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__12652 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12653__i = 0, G__12653__a = new Array(arguments.length -  2);
while (G__12653__i < G__12653__a.length) {G__12653__a[G__12653__i] = arguments[G__12653__i + 2]; ++G__12653__i;}
  more = new cljs.core.IndexedSeq(G__12653__a,0);
} 
return G__12652__delegate.call(this,x,y,more);};
G__12652.cljs$lang$maxFixedArity = 2;
G__12652.cljs$lang$applyTo = (function (arglist__12654){
var x = cljs.core.first(arglist__12654);
arglist__12654 = cljs.core.next(arglist__12654);
var y = cljs.core.first(arglist__12654);
var more = cljs.core.rest(arglist__12654);
return G__12652__delegate(x,y,more);
});
G__12652.cljs$core$IFn$_invoke$arity$variadic = G__12652__delegate;
return G__12652;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__12655 = null;
if (arguments.length > 2) {
var G__12656__i = 0, G__12656__a = new Array(arguments.length -  2);
while (G__12656__i < G__12656__a.length) {G__12656__a[G__12656__i] = arguments[G__12656__i + 2]; ++G__12656__i;}
G__12655 = new cljs.core.IndexedSeq(G__12656__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t12660 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t12660 = (function (nil_iter,meta12661){
this.nil_iter = nil_iter;
this.meta12661 = meta12661;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t12660.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t12660.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t12660.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t12660.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_12662){
var self__ = this;
var _12662__$1 = this;
return self__.meta12661;
});

cljs.core.t12660.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_12662,meta12661__$1){
var self__ = this;
var _12662__$1 = this;
return (new cljs.core.t12660(self__.nil_iter,meta12661__$1));
});

cljs.core.t12660.cljs$lang$type = true;

cljs.core.t12660.cljs$lang$ctorStr = "cljs.core/t12660";

cljs.core.t12660.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/t12660");
});

cljs.core.__GT_t12660 = (function __GT_t12660(nil_iter__$1,meta12661){
return (new cljs.core.t12660(nil_iter__$1,meta12661));
});

}

return (new cljs.core.t12660(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8,54,cljs.core.constant$keyword$9,2998,cljs.core.constant$keyword$10,3,cljs.core.constant$keyword$11,2994,cljs.core.constant$keyword$12,"/Users/davidnolen/development/clojure/mori/out-mori-adv/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3778__auto__ = !((lt.stepper == null));
if(and__3778__auto__){
return self__.iter.hasNext();
} else {
return and__3778__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__12663 = lt;
var G__12664 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__12663,G__12664) : self__.xform.call(null,G__12663,G__12664));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12665 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12665) : self__.xform.call(null,G__12665));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__12667 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12667) : xform.call(null,G__12667));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__12669 = cljs.core.next(iters__$1);
iters__$1 = G__12669;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4677__auto___12670 = self__.iters.length;
var i_12671 = (0);
while(true){
if((i_12671 < n__4677__auto___12670)){
(self__.nexts[i_12671] = (self__.iters[i_12671]).next());

var G__12672 = (i_12671 + (1));
i_12671 = G__12672;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3778__auto__ = !((lt.stepper == null));
if(and__3778__auto__){
return this$.hasNext();
} else {
return and__3778__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12668 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12668) : self__.xform.call(null,G__12668));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__12677 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12677) : xform.call(null,G__12677));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__12678_12682 = cljs.core.seq(colls);
var chunk__12679_12683 = null;
var count__12680_12684 = (0);
var i__12681_12685 = (0);
while(true){
if((i__12681_12685 < count__12680_12684)){
var coll_12686 = chunk__12679_12683.cljs$core$IIndexed$_nth$arity$2(null,i__12681_12685);
iters.push(cljs.core.iter(coll_12686));

var G__12687 = seq__12678_12682;
var G__12688 = chunk__12679_12683;
var G__12689 = count__12680_12684;
var G__12690 = (i__12681_12685 + (1));
seq__12678_12682 = G__12687;
chunk__12679_12683 = G__12688;
count__12680_12684 = G__12689;
i__12681_12685 = G__12690;
continue;
} else {
var temp__4126__auto___12691 = cljs.core.seq(seq__12678_12682);
if(temp__4126__auto___12691){
var seq__12678_12692__$1 = temp__4126__auto___12691;
if(cljs.core.chunked_seq_QMARK_(seq__12678_12692__$1)){
var c__4577__auto___12693 = cljs.core.chunk_first(seq__12678_12692__$1);
var G__12694 = cljs.core.chunk_rest(seq__12678_12692__$1);
var G__12695 = c__4577__auto___12693;
var G__12696 = cljs.core.count(c__4577__auto___12693);
var G__12697 = (0);
seq__12678_12682 = G__12694;
chunk__12679_12683 = G__12695;
count__12680_12684 = G__12696;
i__12681_12685 = G__12697;
continue;
} else {
var coll_12698 = cljs.core.first(seq__12678_12692__$1);
iters.push(cljs.core.iter(coll_12698));

var G__12699 = cljs.core.next(seq__12678_12692__$1);
var G__12700 = null;
var G__12701 = (0);
var G__12702 = (0);
seq__12678_12682 = G__12699;
chunk__12679_12683 = G__12700;
count__12680_12684 = G__12701;
i__12681_12685 = G__12702;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3790__auto__ = cljs.core.seq(coll);
if(or__3790__auto__){
return or__3790__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__12703__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__12703 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__12704__i = 0, G__12704__a = new Array(arguments.length -  2);
while (G__12704__i < G__12704__a.length) {G__12704__a[G__12704__i] = arguments[G__12704__i + 2]; ++G__12704__i;}
  colls = new cljs.core.IndexedSeq(G__12704__a,0);
} 
return G__12703__delegate.call(this,xform,coll,colls);};
G__12703.cljs$lang$maxFixedArity = 2;
G__12703.cljs$lang$applyTo = (function (arglist__12705){
var xform = cljs.core.first(arglist__12705);
arglist__12705 = cljs.core.next(arglist__12705);
var coll = cljs.core.first(arglist__12705);
var colls = cljs.core.rest(arglist__12705);
return G__12703__delegate(xform,coll,colls);
});
G__12703.cljs$core$IFn$_invoke$arity$variadic = G__12703__delegate;
return G__12703;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__12706 = null;
if (arguments.length > 2) {
var G__12707__i = 0, G__12707__a = new Array(arguments.length -  2);
while (G__12707__i < G__12707__a.length) {G__12707__a[G__12707__i] = arguments[G__12707__i + 2]; ++G__12707__i;}
G__12706 = new cljs.core.IndexedSeq(G__12707__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__12706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__12709 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12709) : pred.call(null,G__12709));
})())){
var G__12710 = pred;
var G__12711 = cljs.core.next(coll);
pred = G__12710;
coll = G__12711;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3790__auto__ = (function (){var G__12715 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12715) : pred.call(null,G__12715));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var G__12716 = pred;
var G__12717 = cljs.core.next(coll);
pred = G__12716;
coll = G__12717;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__12724 = null;
var G__12724__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__12724__1 = (function (x){
return cljs.core.not((function (){var G__12721 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12721) : f.call(null,G__12721));
})());
});
var G__12724__2 = (function (x,y){
return cljs.core.not((function (){var G__12722 = x;
var G__12723 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12722,G__12723) : f.call(null,G__12722,G__12723));
})());
});
var G__12724__3 = (function() { 
var G__12725__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__12725 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12726__i = 0, G__12726__a = new Array(arguments.length -  2);
while (G__12726__i < G__12726__a.length) {G__12726__a[G__12726__i] = arguments[G__12726__i + 2]; ++G__12726__i;}
  zs = new cljs.core.IndexedSeq(G__12726__a,0);
} 
return G__12725__delegate.call(this,x,y,zs);};
G__12725.cljs$lang$maxFixedArity = 2;
G__12725.cljs$lang$applyTo = (function (arglist__12727){
var x = cljs.core.first(arglist__12727);
arglist__12727 = cljs.core.next(arglist__12727);
var y = cljs.core.first(arglist__12727);
var zs = cljs.core.rest(arglist__12727);
return G__12725__delegate(x,y,zs);
});
G__12725.cljs$core$IFn$_invoke$arity$variadic = G__12725__delegate;
return G__12725;
})()
;
G__12724 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__12724__0.call(this);
case 1:
return G__12724__1.call(this,x);
case 2:
return G__12724__2.call(this,x,y);
default:
var G__12728 = null;
if (arguments.length > 2) {
var G__12729__i = 0, G__12729__a = new Array(arguments.length -  2);
while (G__12729__i < G__12729__a.length) {G__12729__a[G__12729__i] = arguments[G__12729__i + 2]; ++G__12729__i;}
G__12728 = new cljs.core.IndexedSeq(G__12729__a,0);
}
return G__12724__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12724.cljs$lang$maxFixedArity = 2;
G__12724.cljs$lang$applyTo = G__12724__3.cljs$lang$applyTo;
G__12724.cljs$core$IFn$_invoke$arity$0 = G__12724__0;
G__12724.cljs$core$IFn$_invoke$arity$1 = G__12724__1;
G__12724.cljs$core$IFn$_invoke$arity$2 = G__12724__2;
G__12724.cljs$core$IFn$_invoke$arity$variadic = G__12724__3.cljs$core$IFn$_invoke$arity$variadic;
return G__12724;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__12730__delegate = function (args){
return x;
};
var G__12730 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12731__i = 0, G__12731__a = new Array(arguments.length -  0);
while (G__12731__i < G__12731__a.length) {G__12731__a[G__12731__i] = arguments[G__12731__i + 0]; ++G__12731__i;}
  args = new cljs.core.IndexedSeq(G__12731__a,0);
} 
return G__12730__delegate.call(this,args);};
G__12730.cljs$lang$maxFixedArity = 0;
G__12730.cljs$lang$applyTo = (function (arglist__12732){
var args = cljs.core.seq(arglist__12732);
return G__12730__delegate(args);
});
G__12730.cljs$core$IFn$_invoke$arity$variadic = G__12730__delegate;
return G__12730;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__12787 = null;
var G__12787__0 = (function (){
var G__12760 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12760) : f.call(null,G__12760));
});
var G__12787__1 = (function (x){
var G__12761 = (function (){var G__12762 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12762) : g.call(null,G__12762));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12761) : f.call(null,G__12761));
});
var G__12787__2 = (function (x,y){
var G__12763 = (function (){var G__12764 = x;
var G__12765 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12764,G__12765) : g.call(null,G__12764,G__12765));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12763) : f.call(null,G__12763));
});
var G__12787__3 = (function (x,y,z){
var G__12766 = (function (){var G__12767 = x;
var G__12768 = y;
var G__12769 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12767,G__12768,G__12769) : g.call(null,G__12767,G__12768,G__12769));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12766) : f.call(null,G__12766));
});
var G__12787__4 = (function() { 
var G__12788__delegate = function (x,y,z,args){
var G__12770 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12770) : f.call(null,G__12770));
};
var G__12788 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12789__i = 0, G__12789__a = new Array(arguments.length -  3);
while (G__12789__i < G__12789__a.length) {G__12789__a[G__12789__i] = arguments[G__12789__i + 3]; ++G__12789__i;}
  args = new cljs.core.IndexedSeq(G__12789__a,0);
} 
return G__12788__delegate.call(this,x,y,z,args);};
G__12788.cljs$lang$maxFixedArity = 3;
G__12788.cljs$lang$applyTo = (function (arglist__12790){
var x = cljs.core.first(arglist__12790);
arglist__12790 = cljs.core.next(arglist__12790);
var y = cljs.core.first(arglist__12790);
arglist__12790 = cljs.core.next(arglist__12790);
var z = cljs.core.first(arglist__12790);
var args = cljs.core.rest(arglist__12790);
return G__12788__delegate(x,y,z,args);
});
G__12788.cljs$core$IFn$_invoke$arity$variadic = G__12788__delegate;
return G__12788;
})()
;
G__12787 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12787__0.call(this);
case 1:
return G__12787__1.call(this,x);
case 2:
return G__12787__2.call(this,x,y);
case 3:
return G__12787__3.call(this,x,y,z);
default:
var G__12791 = null;
if (arguments.length > 3) {
var G__12792__i = 0, G__12792__a = new Array(arguments.length -  3);
while (G__12792__i < G__12792__a.length) {G__12792__a[G__12792__i] = arguments[G__12792__i + 3]; ++G__12792__i;}
G__12791 = new cljs.core.IndexedSeq(G__12792__a,0);
}
return G__12787__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12787.cljs$lang$maxFixedArity = 3;
G__12787.cljs$lang$applyTo = G__12787__4.cljs$lang$applyTo;
G__12787.cljs$core$IFn$_invoke$arity$0 = G__12787__0;
G__12787.cljs$core$IFn$_invoke$arity$1 = G__12787__1;
G__12787.cljs$core$IFn$_invoke$arity$2 = G__12787__2;
G__12787.cljs$core$IFn$_invoke$arity$3 = G__12787__3;
G__12787.cljs$core$IFn$_invoke$arity$variadic = G__12787__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12787;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__12793 = null;
var G__12793__0 = (function (){
var G__12771 = (function (){var G__12772 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12772) : g.call(null,G__12772));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12771) : f.call(null,G__12771));
});
var G__12793__1 = (function (x){
var G__12773 = (function (){var G__12774 = (function (){var G__12775 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12775) : h.call(null,G__12775));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12774) : g.call(null,G__12774));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12773) : f.call(null,G__12773));
});
var G__12793__2 = (function (x,y){
var G__12776 = (function (){var G__12777 = (function (){var G__12778 = x;
var G__12779 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12778,G__12779) : h.call(null,G__12778,G__12779));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12777) : g.call(null,G__12777));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12776) : f.call(null,G__12776));
});
var G__12793__3 = (function (x,y,z){
var G__12780 = (function (){var G__12781 = (function (){var G__12782 = x;
var G__12783 = y;
var G__12784 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12782,G__12783,G__12784) : h.call(null,G__12782,G__12783,G__12784));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12781) : g.call(null,G__12781));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12780) : f.call(null,G__12780));
});
var G__12793__4 = (function() { 
var G__12794__delegate = function (x,y,z,args){
var G__12785 = (function (){var G__12786 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12786) : g.call(null,G__12786));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12785) : f.call(null,G__12785));
};
var G__12794 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12795__i = 0, G__12795__a = new Array(arguments.length -  3);
while (G__12795__i < G__12795__a.length) {G__12795__a[G__12795__i] = arguments[G__12795__i + 3]; ++G__12795__i;}
  args = new cljs.core.IndexedSeq(G__12795__a,0);
} 
return G__12794__delegate.call(this,x,y,z,args);};
G__12794.cljs$lang$maxFixedArity = 3;
G__12794.cljs$lang$applyTo = (function (arglist__12796){
var x = cljs.core.first(arglist__12796);
arglist__12796 = cljs.core.next(arglist__12796);
var y = cljs.core.first(arglist__12796);
arglist__12796 = cljs.core.next(arglist__12796);
var z = cljs.core.first(arglist__12796);
var args = cljs.core.rest(arglist__12796);
return G__12794__delegate(x,y,z,args);
});
G__12794.cljs$core$IFn$_invoke$arity$variadic = G__12794__delegate;
return G__12794;
})()
;
G__12793 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12793__0.call(this);
case 1:
return G__12793__1.call(this,x);
case 2:
return G__12793__2.call(this,x,y);
case 3:
return G__12793__3.call(this,x,y,z);
default:
var G__12797 = null;
if (arguments.length > 3) {
var G__12798__i = 0, G__12798__a = new Array(arguments.length -  3);
while (G__12798__i < G__12798__a.length) {G__12798__a[G__12798__i] = arguments[G__12798__i + 3]; ++G__12798__i;}
G__12797 = new cljs.core.IndexedSeq(G__12798__a,0);
}
return G__12793__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12797);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12793.cljs$lang$maxFixedArity = 3;
G__12793.cljs$lang$applyTo = G__12793__4.cljs$lang$applyTo;
G__12793.cljs$core$IFn$_invoke$arity$0 = G__12793__0;
G__12793.cljs$core$IFn$_invoke$arity$1 = G__12793__1;
G__12793.cljs$core$IFn$_invoke$arity$2 = G__12793__2;
G__12793.cljs$core$IFn$_invoke$arity$3 = G__12793__3;
G__12793.cljs$core$IFn$_invoke$arity$variadic = G__12793__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12793;
})()
});
var comp__4 = (function() { 
var G__12799__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__12800__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__12801 = cljs.core.first(fs__$2).call(null,ret);
var G__12802 = cljs.core.next(fs__$2);
ret = G__12801;
fs__$2 = G__12802;
continue;
} else {
return ret;
}
break;
}
};
var G__12800 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12803__i = 0, G__12803__a = new Array(arguments.length -  0);
while (G__12803__i < G__12803__a.length) {G__12803__a[G__12803__i] = arguments[G__12803__i + 0]; ++G__12803__i;}
  args = new cljs.core.IndexedSeq(G__12803__a,0);
} 
return G__12800__delegate.call(this,args);};
G__12800.cljs$lang$maxFixedArity = 0;
G__12800.cljs$lang$applyTo = (function (arglist__12804){
var args = cljs.core.seq(arglist__12804);
return G__12800__delegate(args);
});
G__12800.cljs$core$IFn$_invoke$arity$variadic = G__12800__delegate;
return G__12800;
})()
;
;})(fs__$1))
};
var G__12799 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__12805__i = 0, G__12805__a = new Array(arguments.length -  3);
while (G__12805__i < G__12805__a.length) {G__12805__a[G__12805__i] = arguments[G__12805__i + 3]; ++G__12805__i;}
  fs = new cljs.core.IndexedSeq(G__12805__a,0);
} 
return G__12799__delegate.call(this,f1,f2,f3,fs);};
G__12799.cljs$lang$maxFixedArity = 3;
G__12799.cljs$lang$applyTo = (function (arglist__12806){
var f1 = cljs.core.first(arglist__12806);
arglist__12806 = cljs.core.next(arglist__12806);
var f2 = cljs.core.first(arglist__12806);
arglist__12806 = cljs.core.next(arglist__12806);
var f3 = cljs.core.first(arglist__12806);
var fs = cljs.core.rest(arglist__12806);
return G__12799__delegate(f1,f2,f3,fs);
});
G__12799.cljs$core$IFn$_invoke$arity$variadic = G__12799__delegate;
return G__12799;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__12807 = null;
if (arguments.length > 3) {
var G__12808__i = 0, G__12808__a = new Array(arguments.length -  3);
while (G__12808__i < G__12808__a.length) {G__12808__a[G__12808__i] = arguments[G__12808__i + 3]; ++G__12808__i;}
G__12807 = new cljs.core.IndexedSeq(G__12808__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__12807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__12893 = null;
var G__12893__0 = (function (){
var G__12851 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12851) : f.call(null,G__12851));
});
var G__12893__1 = (function (x){
var G__12852 = arg1;
var G__12853 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12852,G__12853) : f.call(null,G__12852,G__12853));
});
var G__12893__2 = (function (x,y){
var G__12854 = arg1;
var G__12855 = x;
var G__12856 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12854,G__12855,G__12856) : f.call(null,G__12854,G__12855,G__12856));
});
var G__12893__3 = (function (x,y,z){
var G__12857 = arg1;
var G__12858 = x;
var G__12859 = y;
var G__12860 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12857,G__12858,G__12859,G__12860) : f.call(null,G__12857,G__12858,G__12859,G__12860));
});
var G__12893__4 = (function() { 
var G__12894__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__12894 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12895__i = 0, G__12895__a = new Array(arguments.length -  3);
while (G__12895__i < G__12895__a.length) {G__12895__a[G__12895__i] = arguments[G__12895__i + 3]; ++G__12895__i;}
  args = new cljs.core.IndexedSeq(G__12895__a,0);
} 
return G__12894__delegate.call(this,x,y,z,args);};
G__12894.cljs$lang$maxFixedArity = 3;
G__12894.cljs$lang$applyTo = (function (arglist__12896){
var x = cljs.core.first(arglist__12896);
arglist__12896 = cljs.core.next(arglist__12896);
var y = cljs.core.first(arglist__12896);
arglist__12896 = cljs.core.next(arglist__12896);
var z = cljs.core.first(arglist__12896);
var args = cljs.core.rest(arglist__12896);
return G__12894__delegate(x,y,z,args);
});
G__12894.cljs$core$IFn$_invoke$arity$variadic = G__12894__delegate;
return G__12894;
})()
;
G__12893 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12893__0.call(this);
case 1:
return G__12893__1.call(this,x);
case 2:
return G__12893__2.call(this,x,y);
case 3:
return G__12893__3.call(this,x,y,z);
default:
var G__12897 = null;
if (arguments.length > 3) {
var G__12898__i = 0, G__12898__a = new Array(arguments.length -  3);
while (G__12898__i < G__12898__a.length) {G__12898__a[G__12898__i] = arguments[G__12898__i + 3]; ++G__12898__i;}
G__12897 = new cljs.core.IndexedSeq(G__12898__a,0);
}
return G__12893__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12893.cljs$lang$maxFixedArity = 3;
G__12893.cljs$lang$applyTo = G__12893__4.cljs$lang$applyTo;
G__12893.cljs$core$IFn$_invoke$arity$0 = G__12893__0;
G__12893.cljs$core$IFn$_invoke$arity$1 = G__12893__1;
G__12893.cljs$core$IFn$_invoke$arity$2 = G__12893__2;
G__12893.cljs$core$IFn$_invoke$arity$3 = G__12893__3;
G__12893.cljs$core$IFn$_invoke$arity$variadic = G__12893__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12893;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__12899 = null;
var G__12899__0 = (function (){
var G__12861 = arg1;
var G__12862 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12861,G__12862) : f.call(null,G__12861,G__12862));
});
var G__12899__1 = (function (x){
var G__12863 = arg1;
var G__12864 = arg2;
var G__12865 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12863,G__12864,G__12865) : f.call(null,G__12863,G__12864,G__12865));
});
var G__12899__2 = (function (x,y){
var G__12866 = arg1;
var G__12867 = arg2;
var G__12868 = x;
var G__12869 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12866,G__12867,G__12868,G__12869) : f.call(null,G__12866,G__12867,G__12868,G__12869));
});
var G__12899__3 = (function (x,y,z){
var G__12870 = arg1;
var G__12871 = arg2;
var G__12872 = x;
var G__12873 = y;
var G__12874 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12870,G__12871,G__12872,G__12873,G__12874) : f.call(null,G__12870,G__12871,G__12872,G__12873,G__12874));
});
var G__12899__4 = (function() { 
var G__12900__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__12900 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12901__i = 0, G__12901__a = new Array(arguments.length -  3);
while (G__12901__i < G__12901__a.length) {G__12901__a[G__12901__i] = arguments[G__12901__i + 3]; ++G__12901__i;}
  args = new cljs.core.IndexedSeq(G__12901__a,0);
} 
return G__12900__delegate.call(this,x,y,z,args);};
G__12900.cljs$lang$maxFixedArity = 3;
G__12900.cljs$lang$applyTo = (function (arglist__12902){
var x = cljs.core.first(arglist__12902);
arglist__12902 = cljs.core.next(arglist__12902);
var y = cljs.core.first(arglist__12902);
arglist__12902 = cljs.core.next(arglist__12902);
var z = cljs.core.first(arglist__12902);
var args = cljs.core.rest(arglist__12902);
return G__12900__delegate(x,y,z,args);
});
G__12900.cljs$core$IFn$_invoke$arity$variadic = G__12900__delegate;
return G__12900;
})()
;
G__12899 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12899__0.call(this);
case 1:
return G__12899__1.call(this,x);
case 2:
return G__12899__2.call(this,x,y);
case 3:
return G__12899__3.call(this,x,y,z);
default:
var G__12903 = null;
if (arguments.length > 3) {
var G__12904__i = 0, G__12904__a = new Array(arguments.length -  3);
while (G__12904__i < G__12904__a.length) {G__12904__a[G__12904__i] = arguments[G__12904__i + 3]; ++G__12904__i;}
G__12903 = new cljs.core.IndexedSeq(G__12904__a,0);
}
return G__12899__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12903);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12899.cljs$lang$maxFixedArity = 3;
G__12899.cljs$lang$applyTo = G__12899__4.cljs$lang$applyTo;
G__12899.cljs$core$IFn$_invoke$arity$0 = G__12899__0;
G__12899.cljs$core$IFn$_invoke$arity$1 = G__12899__1;
G__12899.cljs$core$IFn$_invoke$arity$2 = G__12899__2;
G__12899.cljs$core$IFn$_invoke$arity$3 = G__12899__3;
G__12899.cljs$core$IFn$_invoke$arity$variadic = G__12899__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12899;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__12905 = null;
var G__12905__0 = (function (){
var G__12875 = arg1;
var G__12876 = arg2;
var G__12877 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12875,G__12876,G__12877) : f.call(null,G__12875,G__12876,G__12877));
});
var G__12905__1 = (function (x){
var G__12878 = arg1;
var G__12879 = arg2;
var G__12880 = arg3;
var G__12881 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12878,G__12879,G__12880,G__12881) : f.call(null,G__12878,G__12879,G__12880,G__12881));
});
var G__12905__2 = (function (x,y){
var G__12882 = arg1;
var G__12883 = arg2;
var G__12884 = arg3;
var G__12885 = x;
var G__12886 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12882,G__12883,G__12884,G__12885,G__12886) : f.call(null,G__12882,G__12883,G__12884,G__12885,G__12886));
});
var G__12905__3 = (function (x,y,z){
var G__12887 = arg1;
var G__12888 = arg2;
var G__12889 = arg3;
var G__12890 = x;
var G__12891 = y;
var G__12892 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12887,G__12888,G__12889,G__12890,G__12891,G__12892) : f.call(null,G__12887,G__12888,G__12889,G__12890,G__12891,G__12892));
});
var G__12905__4 = (function() { 
var G__12906__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__12906 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12907__i = 0, G__12907__a = new Array(arguments.length -  3);
while (G__12907__i < G__12907__a.length) {G__12907__a[G__12907__i] = arguments[G__12907__i + 3]; ++G__12907__i;}
  args = new cljs.core.IndexedSeq(G__12907__a,0);
} 
return G__12906__delegate.call(this,x,y,z,args);};
G__12906.cljs$lang$maxFixedArity = 3;
G__12906.cljs$lang$applyTo = (function (arglist__12908){
var x = cljs.core.first(arglist__12908);
arglist__12908 = cljs.core.next(arglist__12908);
var y = cljs.core.first(arglist__12908);
arglist__12908 = cljs.core.next(arglist__12908);
var z = cljs.core.first(arglist__12908);
var args = cljs.core.rest(arglist__12908);
return G__12906__delegate(x,y,z,args);
});
G__12906.cljs$core$IFn$_invoke$arity$variadic = G__12906__delegate;
return G__12906;
})()
;
G__12905 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12905__0.call(this);
case 1:
return G__12905__1.call(this,x);
case 2:
return G__12905__2.call(this,x,y);
case 3:
return G__12905__3.call(this,x,y,z);
default:
var G__12909 = null;
if (arguments.length > 3) {
var G__12910__i = 0, G__12910__a = new Array(arguments.length -  3);
while (G__12910__i < G__12910__a.length) {G__12910__a[G__12910__i] = arguments[G__12910__i + 3]; ++G__12910__i;}
G__12909 = new cljs.core.IndexedSeq(G__12910__a,0);
}
return G__12905__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12905.cljs$lang$maxFixedArity = 3;
G__12905.cljs$lang$applyTo = G__12905__4.cljs$lang$applyTo;
G__12905.cljs$core$IFn$_invoke$arity$0 = G__12905__0;
G__12905.cljs$core$IFn$_invoke$arity$1 = G__12905__1;
G__12905.cljs$core$IFn$_invoke$arity$2 = G__12905__2;
G__12905.cljs$core$IFn$_invoke$arity$3 = G__12905__3;
G__12905.cljs$core$IFn$_invoke$arity$variadic = G__12905__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12905;
})()
});
var partial__5 = (function() { 
var G__12911__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__12912__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__12912 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12913__i = 0, G__12913__a = new Array(arguments.length -  0);
while (G__12913__i < G__12913__a.length) {G__12913__a[G__12913__i] = arguments[G__12913__i + 0]; ++G__12913__i;}
  args = new cljs.core.IndexedSeq(G__12913__a,0);
} 
return G__12912__delegate.call(this,args);};
G__12912.cljs$lang$maxFixedArity = 0;
G__12912.cljs$lang$applyTo = (function (arglist__12914){
var args = cljs.core.seq(arglist__12914);
return G__12912__delegate(args);
});
G__12912.cljs$core$IFn$_invoke$arity$variadic = G__12912__delegate;
return G__12912;
})()
;
};
var G__12911 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__12915__i = 0, G__12915__a = new Array(arguments.length -  4);
while (G__12915__i < G__12915__a.length) {G__12915__a[G__12915__i] = arguments[G__12915__i + 4]; ++G__12915__i;}
  more = new cljs.core.IndexedSeq(G__12915__a,0);
} 
return G__12911__delegate.call(this,f,arg1,arg2,arg3,more);};
G__12911.cljs$lang$maxFixedArity = 4;
G__12911.cljs$lang$applyTo = (function (arglist__12916){
var f = cljs.core.first(arglist__12916);
arglist__12916 = cljs.core.next(arglist__12916);
var arg1 = cljs.core.first(arglist__12916);
arglist__12916 = cljs.core.next(arglist__12916);
var arg2 = cljs.core.first(arglist__12916);
arglist__12916 = cljs.core.next(arglist__12916);
var arg3 = cljs.core.first(arglist__12916);
var more = cljs.core.rest(arglist__12916);
return G__12911__delegate(f,arg1,arg2,arg3,more);
});
G__12911.cljs$core$IFn$_invoke$arity$variadic = G__12911__delegate;
return G__12911;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__12917 = null;
if (arguments.length > 4) {
var G__12918__i = 0, G__12918__a = new Array(arguments.length -  4);
while (G__12918__i < G__12918__a.length) {G__12918__a[G__12918__i] = arguments[G__12918__i + 4]; ++G__12918__i;}
G__12917 = new cljs.core.IndexedSeq(G__12918__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__12917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__12951 = null;
var G__12951__1 = (function (a){
var G__12935 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12935) : f.call(null,G__12935));
});
var G__12951__2 = (function (a,b){
var G__12936 = (((a == null))?x:a);
var G__12937 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12936,G__12937) : f.call(null,G__12936,G__12937));
});
var G__12951__3 = (function (a,b,c){
var G__12938 = (((a == null))?x:a);
var G__12939 = b;
var G__12940 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12938,G__12939,G__12940) : f.call(null,G__12938,G__12939,G__12940));
});
var G__12951__4 = (function() { 
var G__12952__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__12952 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12953__i = 0, G__12953__a = new Array(arguments.length -  3);
while (G__12953__i < G__12953__a.length) {G__12953__a[G__12953__i] = arguments[G__12953__i + 3]; ++G__12953__i;}
  ds = new cljs.core.IndexedSeq(G__12953__a,0);
} 
return G__12952__delegate.call(this,a,b,c,ds);};
G__12952.cljs$lang$maxFixedArity = 3;
G__12952.cljs$lang$applyTo = (function (arglist__12954){
var a = cljs.core.first(arglist__12954);
arglist__12954 = cljs.core.next(arglist__12954);
var b = cljs.core.first(arglist__12954);
arglist__12954 = cljs.core.next(arglist__12954);
var c = cljs.core.first(arglist__12954);
var ds = cljs.core.rest(arglist__12954);
return G__12952__delegate(a,b,c,ds);
});
G__12952.cljs$core$IFn$_invoke$arity$variadic = G__12952__delegate;
return G__12952;
})()
;
G__12951 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__12951__1.call(this,a);
case 2:
return G__12951__2.call(this,a,b);
case 3:
return G__12951__3.call(this,a,b,c);
default:
var G__12955 = null;
if (arguments.length > 3) {
var G__12956__i = 0, G__12956__a = new Array(arguments.length -  3);
while (G__12956__i < G__12956__a.length) {G__12956__a[G__12956__i] = arguments[G__12956__i + 3]; ++G__12956__i;}
G__12955 = new cljs.core.IndexedSeq(G__12956__a,0);
}
return G__12951__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12951.cljs$lang$maxFixedArity = 3;
G__12951.cljs$lang$applyTo = G__12951__4.cljs$lang$applyTo;
G__12951.cljs$core$IFn$_invoke$arity$1 = G__12951__1;
G__12951.cljs$core$IFn$_invoke$arity$2 = G__12951__2;
G__12951.cljs$core$IFn$_invoke$arity$3 = G__12951__3;
G__12951.cljs$core$IFn$_invoke$arity$variadic = G__12951__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12951;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__12957 = null;
var G__12957__2 = (function (a,b){
var G__12941 = (((a == null))?x:a);
var G__12942 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12941,G__12942) : f.call(null,G__12941,G__12942));
});
var G__12957__3 = (function (a,b,c){
var G__12943 = (((a == null))?x:a);
var G__12944 = (((b == null))?y:b);
var G__12945 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12943,G__12944,G__12945) : f.call(null,G__12943,G__12944,G__12945));
});
var G__12957__4 = (function() { 
var G__12958__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__12958 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12959__i = 0, G__12959__a = new Array(arguments.length -  3);
while (G__12959__i < G__12959__a.length) {G__12959__a[G__12959__i] = arguments[G__12959__i + 3]; ++G__12959__i;}
  ds = new cljs.core.IndexedSeq(G__12959__a,0);
} 
return G__12958__delegate.call(this,a,b,c,ds);};
G__12958.cljs$lang$maxFixedArity = 3;
G__12958.cljs$lang$applyTo = (function (arglist__12960){
var a = cljs.core.first(arglist__12960);
arglist__12960 = cljs.core.next(arglist__12960);
var b = cljs.core.first(arglist__12960);
arglist__12960 = cljs.core.next(arglist__12960);
var c = cljs.core.first(arglist__12960);
var ds = cljs.core.rest(arglist__12960);
return G__12958__delegate(a,b,c,ds);
});
G__12958.cljs$core$IFn$_invoke$arity$variadic = G__12958__delegate;
return G__12958;
})()
;
G__12957 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12957__2.call(this,a,b);
case 3:
return G__12957__3.call(this,a,b,c);
default:
var G__12961 = null;
if (arguments.length > 3) {
var G__12962__i = 0, G__12962__a = new Array(arguments.length -  3);
while (G__12962__i < G__12962__a.length) {G__12962__a[G__12962__i] = arguments[G__12962__i + 3]; ++G__12962__i;}
G__12961 = new cljs.core.IndexedSeq(G__12962__a,0);
}
return G__12957__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12957.cljs$lang$maxFixedArity = 3;
G__12957.cljs$lang$applyTo = G__12957__4.cljs$lang$applyTo;
G__12957.cljs$core$IFn$_invoke$arity$2 = G__12957__2;
G__12957.cljs$core$IFn$_invoke$arity$3 = G__12957__3;
G__12957.cljs$core$IFn$_invoke$arity$variadic = G__12957__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12957;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__12963 = null;
var G__12963__2 = (function (a,b){
var G__12946 = (((a == null))?x:a);
var G__12947 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12946,G__12947) : f.call(null,G__12946,G__12947));
});
var G__12963__3 = (function (a,b,c){
var G__12948 = (((a == null))?x:a);
var G__12949 = (((b == null))?y:b);
var G__12950 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12948,G__12949,G__12950) : f.call(null,G__12948,G__12949,G__12950));
});
var G__12963__4 = (function() { 
var G__12964__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__12964 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12965__i = 0, G__12965__a = new Array(arguments.length -  3);
while (G__12965__i < G__12965__a.length) {G__12965__a[G__12965__i] = arguments[G__12965__i + 3]; ++G__12965__i;}
  ds = new cljs.core.IndexedSeq(G__12965__a,0);
} 
return G__12964__delegate.call(this,a,b,c,ds);};
G__12964.cljs$lang$maxFixedArity = 3;
G__12964.cljs$lang$applyTo = (function (arglist__12966){
var a = cljs.core.first(arglist__12966);
arglist__12966 = cljs.core.next(arglist__12966);
var b = cljs.core.first(arglist__12966);
arglist__12966 = cljs.core.next(arglist__12966);
var c = cljs.core.first(arglist__12966);
var ds = cljs.core.rest(arglist__12966);
return G__12964__delegate(a,b,c,ds);
});
G__12964.cljs$core$IFn$_invoke$arity$variadic = G__12964__delegate;
return G__12964;
})()
;
G__12963 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12963__2.call(this,a,b);
case 3:
return G__12963__3.call(this,a,b,c);
default:
var G__12967 = null;
if (arguments.length > 3) {
var G__12968__i = 0, G__12968__a = new Array(arguments.length -  3);
while (G__12968__i < G__12968__a.length) {G__12968__a[G__12968__i] = arguments[G__12968__i + 3]; ++G__12968__i;}
G__12967 = new cljs.core.IndexedSeq(G__12968__a,0);
}
return G__12963__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12963.cljs$lang$maxFixedArity = 3;
G__12963.cljs$lang$applyTo = G__12963__4.cljs$lang$applyTo;
G__12963.cljs$core$IFn$_invoke$arity$2 = G__12963__2;
G__12963.cljs$core$IFn$_invoke$arity$3 = G__12963__3;
G__12963.cljs$core$IFn$_invoke$arity$variadic = G__12963__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12963;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4677__auto___13017 = size;
var i_13018 = (0);
while(true){
if((i_13018 < n__4677__auto___13017)){
cljs.core.chunk_append(b,(function (){var G__13013 = (idx + i_13018);
var G__13014 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13018);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13013,G__13014) : f.call(null,G__13013,G__13014));
})());

var G__13019 = (i_13018 + (1));
i_13018 = G__13019;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13015 = idx;
var G__13016 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13015,G__13016) : f.call(null,G__13015,G__13016));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13038 = null;
var G__13038__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13038__1 = (function (result){
var G__13032 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13032) : rf.call(null,G__13032));
});
var G__13038__2 = (function (result,input){
var v = (function (){var G__13033 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13033) : f.call(null,G__13033));
})();
if((v == null)){
return result;
} else {
var G__13034 = result;
var G__13035 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13034,G__13035) : rf.call(null,G__13034,G__13035));
}
});
G__13038 = function(result,input){
switch(arguments.length){
case 0:
return G__13038__0.call(this);
case 1:
return G__13038__1.call(this,result);
case 2:
return G__13038__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13038.cljs$core$IFn$_invoke$arity$0 = G__13038__0;
G__13038.cljs$core$IFn$_invoke$arity$1 = G__13038__1;
G__13038.cljs$core$IFn$_invoke$arity$2 = G__13038__2;
return G__13038;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4677__auto___13039 = size;
var i_13040 = (0);
while(true){
if((i_13040 < n__4677__auto___13039)){
var x_13041 = (function (){var G__13036 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13040);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13036) : f.call(null,G__13036));
})();
if((x_13041 == null)){
} else {
cljs.core.chunk_append(b,x_13041);
}

var G__13042 = (i_13040 + (1));
i_13040 = G__13042;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13037 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13037) : f.call(null,G__13037));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13043 = this$__$1;
return goog.getUid(G__13043);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13044 = cljs.core.seq(self__.watches);
var chunk__13045 = null;
var count__13046 = (0);
var i__13047 = (0);
while(true){
if((i__13047 < count__13046)){
var vec__13048 = chunk__13045.cljs$core$IIndexed$_nth$arity$2(null,i__13047);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13048,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13048,(1),null);
var G__13049_13058 = key;
var G__13050_13059 = this$__$1;
var G__13051_13060 = oldval;
var G__13052_13061 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13049_13058,G__13050_13059,G__13051_13060,G__13052_13061) : f.call(null,G__13049_13058,G__13050_13059,G__13051_13060,G__13052_13061));

var G__13062 = seq__13044;
var G__13063 = chunk__13045;
var G__13064 = count__13046;
var G__13065 = (i__13047 + (1));
seq__13044 = G__13062;
chunk__13045 = G__13063;
count__13046 = G__13064;
i__13047 = G__13065;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13044);
if(temp__4126__auto__){
var seq__13044__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13044__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__13044__$1);
var G__13066 = cljs.core.chunk_rest(seq__13044__$1);
var G__13067 = c__4577__auto__;
var G__13068 = cljs.core.count(c__4577__auto__);
var G__13069 = (0);
seq__13044 = G__13066;
chunk__13045 = G__13067;
count__13046 = G__13068;
i__13047 = G__13069;
continue;
} else {
var vec__13053 = cljs.core.first(seq__13044__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13053,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13053,(1),null);
var G__13054_13070 = key;
var G__13055_13071 = this$__$1;
var G__13056_13072 = oldval;
var G__13057_13073 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13054_13070,G__13055_13071,G__13056_13072,G__13057_13073) : f.call(null,G__13054_13070,G__13055_13071,G__13056_13072,G__13057_13073));

var G__13074 = cljs.core.next(seq__13044__$1);
var G__13075 = null;
var G__13076 = (0);
var G__13077 = (0);
seq__13044 = G__13074;
chunk__13045 = G__13075;
count__13046 = G__13076;
i__13047 = G__13077;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13081__delegate = function (x,p__13078){
var map__13080 = p__13078;
var map__13080__$1 = ((cljs.core.seq_QMARK_(map__13080))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13080):map__13080);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13080__$1,cljs.core.constant$keyword$13);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13080__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13081 = function (x,var_args){
var p__13078 = null;
if (arguments.length > 1) {
var G__13082__i = 0, G__13082__a = new Array(arguments.length -  1);
while (G__13082__i < G__13082__a.length) {G__13082__a[G__13082__i] = arguments[G__13082__i + 1]; ++G__13082__i;}
  p__13078 = new cljs.core.IndexedSeq(G__13082__a,0);
} 
return G__13081__delegate.call(this,x,p__13078);};
G__13081.cljs$lang$maxFixedArity = 1;
G__13081.cljs$lang$applyTo = (function (arglist__13083){
var x = cljs.core.first(arglist__13083);
var p__13078 = cljs.core.rest(arglist__13083);
return G__13081__delegate(x,p__13078);
});
G__13081.cljs$core$IFn$_invoke$arity$variadic = G__13081__delegate;
return G__13081;
})()
;
atom = function(x,var_args){
var p__13078 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13084 = null;
if (arguments.length > 1) {
var G__13085__i = 0, G__13085__a = new Array(arguments.length -  1);
while (G__13085__i < G__13085__a.length) {G__13085__a[G__13085__i] = arguments[G__13085__i + 1]; ++G__13085__i;}
G__13084 = new cljs.core.IndexedSeq(G__13085__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__13088 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13088) : validate.call(null,G__13088));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__13089 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13089) : cljs.core.pr_str.call(null,G__13089));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13096 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13096) : f.call(null,G__13096));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13097 = a.state;
var G__13098 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13097,G__13098) : f.call(null,G__13097,G__13098));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13099 = a.state;
var G__13100 = x;
var G__13101 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13099,G__13100,G__13101) : f.call(null,G__13099,G__13100,G__13101));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13102__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13102 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13103__i = 0, G__13103__a = new Array(arguments.length -  4);
while (G__13103__i < G__13103__a.length) {G__13103__a[G__13103__i] = arguments[G__13103__i + 4]; ++G__13103__i;}
  more = new cljs.core.IndexedSeq(G__13103__a,0);
} 
return G__13102__delegate.call(this,a,f,x,y,more);};
G__13102.cljs$lang$maxFixedArity = 4;
G__13102.cljs$lang$applyTo = (function (arglist__13104){
var a = cljs.core.first(arglist__13104);
arglist__13104 = cljs.core.next(arglist__13104);
var f = cljs.core.first(arglist__13104);
arglist__13104 = cljs.core.next(arglist__13104);
var x = cljs.core.first(arglist__13104);
arglist__13104 = cljs.core.next(arglist__13104);
var y = cljs.core.first(arglist__13104);
var more = cljs.core.rest(arglist__13104);
return G__13102__delegate(a,f,x,y,more);
});
G__13102.cljs$core$IFn$_invoke$arity$variadic = G__13102__delegate;
return G__13102;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__13105 = null;
if (arguments.length > 4) {
var G__13106__i = 0, G__13106__a = new Array(arguments.length -  4);
while (G__13106__i < G__13106__a.length) {G__13106__a[G__13106__i] = arguments[G__13106__i + 4]; ++G__13106__i;}
G__13105 = new cljs.core.IndexedSeq(G__13106__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__13105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13173 = null;
var G__13173__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13173__1 = (function (result){
var G__13140 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13140) : rf.call(null,G__13140));
});
var G__13173__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__13141 = i;
var G__13142 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13141,G__13142) : f.call(null,G__13141,G__13142));
})();
if((v == null)){
return result;
} else {
var G__13143 = result;
var G__13144 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13143,G__13144) : rf.call(null,G__13143,G__13144));
}
});
G__13173 = function(result,input){
switch(arguments.length){
case 0:
return G__13173__0.call(this);
case 1:
return G__13173__1.call(this,result);
case 2:
return G__13173__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13173.cljs$core$IFn$_invoke$arity$0 = G__13173__0;
G__13173.cljs$core$IFn$_invoke$arity$1 = G__13173__1;
G__13173.cljs$core$IFn$_invoke$arity$2 = G__13173__2;
return G__13173;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4677__auto___13174 = size;
var i_13175 = (0);
while(true){
if((i_13175 < n__4677__auto___13174)){
var x_13176 = (function (){var G__13169 = (idx + i_13175);
var G__13170 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13175);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13169,G__13170) : f.call(null,G__13169,G__13170));
})();
if((x_13176 == null)){
} else {
cljs.core.chunk_append(b,x_13176);
}

var G__13177 = (i_13175 + (1));
i_13175 = G__13177;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13171 = idx;
var G__13172 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13171,G__13172) : f.call(null,G__13171,G__13172));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__13391 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13391) : p.call(null,G__13391));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13393 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13393) : p.call(null,G__13393));
})();
if(cljs.core.truth_(and__3778__auto__)){
var G__13394 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13394) : p.call(null,G__13394));
} else {
return and__3778__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13396 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13396) : p.call(null,G__13396));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13398 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13398) : p.call(null,G__13398));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var G__13399 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13399) : p.call(null,G__13399));
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__13568__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__13568 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13569__i = 0, G__13569__a = new Array(arguments.length -  3);
while (G__13569__i < G__13569__a.length) {G__13569__a[G__13569__i] = arguments[G__13569__i + 3]; ++G__13569__i;}
  args = new cljs.core.IndexedSeq(G__13569__a,0);
} 
return G__13568__delegate.call(this,x,y,z,args);};
G__13568.cljs$lang$maxFixedArity = 3;
G__13568.cljs$lang$applyTo = (function (arglist__13570){
var x = cljs.core.first(arglist__13570);
arglist__13570 = cljs.core.next(arglist__13570);
var y = cljs.core.first(arglist__13570);
arglist__13570 = cljs.core.next(arglist__13570);
var z = cljs.core.first(arglist__13570);
var args = cljs.core.rest(arglist__13570);
return G__13568__delegate(x,y,z,args);
});
G__13568.cljs$core$IFn$_invoke$arity$variadic = G__13568__delegate;
return G__13568;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__13571 = null;
if (arguments.length > 3) {
var G__13572__i = 0, G__13572__a = new Array(arguments.length -  3);
while (G__13572__i < G__13572__a.length) {G__13572__a[G__13572__i] = arguments[G__13572__i + 3]; ++G__13572__i;}
G__13571 = new cljs.core.IndexedSeq(G__13572__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13431 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13431) : p1.call(null,G__13431));
})();
if(cljs.core.truth_(and__3778__auto__)){
var G__13432 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13432) : p2.call(null,G__13432));
} else {
return and__3778__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13434 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13434) : p1.call(null,G__13434));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13436 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13436) : p1.call(null,G__13436));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var and__3778__auto____$2 = (function (){var G__13438 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13438) : p2.call(null,G__13438));
})();
if(cljs.core.truth_(and__3778__auto____$2)){
var G__13439 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13439) : p2.call(null,G__13439));
} else {
return and__3778__auto____$2;
}
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13441 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13441) : p1.call(null,G__13441));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13443 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13443) : p1.call(null,G__13443));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var and__3778__auto____$2 = (function (){var G__13445 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13445) : p1.call(null,G__13445));
})();
if(cljs.core.truth_(and__3778__auto____$2)){
var and__3778__auto____$3 = (function (){var G__13447 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13447) : p2.call(null,G__13447));
})();
if(cljs.core.truth_(and__3778__auto____$3)){
var and__3778__auto____$4 = (function (){var G__13449 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13449) : p2.call(null,G__13449));
})();
if(cljs.core.truth_(and__3778__auto____$4)){
var G__13450 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13450) : p2.call(null,G__13450));
} else {
return and__3778__auto____$4;
}
} else {
return and__3778__auto____$3;
}
} else {
return and__3778__auto____$2;
}
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__13573__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13178_SHARP_){
var and__3778__auto__ = (function (){var G__13455 = p1__13178_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13455) : p1.call(null,G__13455));
})();
if(cljs.core.truth_(and__3778__auto__)){
var G__13456 = p1__13178_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13456) : p2.call(null,G__13456));
} else {
return and__3778__auto__;
}
}),args)));
};
var G__13573 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13574__i = 0, G__13574__a = new Array(arguments.length -  3);
while (G__13574__i < G__13574__a.length) {G__13574__a[G__13574__i] = arguments[G__13574__i + 3]; ++G__13574__i;}
  args = new cljs.core.IndexedSeq(G__13574__a,0);
} 
return G__13573__delegate.call(this,x,y,z,args);};
G__13573.cljs$lang$maxFixedArity = 3;
G__13573.cljs$lang$applyTo = (function (arglist__13575){
var x = cljs.core.first(arglist__13575);
arglist__13575 = cljs.core.next(arglist__13575);
var y = cljs.core.first(arglist__13575);
arglist__13575 = cljs.core.next(arglist__13575);
var z = cljs.core.first(arglist__13575);
var args = cljs.core.rest(arglist__13575);
return G__13573__delegate(x,y,z,args);
});
G__13573.cljs$core$IFn$_invoke$arity$variadic = G__13573__delegate;
return G__13573;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__13576 = null;
if (arguments.length > 3) {
var G__13577__i = 0, G__13577__a = new Array(arguments.length -  3);
while (G__13577__i < G__13577__a.length) {G__13577__a[G__13577__i] = arguments[G__13577__i + 3]; ++G__13577__i;}
G__13576 = new cljs.core.IndexedSeq(G__13577__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13502 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13502) : p1.call(null,G__13502));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13504 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13504) : p2.call(null,G__13504));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var G__13505 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13505) : p3.call(null,G__13505));
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13507 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13507) : p1.call(null,G__13507));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13509 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13509) : p2.call(null,G__13509));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var and__3778__auto____$2 = (function (){var G__13511 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13511) : p3.call(null,G__13511));
})();
if(cljs.core.truth_(and__3778__auto____$2)){
var and__3778__auto____$3 = (function (){var G__13513 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13513) : p1.call(null,G__13513));
})();
if(cljs.core.truth_(and__3778__auto____$3)){
var and__3778__auto____$4 = (function (){var G__13515 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13515) : p2.call(null,G__13515));
})();
if(cljs.core.truth_(and__3778__auto____$4)){
var G__13516 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13516) : p3.call(null,G__13516));
} else {
return and__3778__auto____$4;
}
} else {
return and__3778__auto____$3;
}
} else {
return and__3778__auto____$2;
}
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3778__auto__ = (function (){var G__13518 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13518) : p1.call(null,G__13518));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13520 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13520) : p2.call(null,G__13520));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var and__3778__auto____$2 = (function (){var G__13522 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13522) : p3.call(null,G__13522));
})();
if(cljs.core.truth_(and__3778__auto____$2)){
var and__3778__auto____$3 = (function (){var G__13524 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13524) : p1.call(null,G__13524));
})();
if(cljs.core.truth_(and__3778__auto____$3)){
var and__3778__auto____$4 = (function (){var G__13526 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13526) : p2.call(null,G__13526));
})();
if(cljs.core.truth_(and__3778__auto____$4)){
var and__3778__auto____$5 = (function (){var G__13528 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13528) : p3.call(null,G__13528));
})();
if(cljs.core.truth_(and__3778__auto____$5)){
var and__3778__auto____$6 = (function (){var G__13530 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13530) : p1.call(null,G__13530));
})();
if(cljs.core.truth_(and__3778__auto____$6)){
var and__3778__auto____$7 = (function (){var G__13532 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13532) : p2.call(null,G__13532));
})();
if(cljs.core.truth_(and__3778__auto____$7)){
var G__13533 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13533) : p3.call(null,G__13533));
} else {
return and__3778__auto____$7;
}
} else {
return and__3778__auto____$6;
}
} else {
return and__3778__auto____$5;
}
} else {
return and__3778__auto____$4;
}
} else {
return and__3778__auto____$3;
}
} else {
return and__3778__auto____$2;
}
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__13578__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__13179_SHARP_){
var and__3778__auto__ = (function (){var G__13540 = p1__13179_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13540) : p1.call(null,G__13540));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13542 = p1__13179_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13542) : p2.call(null,G__13542));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var G__13543 = p1__13179_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13543) : p3.call(null,G__13543));
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
}),args)));
};
var G__13578 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13579__i = 0, G__13579__a = new Array(arguments.length -  3);
while (G__13579__i < G__13579__a.length) {G__13579__a[G__13579__i] = arguments[G__13579__i + 3]; ++G__13579__i;}
  args = new cljs.core.IndexedSeq(G__13579__a,0);
} 
return G__13578__delegate.call(this,x,y,z,args);};
G__13578.cljs$lang$maxFixedArity = 3;
G__13578.cljs$lang$applyTo = (function (arglist__13580){
var x = cljs.core.first(arglist__13580);
arglist__13580 = cljs.core.next(arglist__13580);
var y = cljs.core.first(arglist__13580);
arglist__13580 = cljs.core.next(arglist__13580);
var z = cljs.core.first(arglist__13580);
var args = cljs.core.rest(arglist__13580);
return G__13578__delegate(x,y,z,args);
});
G__13578.cljs$core$IFn$_invoke$arity$variadic = G__13578__delegate;
return G__13578;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__13581 = null;
if (arguments.length > 3) {
var G__13582__i = 0, G__13582__a = new Array(arguments.length -  3);
while (G__13582__i < G__13582__a.length) {G__13582__a[G__13582__i] = arguments[G__13582__i + 3]; ++G__13582__i;}
G__13581 = new cljs.core.IndexedSeq(G__13582__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__13583__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13180_SHARP_){
var G__13559 = x;
return (p1__13180_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13180_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13559) : p1__13180_SHARP_.call(null,G__13559));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13181_SHARP_){
var and__3778__auto__ = (function (){var G__13561 = x;
return (p1__13181_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13181_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13561) : p1__13181_SHARP_.call(null,G__13561));
})();
if(cljs.core.truth_(and__3778__auto__)){
var G__13562 = y;
return (p1__13181_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13181_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13562) : p1__13181_SHARP_.call(null,G__13562));
} else {
return and__3778__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13182_SHARP_){
var and__3778__auto__ = (function (){var G__13564 = x;
return (p1__13182_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13182_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13564) : p1__13182_SHARP_.call(null,G__13564));
})();
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__13566 = y;
return (p1__13182_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13182_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13566) : p1__13182_SHARP_.call(null,G__13566));
})();
if(cljs.core.truth_(and__3778__auto____$1)){
var G__13567 = z;
return (p1__13182_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13182_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13567) : p1__13182_SHARP_.call(null,G__13567));
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__13584__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__13183_SHARP_){
return cljs.core.every_QMARK_(p1__13183_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__13584 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13585__i = 0, G__13585__a = new Array(arguments.length -  3);
while (G__13585__i < G__13585__a.length) {G__13585__a[G__13585__i] = arguments[G__13585__i + 3]; ++G__13585__i;}
  args = new cljs.core.IndexedSeq(G__13585__a,0);
} 
return G__13584__delegate.call(this,x,y,z,args);};
G__13584.cljs$lang$maxFixedArity = 3;
G__13584.cljs$lang$applyTo = (function (arglist__13586){
var x = cljs.core.first(arglist__13586);
arglist__13586 = cljs.core.next(arglist__13586);
var y = cljs.core.first(arglist__13586);
arglist__13586 = cljs.core.next(arglist__13586);
var z = cljs.core.first(arglist__13586);
var args = cljs.core.rest(arglist__13586);
return G__13584__delegate(x,y,z,args);
});
G__13584.cljs$core$IFn$_invoke$arity$variadic = G__13584__delegate;
return G__13584;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__13587 = null;
if (arguments.length > 3) {
var G__13588__i = 0, G__13588__a = new Array(arguments.length -  3);
while (G__13588__i < G__13588__a.length) {G__13588__a[G__13588__i] = arguments[G__13588__i + 3]; ++G__13588__i;}
G__13587 = new cljs.core.IndexedSeq(G__13588__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__13583 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__13589__i = 0, G__13589__a = new Array(arguments.length -  3);
while (G__13589__i < G__13589__a.length) {G__13589__a[G__13589__i] = arguments[G__13589__i + 3]; ++G__13589__i;}
  ps = new cljs.core.IndexedSeq(G__13589__a,0);
} 
return G__13583__delegate.call(this,p1,p2,p3,ps);};
G__13583.cljs$lang$maxFixedArity = 3;
G__13583.cljs$lang$applyTo = (function (arglist__13590){
var p1 = cljs.core.first(arglist__13590);
arglist__13590 = cljs.core.next(arglist__13590);
var p2 = cljs.core.first(arglist__13590);
arglist__13590 = cljs.core.next(arglist__13590);
var p3 = cljs.core.first(arglist__13590);
var ps = cljs.core.rest(arglist__13590);
return G__13583__delegate(p1,p2,p3,ps);
});
G__13583.cljs$core$IFn$_invoke$arity$variadic = G__13583__delegate;
return G__13583;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__13591 = null;
if (arguments.length > 3) {
var G__13592__i = 0, G__13592__a = new Array(arguments.length -  3);
while (G__13592__i < G__13592__a.length) {G__13592__a[G__13592__i] = arguments[G__13592__i + 3]; ++G__13592__i;}
G__13591 = new cljs.core.IndexedSeq(G__13592__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__13591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__13798 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13798) : p.call(null,G__13798));
});
var sp1__2 = (function (x,y){
var or__3790__auto__ = (function (){var G__13800 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13800) : p.call(null,G__13800));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var G__13801 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13801) : p.call(null,G__13801));
}
});
var sp1__3 = (function (x,y,z){
var or__3790__auto__ = (function (){var G__13803 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13803) : p.call(null,G__13803));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var G__13805 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13805) : p.call(null,G__13805));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var G__13806 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13806) : p.call(null,G__13806));
}
}
});
var sp1__4 = (function() { 
var G__13967__delegate = function (x,y,z,args){
var or__3790__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__13967 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13968__i = 0, G__13968__a = new Array(arguments.length -  3);
while (G__13968__i < G__13968__a.length) {G__13968__a[G__13968__i] = arguments[G__13968__i + 3]; ++G__13968__i;}
  args = new cljs.core.IndexedSeq(G__13968__a,0);
} 
return G__13967__delegate.call(this,x,y,z,args);};
G__13967.cljs$lang$maxFixedArity = 3;
G__13967.cljs$lang$applyTo = (function (arglist__13969){
var x = cljs.core.first(arglist__13969);
arglist__13969 = cljs.core.next(arglist__13969);
var y = cljs.core.first(arglist__13969);
arglist__13969 = cljs.core.next(arglist__13969);
var z = cljs.core.first(arglist__13969);
var args = cljs.core.rest(arglist__13969);
return G__13967__delegate(x,y,z,args);
});
G__13967.cljs$core$IFn$_invoke$arity$variadic = G__13967__delegate;
return G__13967;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__13970 = null;
if (arguments.length > 3) {
var G__13971__i = 0, G__13971__a = new Array(arguments.length -  3);
while (G__13971__i < G__13971__a.length) {G__13971__a[G__13971__i] = arguments[G__13971__i + 3]; ++G__13971__i;}
G__13970 = new cljs.core.IndexedSeq(G__13971__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3790__auto__ = (function (){var G__13838 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13838) : p1.call(null,G__13838));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var G__13839 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13839) : p2.call(null,G__13839));
}
});
var sp2__2 = (function (x,y){
var or__3790__auto__ = (function (){var G__13841 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13841) : p1.call(null,G__13841));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var G__13843 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13843) : p1.call(null,G__13843));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var or__3790__auto____$2 = (function (){var G__13845 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13845) : p2.call(null,G__13845));
})();
if(cljs.core.truth_(or__3790__auto____$2)){
return or__3790__auto____$2;
} else {
var G__13846 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13846) : p2.call(null,G__13846));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3790__auto__ = (function (){var G__13848 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13848) : p1.call(null,G__13848));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var G__13850 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13850) : p1.call(null,G__13850));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var or__3790__auto____$2 = (function (){var G__13852 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13852) : p1.call(null,G__13852));
})();
if(cljs.core.truth_(or__3790__auto____$2)){
return or__3790__auto____$2;
} else {
var or__3790__auto____$3 = (function (){var G__13854 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13854) : p2.call(null,G__13854));
})();
if(cljs.core.truth_(or__3790__auto____$3)){
return or__3790__auto____$3;
} else {
var or__3790__auto____$4 = (function (){var G__13856 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13856) : p2.call(null,G__13856));
})();
if(cljs.core.truth_(or__3790__auto____$4)){
return or__3790__auto____$4;
} else {
var G__13857 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13857) : p2.call(null,G__13857));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__13972__delegate = function (x,y,z,args){
var or__3790__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.some(((function (or__3790__auto__){
return (function (p1__13593_SHARP_){
var or__3790__auto____$1 = (function (){var G__13859 = p1__13593_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13859) : p1.call(null,G__13859));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var G__13860 = p1__13593_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13860) : p2.call(null,G__13860));
}
});})(or__3790__auto__))
,args);
}
};
var G__13972 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13973__i = 0, G__13973__a = new Array(arguments.length -  3);
while (G__13973__i < G__13973__a.length) {G__13973__a[G__13973__i] = arguments[G__13973__i + 3]; ++G__13973__i;}
  args = new cljs.core.IndexedSeq(G__13973__a,0);
} 
return G__13972__delegate.call(this,x,y,z,args);};
G__13972.cljs$lang$maxFixedArity = 3;
G__13972.cljs$lang$applyTo = (function (arglist__13974){
var x = cljs.core.first(arglist__13974);
arglist__13974 = cljs.core.next(arglist__13974);
var y = cljs.core.first(arglist__13974);
arglist__13974 = cljs.core.next(arglist__13974);
var z = cljs.core.first(arglist__13974);
var args = cljs.core.rest(arglist__13974);
return G__13972__delegate(x,y,z,args);
});
G__13972.cljs$core$IFn$_invoke$arity$variadic = G__13972__delegate;
return G__13972;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__13975 = null;
if (arguments.length > 3) {
var G__13976__i = 0, G__13976__a = new Array(arguments.length -  3);
while (G__13976__i < G__13976__a.length) {G__13976__a[G__13976__i] = arguments[G__13976__i + 3]; ++G__13976__i;}
G__13975 = new cljs.core.IndexedSeq(G__13976__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13975);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3790__auto__ = (function (){var G__13906 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13906) : p1.call(null,G__13906));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var G__13908 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13908) : p2.call(null,G__13908));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var G__13909 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13909) : p3.call(null,G__13909));
}
}
});
var sp3__2 = (function (x,y){
var or__3790__auto__ = (function (){var G__13911 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13911) : p1.call(null,G__13911));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var G__13913 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13913) : p2.call(null,G__13913));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var or__3790__auto____$2 = (function (){var G__13915 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13915) : p3.call(null,G__13915));
})();
if(cljs.core.truth_(or__3790__auto____$2)){
return or__3790__auto____$2;
} else {
var or__3790__auto____$3 = (function (){var G__13917 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13917) : p1.call(null,G__13917));
})();
if(cljs.core.truth_(or__3790__auto____$3)){
return or__3790__auto____$3;
} else {
var or__3790__auto____$4 = (function (){var G__13919 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13919) : p2.call(null,G__13919));
})();
if(cljs.core.truth_(or__3790__auto____$4)){
return or__3790__auto____$4;
} else {
var G__13920 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13920) : p3.call(null,G__13920));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3790__auto__ = (function (){var G__13922 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13922) : p1.call(null,G__13922));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var G__13924 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13924) : p2.call(null,G__13924));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var or__3790__auto____$2 = (function (){var G__13926 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13926) : p3.call(null,G__13926));
})();
if(cljs.core.truth_(or__3790__auto____$2)){
return or__3790__auto____$2;
} else {
var or__3790__auto____$3 = (function (){var G__13928 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13928) : p1.call(null,G__13928));
})();
if(cljs.core.truth_(or__3790__auto____$3)){
return or__3790__auto____$3;
} else {
var or__3790__auto____$4 = (function (){var G__13930 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13930) : p2.call(null,G__13930));
})();
if(cljs.core.truth_(or__3790__auto____$4)){
return or__3790__auto____$4;
} else {
var or__3790__auto____$5 = (function (){var G__13932 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13932) : p3.call(null,G__13932));
})();
if(cljs.core.truth_(or__3790__auto____$5)){
return or__3790__auto____$5;
} else {
var or__3790__auto____$6 = (function (){var G__13934 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13934) : p1.call(null,G__13934));
})();
if(cljs.core.truth_(or__3790__auto____$6)){
return or__3790__auto____$6;
} else {
var or__3790__auto____$7 = (function (){var G__13936 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13936) : p2.call(null,G__13936));
})();
if(cljs.core.truth_(or__3790__auto____$7)){
return or__3790__auto____$7;
} else {
var G__13937 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13937) : p3.call(null,G__13937));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__13977__delegate = function (x,y,z,args){
var or__3790__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.some(((function (or__3790__auto__){
return (function (p1__13594_SHARP_){
var or__3790__auto____$1 = (function (){var G__13939 = p1__13594_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13939) : p1.call(null,G__13939));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var or__3790__auto____$2 = (function (){var G__13941 = p1__13594_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13941) : p2.call(null,G__13941));
})();
if(cljs.core.truth_(or__3790__auto____$2)){
return or__3790__auto____$2;
} else {
var G__13942 = p1__13594_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13942) : p3.call(null,G__13942));
}
}
});})(or__3790__auto__))
,args);
}
};
var G__13977 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13978__i = 0, G__13978__a = new Array(arguments.length -  3);
while (G__13978__i < G__13978__a.length) {G__13978__a[G__13978__i] = arguments[G__13978__i + 3]; ++G__13978__i;}
  args = new cljs.core.IndexedSeq(G__13978__a,0);
} 
return G__13977__delegate.call(this,x,y,z,args);};
G__13977.cljs$lang$maxFixedArity = 3;
G__13977.cljs$lang$applyTo = (function (arglist__13979){
var x = cljs.core.first(arglist__13979);
arglist__13979 = cljs.core.next(arglist__13979);
var y = cljs.core.first(arglist__13979);
arglist__13979 = cljs.core.next(arglist__13979);
var z = cljs.core.first(arglist__13979);
var args = cljs.core.rest(arglist__13979);
return G__13977__delegate(x,y,z,args);
});
G__13977.cljs$core$IFn$_invoke$arity$variadic = G__13977__delegate;
return G__13977;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__13980 = null;
if (arguments.length > 3) {
var G__13981__i = 0, G__13981__a = new Array(arguments.length -  3);
while (G__13981__i < G__13981__a.length) {G__13981__a[G__13981__i] = arguments[G__13981__i + 3]; ++G__13981__i;}
G__13980 = new cljs.core.IndexedSeq(G__13981__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__13982__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__13595_SHARP_){
var G__13958 = x;
return (p1__13595_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13595_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13958) : p1__13595_SHARP_.call(null,G__13958));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__13596_SHARP_){
var or__3790__auto__ = (function (){var G__13960 = x;
return (p1__13596_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13596_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13960) : p1__13596_SHARP_.call(null,G__13960));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var G__13961 = y;
return (p1__13596_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13596_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13961) : p1__13596_SHARP_.call(null,G__13961));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__13597_SHARP_){
var or__3790__auto__ = (function (){var G__13963 = x;
return (p1__13597_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13597_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13963) : p1__13597_SHARP_.call(null,G__13963));
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var G__13965 = y;
return (p1__13597_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13597_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13965) : p1__13597_SHARP_.call(null,G__13965));
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var G__13966 = z;
return (p1__13597_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13597_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13966) : p1__13597_SHARP_.call(null,G__13966));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__13983__delegate = function (x,y,z,args){
var or__3790__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.some(((function (or__3790__auto__,ps__$1){
return (function (p1__13598_SHARP_){
return cljs.core.some(p1__13598_SHARP_,args);
});})(or__3790__auto__,ps__$1))
,ps__$1);
}
};
var G__13983 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13984__i = 0, G__13984__a = new Array(arguments.length -  3);
while (G__13984__i < G__13984__a.length) {G__13984__a[G__13984__i] = arguments[G__13984__i + 3]; ++G__13984__i;}
  args = new cljs.core.IndexedSeq(G__13984__a,0);
} 
return G__13983__delegate.call(this,x,y,z,args);};
G__13983.cljs$lang$maxFixedArity = 3;
G__13983.cljs$lang$applyTo = (function (arglist__13985){
var x = cljs.core.first(arglist__13985);
arglist__13985 = cljs.core.next(arglist__13985);
var y = cljs.core.first(arglist__13985);
arglist__13985 = cljs.core.next(arglist__13985);
var z = cljs.core.first(arglist__13985);
var args = cljs.core.rest(arglist__13985);
return G__13983__delegate(x,y,z,args);
});
G__13983.cljs$core$IFn$_invoke$arity$variadic = G__13983__delegate;
return G__13983;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__13986 = null;
if (arguments.length > 3) {
var G__13987__i = 0, G__13987__a = new Array(arguments.length -  3);
while (G__13987__i < G__13987__a.length) {G__13987__a[G__13987__i] = arguments[G__13987__i + 3]; ++G__13987__i;}
G__13986 = new cljs.core.IndexedSeq(G__13987__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__13982 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__13988__i = 0, G__13988__a = new Array(arguments.length -  3);
while (G__13988__i < G__13988__a.length) {G__13988__a[G__13988__i] = arguments[G__13988__i + 3]; ++G__13988__i;}
  ps = new cljs.core.IndexedSeq(G__13988__a,0);
} 
return G__13982__delegate.call(this,p1,p2,p3,ps);};
G__13982.cljs$lang$maxFixedArity = 3;
G__13982.cljs$lang$applyTo = (function (arglist__13989){
var p1 = cljs.core.first(arglist__13989);
arglist__13989 = cljs.core.next(arglist__13989);
var p2 = cljs.core.first(arglist__13989);
arglist__13989 = cljs.core.next(arglist__13989);
var p3 = cljs.core.first(arglist__13989);
var ps = cljs.core.rest(arglist__13989);
return G__13982__delegate(p1,p2,p3,ps);
});
G__13982.cljs$core$IFn$_invoke$arity$variadic = G__13982__delegate;
return G__13982;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__13990 = null;
if (arguments.length > 3) {
var G__13991__i = 0, G__13991__a = new Array(arguments.length -  3);
while (G__13991__i < G__13991__a.length) {G__13991__a[G__13991__i] = arguments[G__13991__i + 3]; ++G__13991__i;}
G__13990 = new cljs.core.IndexedSeq(G__13991__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__13990);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14046 = null;
var G__14046__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14046__1 = (function (result){
var G__14032 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14032) : rf.call(null,G__14032));
});
var G__14046__2 = (function (result,input){
var G__14033 = result;
var G__14034 = (function (){var G__14035 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14035) : f.call(null,G__14035));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14033,G__14034) : rf.call(null,G__14033,G__14034));
});
var G__14046__3 = (function() { 
var G__14047__delegate = function (result,input,inputs){
var G__14036 = result;
var G__14037 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14036,G__14037) : rf.call(null,G__14036,G__14037));
};
var G__14047 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14048__i = 0, G__14048__a = new Array(arguments.length -  2);
while (G__14048__i < G__14048__a.length) {G__14048__a[G__14048__i] = arguments[G__14048__i + 2]; ++G__14048__i;}
  inputs = new cljs.core.IndexedSeq(G__14048__a,0);
} 
return G__14047__delegate.call(this,result,input,inputs);};
G__14047.cljs$lang$maxFixedArity = 2;
G__14047.cljs$lang$applyTo = (function (arglist__14049){
var result = cljs.core.first(arglist__14049);
arglist__14049 = cljs.core.next(arglist__14049);
var input = cljs.core.first(arglist__14049);
var inputs = cljs.core.rest(arglist__14049);
return G__14047__delegate(result,input,inputs);
});
G__14047.cljs$core$IFn$_invoke$arity$variadic = G__14047__delegate;
return G__14047;
})()
;
G__14046 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14046__0.call(this);
case 1:
return G__14046__1.call(this,result);
case 2:
return G__14046__2.call(this,result,input);
default:
var G__14050 = null;
if (arguments.length > 2) {
var G__14051__i = 0, G__14051__a = new Array(arguments.length -  2);
while (G__14051__i < G__14051__a.length) {G__14051__a[G__14051__i] = arguments[G__14051__i + 2]; ++G__14051__i;}
G__14050 = new cljs.core.IndexedSeq(G__14051__a,0);
}
return G__14046__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14050);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14046.cljs$lang$maxFixedArity = 2;
G__14046.cljs$lang$applyTo = G__14046__3.cljs$lang$applyTo;
G__14046.cljs$core$IFn$_invoke$arity$0 = G__14046__0;
G__14046.cljs$core$IFn$_invoke$arity$1 = G__14046__1;
G__14046.cljs$core$IFn$_invoke$arity$2 = G__14046__2;
G__14046.cljs$core$IFn$_invoke$arity$variadic = G__14046__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14046;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4677__auto___14052 = size;
var i_14053 = (0);
while(true){
if((i_14053 < n__4677__auto___14052)){
cljs.core.chunk_append(b,(function (){var G__14038 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14053);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14038) : f.call(null,G__14038));
})());

var G__14054 = (i_14053 + (1));
i_14053 = G__14054;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14039 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14039) : f.call(null,G__14039));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14040 = cljs.core.first(s1);
var G__14041 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14040,G__14041) : f.call(null,G__14040,G__14041));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14042 = cljs.core.first(s1);
var G__14043 = cljs.core.first(s2);
var G__14044 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14042,G__14043,G__14044) : f.call(null,G__14042,G__14043,G__14044));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14055__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__13992_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__13992_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14055 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14056__i = 0, G__14056__a = new Array(arguments.length -  4);
while (G__14056__i < G__14056__a.length) {G__14056__a[G__14056__i] = arguments[G__14056__i + 4]; ++G__14056__i;}
  colls = new cljs.core.IndexedSeq(G__14056__a,0);
} 
return G__14055__delegate.call(this,f,c1,c2,c3,colls);};
G__14055.cljs$lang$maxFixedArity = 4;
G__14055.cljs$lang$applyTo = (function (arglist__14057){
var f = cljs.core.first(arglist__14057);
arglist__14057 = cljs.core.next(arglist__14057);
var c1 = cljs.core.first(arglist__14057);
arglist__14057 = cljs.core.next(arglist__14057);
var c2 = cljs.core.first(arglist__14057);
arglist__14057 = cljs.core.next(arglist__14057);
var c3 = cljs.core.first(arglist__14057);
var colls = cljs.core.rest(arglist__14057);
return G__14055__delegate(f,c1,c2,c3,colls);
});
G__14055.cljs$core$IFn$_invoke$arity$variadic = G__14055__delegate;
return G__14055;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14058 = null;
if (arguments.length > 4) {
var G__14059__i = 0, G__14059__a = new Array(arguments.length -  4);
while (G__14059__i < G__14059__a.length) {G__14059__a[G__14059__i] = arguments[G__14059__i + 4]; ++G__14059__i;}
G__14058 = new cljs.core.IndexedSeq(G__14059__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14068 = null;
var G__14068__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14068__1 = (function (result){
var G__14065 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14065) : rf.call(null,G__14065));
});
var G__14068__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14066 = result;
var G__14067 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14066,G__14067) : rf.call(null,G__14066,G__14067));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14068 = function(result,input){
switch(arguments.length){
case 0:
return G__14068__0.call(this);
case 1:
return G__14068__1.call(this,result);
case 2:
return G__14068__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14068.cljs$core$IFn$_invoke$arity$0 = G__14068__0;
G__14068.cljs$core$IFn$_invoke$arity$1 = G__14068__1;
G__14068.cljs$core$IFn$_invoke$arity$2 = G__14068__2;
return G__14068;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14075 = null;
var G__14075__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14075__1 = (function (result){
var G__14072 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14072) : rf.call(null,G__14072));
});
var G__14075__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14073 = result;
var G__14074 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14073,G__14074) : rf.call(null,G__14073,G__14074));
}
});
G__14075 = function(result,input){
switch(arguments.length){
case 0:
return G__14075__0.call(this);
case 1:
return G__14075__1.call(this,result);
case 2:
return G__14075__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14075.cljs$core$IFn$_invoke$arity$0 = G__14075__0;
G__14075.cljs$core$IFn$_invoke$arity$1 = G__14075__1;
G__14075.cljs$core$IFn$_invoke$arity$2 = G__14075__2;
return G__14075;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14076 = (n__$1 - (1));
var G__14077 = cljs.core.rest(s);
n__$1 = G__14076;
coll__$1 = G__14077;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14080 = cljs.core.next(s);
var G__14081 = cljs.core.next(lead);
s = G__14080;
lead = G__14081;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14094 = null;
var G__14094__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14094__1 = (function (result){
var G__14088 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14088) : rf.call(null,G__14088));
});
var G__14094__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3778__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3778__auto__)){
var G__14089 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14089) : pred.call(null,G__14089));
} else {
return and__3778__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14090 = result;
var G__14091 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14090,G__14091) : rf.call(null,G__14090,G__14091));
}
});
G__14094 = function(result,input){
switch(arguments.length){
case 0:
return G__14094__0.call(this);
case 1:
return G__14094__1.call(this,result);
case 2:
return G__14094__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14094.cljs$core$IFn$_invoke$arity$0 = G__14094__0;
G__14094.cljs$core$IFn$_invoke$arity$1 = G__14094__1;
G__14094.cljs$core$IFn$_invoke$arity$2 = G__14094__2;
return G__14094;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3778__auto__ = s;
if(and__3778__auto__){
var G__14093 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14093) : pred__$1.call(null,G__14093));
} else {
return and__3778__auto__;
}
})())){
var G__14095 = pred__$1;
var G__14096 = cljs.core.rest(s);
pred__$1 = G__14095;
coll__$1 = G__14096;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__14105 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14105) : f.call(null,G__14105));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__14108__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__14108 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14109__i = 0, G__14109__a = new Array(arguments.length -  2);
while (G__14109__i < G__14109__a.length) {G__14109__a[G__14109__i] = arguments[G__14109__i + 2]; ++G__14109__i;}
  colls = new cljs.core.IndexedSeq(G__14109__a,0);
} 
return G__14108__delegate.call(this,c1,c2,colls);};
G__14108.cljs$lang$maxFixedArity = 2;
G__14108.cljs$lang$applyTo = (function (arglist__14110){
var c1 = cljs.core.first(arglist__14110);
arglist__14110 = cljs.core.next(arglist__14110);
var c2 = cljs.core.first(arglist__14110);
var colls = cljs.core.rest(arglist__14110);
return G__14108__delegate(c1,c2,colls);
});
G__14108.cljs$core$IFn$_invoke$arity$variadic = G__14108__delegate;
return G__14108;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__14111 = null;
if (arguments.length > 2) {
var G__14112__i = 0, G__14112__a = new Array(arguments.length -  2);
while (G__14112__i < G__14112__a.length) {G__14112__a[G__14112__i] = arguments[G__14112__i + 2]; ++G__14112__i;}
G__14111 = new cljs.core.IndexedSeq(G__14112__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__14111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__14121__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__14121 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__14122__i = 0, G__14122__a = new Array(arguments.length -  1);
while (G__14122__i < G__14122__a.length) {G__14122__a[G__14122__i] = arguments[G__14122__i + 1]; ++G__14122__i;}
  colls = new cljs.core.IndexedSeq(G__14122__a,0);
} 
return G__14121__delegate.call(this,f,colls);};
G__14121.cljs$lang$maxFixedArity = 1;
G__14121.cljs$lang$applyTo = (function (arglist__14123){
var f = cljs.core.first(arglist__14123);
var colls = cljs.core.rest(arglist__14123);
return G__14121__delegate(f,colls);
});
G__14121.cljs$core$IFn$_invoke$arity$variadic = G__14121__delegate;
return G__14121;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__14124 = null;
if (arguments.length > 1) {
var G__14125__i = 0, G__14125__a = new Array(arguments.length -  1);
while (G__14125__i < G__14125__a.length) {G__14125__a[G__14125__i] = arguments[G__14125__i + 1]; ++G__14125__i;}
G__14124 = new cljs.core.IndexedSeq(G__14125__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__14144 = null;
var G__14144__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14144__1 = (function (result){
var G__14138 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14138) : rf.call(null,G__14138));
});
var G__14144__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14139 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14139) : pred.call(null,G__14139));
})())){
var G__14140 = result;
var G__14141 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14140,G__14141) : rf.call(null,G__14140,G__14141));
} else {
return result;
}
});
G__14144 = function(result,input){
switch(arguments.length){
case 0:
return G__14144__0.call(this);
case 1:
return G__14144__1.call(this,result);
case 2:
return G__14144__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14144.cljs$core$IFn$_invoke$arity$0 = G__14144__0;
G__14144.cljs$core$IFn$_invoke$arity$1 = G__14144__1;
G__14144.cljs$core$IFn$_invoke$arity$2 = G__14144__2;
return G__14144;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4677__auto___14145 = size;
var i_14146 = (0);
while(true){
if((i_14146 < n__4677__auto___14145)){
if(cljs.core.truth_((function (){var G__14142 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14146);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14142) : pred.call(null,G__14142));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14146));
} else {
}

var G__14147 = (i_14146 + (1));
i_14146 = G__14147;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__14143 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14143) : pred.call(null,G__14143));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__14154 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14154) : branch_QMARK_.call(null,G__14154));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__14155 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14155) : children.call(null,G__14155));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__14156_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__14156_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__14159 = to;
if(G__14159){
var bit__4464__auto__ = (G__14159.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4464__auto__) || (G__14159.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__14160 = to;
if(G__14160){
var bit__4464__auto__ = (G__14160.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4464__auto__) || (G__14160.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__14162 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14162) : f.call(null,G__14162));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__14163__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__14163 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14164__i = 0, G__14164__a = new Array(arguments.length -  4);
while (G__14164__i < G__14164__a.length) {G__14164__a[G__14164__i] = arguments[G__14164__i + 4]; ++G__14164__i;}
  colls = new cljs.core.IndexedSeq(G__14164__a,0);
} 
return G__14163__delegate.call(this,f,c1,c2,c3,colls);};
G__14163.cljs$lang$maxFixedArity = 4;
G__14163.cljs$lang$applyTo = (function (arglist__14165){
var f = cljs.core.first(arglist__14165);
arglist__14165 = cljs.core.next(arglist__14165);
var c1 = cljs.core.first(arglist__14165);
arglist__14165 = cljs.core.next(arglist__14165);
var c2 = cljs.core.first(arglist__14165);
arglist__14165 = cljs.core.next(arglist__14165);
var c3 = cljs.core.first(arglist__14165);
var colls = cljs.core.rest(arglist__14165);
return G__14163__delegate(f,c1,c2,c3,colls);
});
G__14163.cljs$core$IFn$_invoke$arity$variadic = G__14163__delegate;
return G__14163;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__14166 = null;
if (arguments.length > 4) {
var G__14167__i = 0, G__14167__a = new Array(arguments.length -  4);
while (G__14167__i < G__14167__a.length) {G__14167__a[G__14167__i] = arguments[G__14167__i + 4]; ++G__14167__i;}
G__14166 = new cljs.core.IndexedSeq(G__14167__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__14169 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14169) : pred.call(null,G__14169));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__14184 = m__$1;
if(G__14184){
var bit__4471__auto__ = (G__14184.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4471__auto__) || (G__14184.cljs$core$ILookup$)){
return true;
} else {
if((!G__14184.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14184);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__14184);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__14185 = sentinel;
var G__14186 = m__$2;
var G__14187 = cljs.core.next(ks__$1);
sentinel = G__14185;
m__$1 = G__14186;
ks__$1 = G__14187;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__14188,v){
var vec__14193 = p__14188;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14193,(0),null);
var ks = cljs.core.nthnext(vec__14193,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__14194,f){
var vec__14232 = p__14194;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14232,(0),null);
var ks = cljs.core.nthnext(vec__14232,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14233 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14233) : f.call(null,G__14233));
})());
}
});
var update_in__4 = (function (m,p__14195,f,a){
var vec__14234 = p__14195;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14234,(0),null);
var ks = cljs.core.nthnext(vec__14234,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14235 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14236 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14235,G__14236) : f.call(null,G__14235,G__14236));
})());
}
});
var update_in__5 = (function (m,p__14196,f,a,b){
var vec__14237 = p__14196;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14237,(0),null);
var ks = cljs.core.nthnext(vec__14237,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14238 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14239 = a;
var G__14240 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14238,G__14239,G__14240) : f.call(null,G__14238,G__14239,G__14240));
})());
}
});
var update_in__6 = (function (m,p__14197,f,a,b,c){
var vec__14241 = p__14197;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14241,(0),null);
var ks = cljs.core.nthnext(vec__14241,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14242 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14243 = a;
var G__14244 = b;
var G__14245 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14242,G__14243,G__14244,G__14245) : f.call(null,G__14242,G__14243,G__14244,G__14245));
})());
}
});
var update_in__7 = (function() { 
var G__14247__delegate = function (m,p__14198,f,a,b,c,args){
var vec__14246 = p__14198;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14246,(0),null);
var ks = cljs.core.nthnext(vec__14246,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__14247 = function (m,p__14198,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__14248__i = 0, G__14248__a = new Array(arguments.length -  6);
while (G__14248__i < G__14248__a.length) {G__14248__a[G__14248__i] = arguments[G__14248__i + 6]; ++G__14248__i;}
  args = new cljs.core.IndexedSeq(G__14248__a,0);
} 
return G__14247__delegate.call(this,m,p__14198,f,a,b,c,args);};
G__14247.cljs$lang$maxFixedArity = 6;
G__14247.cljs$lang$applyTo = (function (arglist__14249){
var m = cljs.core.first(arglist__14249);
arglist__14249 = cljs.core.next(arglist__14249);
var p__14198 = cljs.core.first(arglist__14249);
arglist__14249 = cljs.core.next(arglist__14249);
var f = cljs.core.first(arglist__14249);
arglist__14249 = cljs.core.next(arglist__14249);
var a = cljs.core.first(arglist__14249);
arglist__14249 = cljs.core.next(arglist__14249);
var b = cljs.core.first(arglist__14249);
arglist__14249 = cljs.core.next(arglist__14249);
var c = cljs.core.first(arglist__14249);
var args = cljs.core.rest(arglist__14249);
return G__14247__delegate(m,p__14198,f,a,b,c,args);
});
G__14247.cljs$core$IFn$_invoke$arity$variadic = G__14247__delegate;
return G__14247;
})()
;
update_in = function(m,p__14198,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__14198,f);
case 4:
return update_in__4.call(this,m,p__14198,f,a);
case 5:
return update_in__5.call(this,m,p__14198,f,a,b);
case 6:
return update_in__6.call(this,m,p__14198,f,a,b,c);
default:
var G__14250 = null;
if (arguments.length > 6) {
var G__14251__i = 0, G__14251__a = new Array(arguments.length -  6);
while (G__14251__i < G__14251__a.length) {G__14251__a[G__14251__i] = arguments[G__14251__i + 6]; ++G__14251__i;}
G__14250 = new cljs.core.IndexedSeq(G__14251__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__14198,f,a,b,c, G__14250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14262 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14262) : f.call(null,G__14262));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14263 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14264 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14263,G__14264) : f.call(null,G__14263,G__14264));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14265 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14266 = x;
var G__14267 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14265,G__14266,G__14267) : f.call(null,G__14265,G__14266,G__14267));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14268 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14269 = x;
var G__14270 = y;
var G__14271 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14268,G__14269,G__14270,G__14271) : f.call(null,G__14268,G__14269,G__14270,G__14271));
})());
});
var update__7 = (function() { 
var G__14272__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__14272 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__14273__i = 0, G__14273__a = new Array(arguments.length -  6);
while (G__14273__i < G__14273__a.length) {G__14273__a[G__14273__i] = arguments[G__14273__i + 6]; ++G__14273__i;}
  more = new cljs.core.IndexedSeq(G__14273__a,0);
} 
return G__14272__delegate.call(this,m,k,f,x,y,z,more);};
G__14272.cljs$lang$maxFixedArity = 6;
G__14272.cljs$lang$applyTo = (function (arglist__14274){
var m = cljs.core.first(arglist__14274);
arglist__14274 = cljs.core.next(arglist__14274);
var k = cljs.core.first(arglist__14274);
arglist__14274 = cljs.core.next(arglist__14274);
var f = cljs.core.first(arglist__14274);
arglist__14274 = cljs.core.next(arglist__14274);
var x = cljs.core.first(arglist__14274);
arglist__14274 = cljs.core.next(arglist__14274);
var y = cljs.core.first(arglist__14274);
arglist__14274 = cljs.core.next(arglist__14274);
var z = cljs.core.first(arglist__14274);
var more = cljs.core.rest(arglist__14274);
return G__14272__delegate(m,k,f,x,y,z,more);
});
G__14272.cljs$core$IFn$_invoke$arity$variadic = G__14272__delegate;
return G__14272;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__14275 = null;
if (arguments.length > 6) {
var G__14276__i = 0, G__14276__a = new Array(arguments.length -  6);
while (G__14276__i < G__14276__a.length) {G__14276__a[G__14276__i] = arguments[G__14276__i + 6]; ++G__14276__i;}
G__14275 = new cljs.core.IndexedSeq(G__14276__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__14275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__14277 = (ll - (5));
var G__14278 = r;
ll = G__14277;
ret = G__14278;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14283 = cljs.core.pv_aget(node,(0));
var G__14284 = (level - (5));
node = G__14283;
level = G__14284;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__14285 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__14286 = (level - (5));
node = G__14285;
level = G__14286;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14296 = init__$2;
var G__14297 = (j + i);
var G__14298 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14296,G__14297,G__14298) : f.call(null,G__14296,G__14297,G__14298));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14309 = (j + (1));
var G__14310 = init__$3;
j = G__14309;
init__$2 = G__14310;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14299 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14299) : cljs.core.deref.call(null,G__14299));
} else {
var G__14311 = (i + len);
var G__14312 = init__$2;
i = G__14311;
init__$1 = G__14312;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__14300 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14300) : cljs.core.tv_editable_root.call(null,G__14300));
})(),(function (){var G__14301 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14301) : cljs.core.tv_editable_tail.call(null,G__14301));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__14302 = init__$2;
var G__14303 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14302,G__14303) : f.call(null,G__14302,G__14303));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__14313 = (j + (1));
var G__14314 = init__$3;
j = G__14313;
init__$2 = G__14314;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14304 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14304) : cljs.core.deref.call(null,G__14304));
} else {
var G__14315 = (i + len);
var G__14316 = init__$2;
i = G__14315;
init__$1 = G__14316;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__14305 = coll__$1;
var G__14306 = cljs.core.first_array_for_longvec(coll__$1);
var G__14307 = (0);
var G__14308 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14305,G__14306,G__14307,G__14308) : cljs.core.chunked_seq.call(null,G__14305,G__14306,G__14307,G__14308));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4677__auto___14317 = len;
var i_14318 = (0);
while(true){
if((i_14318 < n__4677__auto___14317)){
(new_tail[i_14318] = (self__.tail[i_14318]));

var G__14319 = (i_14318 + (1));
i_14318 = G__14319;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__14320 = null;
var G__14320__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14320__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14320 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14320__2.call(this,self__,k);
case 3:
return G__14320__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14320.cljs$core$IFn$_invoke$arity$2 = G__14320__2;
G__14320.cljs$core$IFn$_invoke$arity$3 = G__14320__3;
return G__14320;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args14295){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14295)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__14321 = (i + (1));
var G__14322 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__14321;
out = G__14322;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14323__i = 0, G__14323__a = new Array(arguments.length -  0);
while (G__14323__i < G__14323__a.length) {G__14323__a[G__14323__i] = arguments[G__14323__i + 0]; ++G__14323__i;}
  args = new cljs.core.IndexedSeq(G__14323__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__14324){
var args = cljs.core.seq(arglist__14324);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14325 = self__.vec;
var G__14326 = self__.node;
var G__14327 = self__.i;
var G__14328 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14325,G__14326,G__14327,G__14328) : cljs.core.chunked_seq.call(null,G__14325,G__14326,G__14327,G__14328));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__14329 = self__.vec;
var G__14330 = (self__.i + self__.off);
var G__14331 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14329,G__14330,G__14331) : cljs.core.subvec.call(null,G__14329,G__14330,G__14331));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__14332 = self__.vec;
var G__14333 = (self__.i + self__.off);
var G__14334 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14332,G__14333,G__14334) : cljs.core.subvec.call(null,G__14332,G__14333,G__14334));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__14335 = self__.vec;
var G__14336 = self__.node;
var G__14337 = self__.i;
var G__14338 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14335,G__14336,G__14337,G__14338) : cljs.core.chunked_seq.call(null,G__14335,G__14336,G__14337,G__14338));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14339 = self__.vec;
var G__14340 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14341 = end;
var G__14342 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14339,G__14340,G__14341,G__14342) : cljs.core.chunked_seq.call(null,G__14339,G__14340,G__14341,G__14342));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__14343 = self__.vec;
var G__14344 = self__.node;
var G__14345 = self__.i;
var G__14346 = self__.off;
var G__14347 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14343,G__14344,G__14345,G__14346,G__14347) : cljs.core.chunked_seq.call(null,G__14343,G__14344,G__14345,G__14346,G__14347));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__14348 = self__.vec;
var G__14349 = cljs.core.unchecked_array_for(self__.vec,end);
var G__14350 = end;
var G__14351 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14348,G__14349,G__14350,G__14351) : cljs.core.chunked_seq.call(null,G__14348,G__14349,G__14350,G__14351));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__14353 = self__.meta;
var G__14354 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__14355 = self__.start;
var G__14356 = (function (){var x__4107__auto__ = self__.end;
var y__4108__auto__ = (v_pos + (1));
return ((x__4107__auto__ > y__4108__auto__) ? x__4107__auto__ : y__4108__auto__);
})();
var G__14357 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14353,G__14354,G__14355,G__14356,G__14357) : cljs.core.build_subvec.call(null,G__14353,G__14354,G__14355,G__14356,G__14357));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__14358 = self__.meta;
var G__14359 = self__.v;
var G__14360 = self__.start;
var G__14361 = (self__.end - (1));
var G__14362 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14358,G__14359,G__14360,G__14361,G__14362) : cljs.core.build_subvec.call(null,G__14358,G__14359,G__14360,G__14361,G__14362));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__14364 = meta__$1;
var G__14365 = self__.v;
var G__14366 = self__.start;
var G__14367 = self__.end;
var G__14368 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14364,G__14365,G__14366,G__14367,G__14368) : cljs.core.build_subvec.call(null,G__14364,G__14365,G__14366,G__14367,G__14368));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__14369 = self__.meta;
var G__14370 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__14371 = self__.start;
var G__14372 = (self__.end + (1));
var G__14373 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14369,G__14370,G__14371,G__14372,G__14373) : cljs.core.build_subvec.call(null,G__14369,G__14370,G__14371,G__14372,G__14373));
});

cljs.core.Subvec.prototype.call = (function() {
var G__14374 = null;
var G__14374__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__14374__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__14374 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14374__2.call(this,self__,k);
case 3:
return G__14374__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14374.cljs$core$IFn$_invoke$arity$2 = G__14374__2;
G__14374.cljs$core$IFn$_invoke$arity$3 = G__14374__3;
return G__14374;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args14352){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14352)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__14375 = meta;
var G__14376 = v.v;
var G__14377 = (v.start + start);
var G__14378 = (v.start + end);
var G__14379 = __hash;
meta = G__14375;
v = G__14376;
start = G__14377;
end = G__14378;
__hash = G__14379;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj14386 = {};
return obj14386;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__14394 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__14395 = (level - (5));
node = G__14394;
level = G__14395;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__14399 = null;
var G__14399__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14399__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14399 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14399__2.call(this,self__,k);
case 3:
return G__14399__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14399.cljs$core$IFn$_invoke$arity$2 = G__14399__2;
G__14399.cljs$core$IFn$_invoke$arity$3 = G__14399__3;
return G__14399;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args14396){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14396)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3790__auto__ = self__.front;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3790__auto__ = self__.rear;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__14400 = (i + incr);
i = G__14400;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__14401 = (i + (1));
var G__14402 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__14401;
out = G__14402;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj14406 = {};
return obj14406;
})();
var l = ks.length;
var i_14407 = (0);
while(true){
if((i_14407 < l)){
var k_14408 = (ks[i_14407]);
(new_obj[k_14408] = (obj[k_14408]));

var G__14409 = (i_14407 + (1));
i_14407 = G__14409;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3778__auto__ = (function (){var G__14413 = k;
return goog.isString(G__14413);
})();
if(cljs.core.truth_(and__3778__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3778__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__14414 = init__$1;
var G__14415 = k;
var G__14416 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14414,G__14415,G__14416) : f.call(null,G__14414,G__14415,G__14416));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14417 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14417) : cljs.core.deref.call(null,G__14417));
} else {
var G__14423 = cljs.core.rest(keys__$1);
var G__14424 = init__$2;
keys__$1 = G__14423;
init__$1 = G__14424;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3778__auto__ = (function (){var G__14419 = k;
return goog.isString(G__14419);
})();
if(cljs.core.truth_(and__3778__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3778__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__14420 = k;
return goog.isString(G__14420);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3778__auto__ = (function (){var G__14422 = k;
return goog.isString(G__14422);
})();
if(cljs.core.truth_(and__3778__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3778__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__14410_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__14410_SHARP_,(self__.strobj[p1__14410_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__14425 = null;
var G__14425__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14425__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14425 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14425__2.call(this,self__,k);
case 3:
return G__14425__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14425.cljs$core$IFn$_invoke$arity$2 = G__14425__2;
G__14425.cljs$core$IFn$_invoke$arity$3 = G__14425__3;
return G__14425;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args14411){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14411)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj14427 = {};
return obj14427;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__14428 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14428,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14428,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__14429 = (i + (2));
i = G__14429;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__14430 = (i + (2));
i = G__14430;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__14431 = (i + (2));
i = G__14431;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__14432 = (i + (2));
i = G__14432;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__14433 = (i + (2));
i = G__14433;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3790__auto__ = (function (){var G__14437 = k;
return goog.isString(G__14437);
})();
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_14438 = (0);
while(true){
if((i_14438 < l)){
(narr[i_14438] = (arr[i_14438]));

var G__14439 = (i_14438 + (1));
i_14438 = G__14439;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14441 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14441) : cljs.core.keys.call(null,G__14441));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14442 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14442) : cljs.core.vals.call(null,G__14442));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14443 = cljs.core.seq(coll);
var chunk__14444 = null;
var count__14445 = (0);
var i__14446 = (0);
while(true){
if((i__14446 < count__14445)){
var vec__14447 = chunk__14444.cljs$core$IIndexed$_nth$arity$2(null,i__14446);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14447,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14447,(1),null);
var G__14448_14461 = v;
var G__14449_14462 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14448_14461,G__14449_14462) : f.call(null,G__14448_14461,G__14449_14462));

var G__14463 = seq__14443;
var G__14464 = chunk__14444;
var G__14465 = count__14445;
var G__14466 = (i__14446 + (1));
seq__14443 = G__14463;
chunk__14444 = G__14464;
count__14445 = G__14465;
i__14446 = G__14466;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14443);
if(temp__4126__auto__){
var seq__14443__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14443__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__14443__$1);
var G__14467 = cljs.core.chunk_rest(seq__14443__$1);
var G__14468 = c__4577__auto__;
var G__14469 = cljs.core.count(c__4577__auto__);
var G__14470 = (0);
seq__14443 = G__14467;
chunk__14444 = G__14468;
count__14445 = G__14469;
i__14446 = G__14470;
continue;
} else {
var vec__14450 = cljs.core.first(seq__14443__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14450,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14450,(1),null);
var G__14451_14471 = v;
var G__14452_14472 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14451_14471,G__14452_14472) : f.call(null,G__14451_14471,G__14452_14472));

var G__14473 = cljs.core.next(seq__14443__$1);
var G__14474 = null;
var G__14475 = (0);
var G__14476 = (0);
seq__14443 = G__14473;
chunk__14444 = G__14474;
count__14445 = G__14475;
i__14446 = G__14476;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__14453 = init__$1;
var G__14454 = (self__.arr[i]);
var G__14455 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14453,G__14454,G__14455) : f.call(null,G__14453,G__14454,G__14455));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14456 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14456) : cljs.core.deref.call(null,G__14456));
} else {
var G__14477 = (i + (2));
var G__14478 = init__$2;
i = G__14477;
init__$1 = G__14478;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__14457 = other;
if(G__14457){
var bit__4464__auto__ = (G__14457.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4464__auto__) || (G__14457.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__14479 = (i + (2));
i = G__14479;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj14459 = {};
return obj14459;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__14480 = (s + (2));
var G__14481 = d;
s = G__14480;
d = G__14481;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__14482 = (s + (2));
var G__14483 = (d + (2));
s = G__14482;
d = G__14483;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__14460 = cljs.core.aclone(self__.arr);
(G__14460[(idx + (1))] = v);

return G__14460;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14484 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14485 = cljs.core.next(es);
ret = G__14484;
es = G__14485;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__14486 = null;
var G__14486__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14486__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14486 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14486__2.call(this,self__,k);
case 3:
return G__14486__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14486.cljs$core$IFn$_invoke$arity$2 = G__14486__2;
G__14486.cljs$core$IFn$_invoke$arity$3 = G__14486__3;
return G__14486;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args14440){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14440)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__14487 = (i + (2));
var G__14488 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__14487;
ret = G__14488;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__14489_14497 = self__.arr;
G__14489_14497.pop();

G__14489_14497.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__14490 = self__.len;
var G__14491 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__14490,G__14491) : cljs.core.array__GT_transient_hash_map.call(null,G__14490,G__14491));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__14492 = o;
if(G__14492){
var bit__4471__auto__ = (G__14492.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4471__auto__) || (G__14492.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__14492.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14492);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14492);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__14493 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14493) : cljs.core.key.call(null,G__14493));
})(),(function (){var G__14494 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14494) : cljs.core.val.call(null,G__14494));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__14498 = cljs.core.next(es);
var G__14499 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__14495 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14495) : cljs.core.key.call(null,G__14495));
})(),(function (){var G__14496 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14496) : cljs.core.val.call(null,G__14496));
})());
es = G__14498;
tcoll__$2 = G__14499;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__14500 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__14501 = (i + (2));
out = G__14500;
i = G__14501;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__14504 = cljs.core.aclone(arr);
(G__14504[i] = a);

return G__14504;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__14505 = cljs.core.aclone(arr);
(G__14505[i] = a);

(G__14505[j] = b);

return G__14505;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__14510 = init__$1;
var G__14511 = k;
var G__14512 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14510,G__14511,G__14512) : f.call(null,G__14510,G__14511,G__14512));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14513 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14513) : cljs.core.deref.call(null,G__14513));
} else {
var G__14514 = (i + (2));
var G__14515 = init__$2;
i = G__14514;
init__$1 = G__14515;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14516 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14516) : cljs.core.create_inode_seq.call(null,G__14516));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14530 = (0);
var j_14531 = (0);
while(true){
if((i_14530 < (32))){
if((((self__.bitmap >>> i_14530) & (1)) === (0))){
var G__14532 = (i_14530 + (1));
var G__14533 = j_14531;
i_14530 = G__14532;
j_14531 = G__14533;
continue;
} else {
(nodes[i_14530] = ((!(((self__.arr[j_14531]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_14531])),(self__.arr[j_14531]),(self__.arr[(j_14531 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14531 + (1))])));

var G__14534 = (i_14530 + (1));
var G__14535 = (j_14531 + (2));
i_14530 = G__14534;
j_14531 = G__14535;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__14517 = edit__$1;
var G__14518 = (shift + (5));
var G__14519 = key_or_nil;
var G__14520 = val_or_node;
var G__14521 = hash;
var G__14522 = key;
var G__14523 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__14517,G__14518,G__14519,G__14520,G__14521,G__14522,G__14523) : cljs.core.create_node.call(null,G__14517,G__14518,G__14519,G__14520,G__14521,G__14522,G__14523));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_14536 = (0);
var j_14537 = (0);
while(true){
if((i_14536 < (32))){
if((((self__.bitmap >>> i_14536) & (1)) === (0))){
var G__14538 = (i_14536 + (1));
var G__14539 = j_14537;
i_14536 = G__14538;
j_14537 = G__14539;
continue;
} else {
(nodes[i_14536] = ((!(((self__.arr[j_14537]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_14537])),(self__.arr[j_14537]),(self__.arr[(j_14537 + (1))]),added_leaf_QMARK_):(self__.arr[(j_14537 + (1))])));

var G__14540 = (i_14536 + (1));
var G__14541 = (j_14537 + (2));
i_14536 = G__14540;
j_14537 = G__14541;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__14524 = (shift + (5));
var G__14525 = key_or_nil;
var G__14526 = val_or_node;
var G__14527 = hash;
var G__14528 = key;
var G__14529 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__14524,G__14525,G__14526,G__14527,G__14528,G__14529) : cljs.core.create_node.call(null,G__14524,G__14525,G__14526,G__14527,G__14528,G__14529));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__14542 = (i + (1));
var G__14543 = (j + (2));
var G__14544 = (bitmap | ((1) << i));
i = G__14542;
j = G__14543;
bitmap = G__14544;
continue;
} else {
var G__14545 = (i + (1));
var G__14546 = j;
var G__14547 = bitmap;
i = G__14545;
j = G__14546;
bitmap = G__14547;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14548 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__14548) : cljs.core.create_array_node_seq.call(null,G__14548));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14549 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14549) : cljs.core.deref.call(null,G__14549));
} else {
var G__14550 = (i + (1));
var G__14551 = init__$2;
i = G__14550;
init__$1 = G__14551;
continue;
}
} else {
var G__14552 = (i + (1));
var G__14553 = init__$1;
i = G__14552;
init__$1 = G__14553;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__14554 = (i + (2));
i = G__14554;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__14555 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14555) : cljs.core.create_inode_seq.call(null,G__14555));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__14556 = self__.nodes;
var G__14557 = (self__.i + (2));
var G__14558 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14556,G__14557,G__14558) : cljs.core.create_inode_seq.call(null,G__14556,G__14557,G__14558));
} else {
var G__14559 = self__.nodes;
var G__14560 = self__.i;
var G__14561 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14559,G__14560,G__14561) : cljs.core.create_inode_seq.call(null,G__14559,G__14560,G__14561));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__14565 = (j + (2));
j = G__14565;
continue;
}
} else {
var G__14566 = (j + (2));
j = G__14566;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__14567 = null;
var G__14568 = self__.nodes;
var G__14569 = self__.i;
var G__14570 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__14567,G__14568,G__14569,G__14570) : cljs.core.create_array_node_seq.call(null,G__14567,G__14568,G__14569,G__14570));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__14575 = (j + (1));
j = G__14575;
continue;
}
} else {
var G__14576 = (j + (1));
j = G__14576;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14578 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14578) : cljs.core.keys.call(null,G__14578));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14579 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14579) : cljs.core.vals.call(null,G__14579));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14580 = cljs.core.seq(coll);
var chunk__14581 = null;
var count__14582 = (0);
var i__14583 = (0);
while(true){
if((i__14583 < count__14582)){
var vec__14584 = chunk__14581.cljs$core$IIndexed$_nth$arity$2(null,i__14583);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14584,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14584,(1),null);
var G__14585_14596 = v;
var G__14586_14597 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14585_14596,G__14586_14597) : f.call(null,G__14585_14596,G__14586_14597));

var G__14598 = seq__14580;
var G__14599 = chunk__14581;
var G__14600 = count__14582;
var G__14601 = (i__14583 + (1));
seq__14580 = G__14598;
chunk__14581 = G__14599;
count__14582 = G__14600;
i__14583 = G__14601;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14580);
if(temp__4126__auto__){
var seq__14580__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14580__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__14580__$1);
var G__14602 = cljs.core.chunk_rest(seq__14580__$1);
var G__14603 = c__4577__auto__;
var G__14604 = cljs.core.count(c__4577__auto__);
var G__14605 = (0);
seq__14580 = G__14602;
chunk__14581 = G__14603;
count__14582 = G__14604;
i__14583 = G__14605;
continue;
} else {
var vec__14587 = cljs.core.first(seq__14580__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14587,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14587,(1),null);
var G__14588_14606 = v;
var G__14589_14607 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14588_14606,G__14589_14607) : f.call(null,G__14588_14606,G__14589_14607));

var G__14608 = cljs.core.next(seq__14580__$1);
var G__14609 = null;
var G__14610 = (0);
var G__14611 = (0);
seq__14580 = G__14608;
chunk__14581 = G__14609;
count__14582 = G__14610;
i__14583 = G__14611;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__14590 = init;
var G__14591 = null;
var G__14592 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14590,G__14591,G__14592) : f.call(null,G__14590,G__14591,G__14592));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__14593 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14593) : cljs.core.deref.call(null,G__14593));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj14595 = {};
return obj14595;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14612 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14613 = cljs.core.next(es);
ret = G__14612;
es = G__14613;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__14614 = null;
var G__14614__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14614__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14614 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14614__2.call(this,self__,k);
case 3:
return G__14614__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14614.cljs$core$IFn$_invoke$arity$2 = G__14614__2;
G__14614.cljs$core$IFn$_invoke$arity$3 = G__14614__3;
return G__14614;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args14577){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14577)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__14615 = (i + (1));
var G__14616 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__14615;
out = G__14616;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__14617 = o;
if(G__14617){
var bit__4471__auto__ = (G__14617.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4471__auto__) || (G__14617.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__14617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14617);
}
})()){
return tcoll.assoc_BANG_((function (){var G__14618 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14618) : cljs.core.key.call(null,G__14618));
})(),(function (){var G__14619 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14619) : cljs.core.val.call(null,G__14619));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__14622 = cljs.core.next(es);
var G__14623 = tcoll__$1.assoc_BANG_((function (){var G__14620 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14620) : cljs.core.key.call(null,G__14620));
})(),(function (){var G__14621 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14621) : cljs.core.val.call(null,G__14621));
})());
es = G__14622;
tcoll__$1 = G__14623;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__14624 = ((ascending_QMARK_)?t.left:t.right);
var G__14625 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__14624;
stack__$1 = G__14625;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__14638 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14638) : cljs.core.deref.call(null,G__14638));
} else {
var init__$2 = (function (){var G__14639 = init__$1;
var G__14640 = node.key;
var G__14641 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14639,G__14640,G__14641) : f.call(null,G__14639,G__14640,G__14641));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14642 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14642) : cljs.core.deref.call(null,G__14642));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__14643 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14643) : cljs.core.deref.call(null,G__14643));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__14645 = null;
var G__14645__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14645__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14645 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14645__2.call(this,self__,k);
case 3:
return G__14645__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14645.cljs$core$IFn$_invoke$arity$2 = G__14645__2;
G__14645.cljs$core$IFn$_invoke$arity$3 = G__14645__3;
return G__14645;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args14644){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14644)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__14647 = null;
var G__14647__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14647__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14647 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14647__2.call(this,self__,k);
case 3:
return G__14647__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14647.cljs$core$IFn$_invoke$arity$2 = G__14647__2;
G__14647.cljs$core$IFn$_invoke$arity$3 = G__14647__3;
return G__14647;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args14646){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14646)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__14660 = k;
var G__14661 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14660,G__14661) : comp.call(null,G__14660,G__14661));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__14680 = k;
var G__14681 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14680,G__14681) : comp.call(null,G__14680,G__14681));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__14692 = k;
var G__14693 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14692,G__14693) : comp.call(null,G__14692,G__14693));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14695 = cljs.core.seq(coll);
var chunk__14696 = null;
var count__14697 = (0);
var i__14698 = (0);
while(true){
if((i__14698 < count__14697)){
var vec__14699 = chunk__14696.cljs$core$IIndexed$_nth$arity$2(null,i__14698);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14699,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14699,(1),null);
var G__14700_14712 = v;
var G__14701_14713 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14700_14712,G__14701_14713) : f.call(null,G__14700_14712,G__14701_14713));

var G__14714 = seq__14695;
var G__14715 = chunk__14696;
var G__14716 = count__14697;
var G__14717 = (i__14698 + (1));
seq__14695 = G__14714;
chunk__14696 = G__14715;
count__14697 = G__14716;
i__14698 = G__14717;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14695);
if(temp__4126__auto__){
var seq__14695__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14695__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__14695__$1);
var G__14718 = cljs.core.chunk_rest(seq__14695__$1);
var G__14719 = c__4577__auto__;
var G__14720 = cljs.core.count(c__4577__auto__);
var G__14721 = (0);
seq__14695 = G__14718;
chunk__14696 = G__14719;
count__14697 = G__14720;
i__14698 = G__14721;
continue;
} else {
var vec__14702 = cljs.core.first(seq__14695__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14702,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14702,(1),null);
var G__14703_14722 = v;
var G__14704_14723 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14703_14722,G__14704_14723) : f.call(null,G__14703_14722,G__14704_14723));

var G__14724 = cljs.core.next(seq__14695__$1);
var G__14725 = null;
var G__14726 = (0);
var G__14727 = (0);
seq__14695 = G__14724;
chunk__14696 = G__14725;
count__14697 = G__14726;
i__14698 = G__14727;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14705 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14705) : cljs.core.keys.call(null,G__14705));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14706 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14706) : cljs.core.vals.call(null,G__14706));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14707 = k;
var G__14708 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14707,G__14708) : self__.comp.call(null,G__14707,G__14708));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__14728 = t.left;
t = G__14728;
continue;
} else {
var G__14729 = t.right;
t = G__14729;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14730 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14731 = cljs.core.next(es);
ret = G__14730;
es = G__14731;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__14732 = null;
var G__14732__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14732__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14732 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14732__2.call(this,self__,k);
case 3:
return G__14732__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14732.cljs$core$IFn$_invoke$arity$2 = G__14732__2;
G__14732.cljs$core$IFn$_invoke$arity$3 = G__14732__3;
return G__14732;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args14694){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14694)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14709 = k;
var G__14710 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14709,G__14710) : self__.comp.call(null,G__14709,G__14710));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__14733 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14734 = t.left;
stack = G__14733;
t = G__14734;
continue;
} else {
var G__14735 = stack;
var G__14736 = t.right;
stack = G__14735;
t = G__14736;
continue;
}
} else {
if((c > (0))){
var G__14737 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14738 = t.right;
stack = G__14737;
t = G__14738;
continue;
} else {
var G__14739 = stack;
var G__14740 = t.left;
stack = G__14739;
t = G__14740;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__14711 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14711) : cljs.core.key.call(null,G__14711));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__14741 = cljs.core.nnext(in$);
var G__14742 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14741;
out = G__14742;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14743__i = 0, G__14743__a = new Array(arguments.length -  0);
while (G__14743__i < G__14743__a.length) {G__14743__a[G__14743__i] = arguments[G__14743__i + 0]; ++G__14743__i;}
  keyvals = new cljs.core.IndexedSeq(G__14743__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__14744){
var keyvals = cljs.core.seq(arglist__14744);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14745__i = 0, G__14745__a = new Array(arguments.length -  0);
while (G__14745__i < G__14745__a.length) {G__14745__a[G__14745__i] = arguments[G__14745__i + 0]; ++G__14745__i;}
  keyvals = new cljs.core.IndexedSeq(G__14745__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__14746){
var keyvals = cljs.core.seq(arglist__14746);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj14750 = {};
return obj14750;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__14751 = cljs.core.nnext(kvs);
kvs = G__14751;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14752__i = 0, G__14752__a = new Array(arguments.length -  0);
while (G__14752__i < G__14752__a.length) {G__14752__a[G__14752__i] = arguments[G__14752__i + 0]; ++G__14752__i;}
  keyvals = new cljs.core.IndexedSeq(G__14752__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__14753){
var keyvals = cljs.core.seq(arglist__14753);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__14754 = cljs.core.nnext(in$);
var G__14755 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14754;
out = G__14755;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14756__i = 0, G__14756__a = new Array(arguments.length -  0);
while (G__14756__i < G__14756__a.length) {G__14756__a[G__14756__i] = arguments[G__14756__i + 0]; ++G__14756__i;}
  keyvals = new cljs.core.IndexedSeq(G__14756__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__14757){
var keyvals = cljs.core.seq(arglist__14757);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__14758 = cljs.core.nnext(in$);
var G__14759 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14758;
out = G__14759;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__14760__i = 0, G__14760__a = new Array(arguments.length -  1);
while (G__14760__i < G__14760__a.length) {G__14760__a[G__14760__i] = arguments[G__14760__i + 1]; ++G__14760__i;}
  keyvals = new cljs.core.IndexedSeq(G__14760__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__14761){
var comparator = cljs.core.first(arglist__14761);
var keyvals = cljs.core.rest(arglist__14761);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14762 = self__.mseq;
if(G__14762){
var bit__4471__auto__ = (G__14762.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4471__auto__) || (G__14762.cljs$core$INext$)){
return true;
} else {
if((!G__14762.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14762);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14762);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14763 = self__.mseq;
if(G__14763){
var bit__4471__auto__ = (G__14763.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4471__auto__) || (G__14763.cljs$core$INext$)){
return true;
} else {
if((!G__14763.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14763);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14763);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14764 = self__.mseq;
if(G__14764){
var bit__4471__auto__ = (G__14764.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4471__auto__) || (G__14764.cljs$core$INext$)){
return true;
} else {
if((!G__14764.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14764);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14764);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14765 = self__.mseq;
if(G__14765){
var bit__4471__auto__ = (G__14765.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4471__auto__) || (G__14765.cljs$core$INext$)){
return true;
} else {
if((!G__14765.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14765);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14765);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__14766_SHARP_,p2__14767_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3790__auto__ = p1__14766_SHARP_;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__14767_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__14768__i = 0, G__14768__a = new Array(arguments.length -  0);
while (G__14768__i < G__14768__a.length) {G__14768__a[G__14768__i] = arguments[G__14768__i + 0]; ++G__14768__i;}
  maps = new cljs.core.IndexedSeq(G__14768__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__14769){
var maps = cljs.core.seq(arglist__14769);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14772 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14773 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14772,G__14773) : f.call(null,G__14772,G__14773));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3790__auto__ = m1;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__14774__i = 0, G__14774__a = new Array(arguments.length -  1);
while (G__14774__i < G__14774__a.length) {G__14774__a[G__14774__i] = arguments[G__14774__i + 1]; ++G__14774__i;}
  maps = new cljs.core.IndexedSeq(G__14774__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__14775){
var f = cljs.core.first(arglist__14775);
var maps = cljs.core.rest(arglist__14775);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$14);
var G__14776 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$14))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__14777 = cljs.core.next(keys);
ret = G__14776;
keys = G__14777;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14780 = cljs.core.seq(coll);
var chunk__14781 = null;
var count__14782 = (0);
var i__14783 = (0);
while(true){
if((i__14783 < count__14782)){
var vec__14784 = chunk__14781.cljs$core$IIndexed$_nth$arity$2(null,i__14783);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14784,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14784,(1),null);
var G__14785_14790 = v;
var G__14786_14791 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14785_14790,G__14786_14791) : f.call(null,G__14785_14790,G__14786_14791));

var G__14792 = seq__14780;
var G__14793 = chunk__14781;
var G__14794 = count__14782;
var G__14795 = (i__14783 + (1));
seq__14780 = G__14792;
chunk__14781 = G__14793;
count__14782 = G__14794;
i__14783 = G__14795;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14780);
if(temp__4126__auto__){
var seq__14780__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14780__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__14780__$1);
var G__14796 = cljs.core.chunk_rest(seq__14780__$1);
var G__14797 = c__4577__auto__;
var G__14798 = cljs.core.count(c__4577__auto__);
var G__14799 = (0);
seq__14780 = G__14796;
chunk__14781 = G__14797;
count__14782 = G__14798;
i__14783 = G__14799;
continue;
} else {
var vec__14787 = cljs.core.first(seq__14780__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14787,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14787,(1),null);
var G__14788_14800 = v;
var G__14789_14801 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14788_14800,G__14789_14801) : f.call(null,G__14788_14800,G__14789_14801));

var G__14802 = cljs.core.next(seq__14780__$1);
var G__14803 = null;
var G__14804 = (0);
var G__14805 = (0);
seq__14780 = G__14802;
chunk__14781 = G__14803;
count__14782 = G__14804;
i__14783 = G__14805;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14778_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14778_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__14806 = null;
var G__14806__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14806__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14806 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14806__2.call(this,self__,k);
case 3:
return G__14806__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14806.cljs$core$IFn$_invoke$arity$2 = G__14806__2;
G__14806.cljs$core$IFn$_invoke$arity$3 = G__14806__3;
return G__14806;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args14779){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14779)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__14807 = (i + (1));
var G__14808 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__14807;
out = G__14808;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__14809 = (i + (1));
var G__14810 = cljs.core._conj_BANG_(out,(items[i]));
i = G__14809;
out = G__14810;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__14812 = null;
var G__14812__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__14812__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__14812 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14812__2.call(this,self__,k);
case 3:
return G__14812__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14812.cljs$core$IFn$_invoke$arity$2 = G__14812__2;
G__14812.cljs$core$IFn$_invoke$arity$3 = G__14812__3;
return G__14812;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args14811){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14811)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14815 = cljs.core.seq(coll);
var chunk__14816 = null;
var count__14817 = (0);
var i__14818 = (0);
while(true){
if((i__14818 < count__14817)){
var vec__14819 = chunk__14816.cljs$core$IIndexed$_nth$arity$2(null,i__14818);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14819,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14819,(1),null);
var G__14820_14825 = v;
var G__14821_14826 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14820_14825,G__14821_14826) : f.call(null,G__14820_14825,G__14821_14826));

var G__14827 = seq__14815;
var G__14828 = chunk__14816;
var G__14829 = count__14817;
var G__14830 = (i__14818 + (1));
seq__14815 = G__14827;
chunk__14816 = G__14828;
count__14817 = G__14829;
i__14818 = G__14830;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14815);
if(temp__4126__auto__){
var seq__14815__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14815__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__14815__$1);
var G__14831 = cljs.core.chunk_rest(seq__14815__$1);
var G__14832 = c__4577__auto__;
var G__14833 = cljs.core.count(c__4577__auto__);
var G__14834 = (0);
seq__14815 = G__14831;
chunk__14816 = G__14832;
count__14817 = G__14833;
i__14818 = G__14834;
continue;
} else {
var vec__14822 = cljs.core.first(seq__14815__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14822,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14822,(1),null);
var G__14823_14835 = v;
var G__14824_14836 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14823_14835,G__14824_14836) : f.call(null,G__14823_14835,G__14824_14836));

var G__14837 = cljs.core.next(seq__14815__$1);
var G__14838 = null;
var G__14839 = (0);
var G__14840 = (0);
seq__14815 = G__14837;
chunk__14816 = G__14838;
count__14817 = G__14839;
i__14818 = G__14840;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14813_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14813_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__14841 = null;
var G__14841__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14841__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14841 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14841__2.call(this,self__,k);
case 3:
return G__14841__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14841.cljs$core$IFn$_invoke$arity$2 = G__14841__2;
G__14841.cljs$core$IFn$_invoke$arity$3 = G__14841__3;
return G__14841;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args14814){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14814)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4671__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4671__auto__.length)){
var G__14842 = (i + (1));
var G__14843 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__14842;
res = G__14843;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__14844 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__14845 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__14844;
out = G__14845;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__14846__delegate = function (keys){
return cljs.core.set(keys);
};
var G__14846 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__14847__i = 0, G__14847__a = new Array(arguments.length -  0);
while (G__14847__i < G__14847__a.length) {G__14847__a[G__14847__i] = arguments[G__14847__i + 0]; ++G__14847__i;}
  keys = new cljs.core.IndexedSeq(G__14847__a,0);
} 
return G__14846__delegate.call(this,keys);};
G__14846.cljs$lang$maxFixedArity = 0;
G__14846.cljs$lang$applyTo = (function (arglist__14848){
var keys = cljs.core.seq(arglist__14848);
return G__14846__delegate(keys);
});
G__14846.cljs$core$IFn$_invoke$arity$variadic = G__14846__delegate;
return G__14846;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__14849 = null;
if (arguments.length > 0) {
var G__14850__i = 0, G__14850__a = new Array(arguments.length -  0);
while (G__14850__i < G__14850__a.length) {G__14850__a[G__14850__i] = arguments[G__14850__i + 0]; ++G__14850__i;}
G__14849 = new cljs.core.IndexedSeq(G__14850__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__14849);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__14851__i = 0, G__14851__a = new Array(arguments.length -  0);
while (G__14851__i < G__14851__a.length) {G__14851__a[G__14851__i] = arguments[G__14851__i + 0]; ++G__14851__i;}
  keys = new cljs.core.IndexedSeq(G__14851__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__14852){
var keys = cljs.core.seq(arglist__14852);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__14853__i = 0, G__14853__a = new Array(arguments.length -  1);
while (G__14853__i < G__14853__a.length) {G__14853__a[G__14853__i] = arguments[G__14853__i + 1]; ++G__14853__i;}
  keys = new cljs.core.IndexedSeq(G__14853__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__14854){
var comparator = cljs.core.first(arglist__14854);
var keys = cljs.core.rest(arglist__14854);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__14855_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__14855_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__14855_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__14856_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__14856_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__14856_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__14867,seen__$1){
while(true){
var vec__14868 = p__14867;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14868,(0),null);
var xs__$1 = vec__14868;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__14869 = cljs.core.rest(s);
var G__14870 = seen__$1;
p__14867 = G__14869;
seen__$1 = G__14870;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__14871 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__14872 = cljs.core.next(s__$1);
ret = G__14871;
s__$1 = G__14872;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__14874 = x;
if(G__14874){
var bit__4464__auto__ = (G__14874.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4464__auto__) || (G__14874.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__14875 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__14876 = cljs.core.next(ks);
var G__14877 = cljs.core.next(vs);
map = G__14875;
ks = G__14876;
vs = G__14877;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__14888 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14888) : k.call(null,G__14888));
})() > (function (){var G__14889 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14889) : k.call(null,G__14889));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__14890__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14878_SHARP_,p2__14879_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__14878_SHARP_,p2__14879_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14890 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14891__i = 0, G__14891__a = new Array(arguments.length -  3);
while (G__14891__i < G__14891__a.length) {G__14891__a[G__14891__i] = arguments[G__14891__i + 3]; ++G__14891__i;}
  more = new cljs.core.IndexedSeq(G__14891__a,0);
} 
return G__14890__delegate.call(this,k,x,y,more);};
G__14890.cljs$lang$maxFixedArity = 3;
G__14890.cljs$lang$applyTo = (function (arglist__14892){
var k = cljs.core.first(arglist__14892);
arglist__14892 = cljs.core.next(arglist__14892);
var x = cljs.core.first(arglist__14892);
arglist__14892 = cljs.core.next(arglist__14892);
var y = cljs.core.first(arglist__14892);
var more = cljs.core.rest(arglist__14892);
return G__14890__delegate(k,x,y,more);
});
G__14890.cljs$core$IFn$_invoke$arity$variadic = G__14890__delegate;
return G__14890;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__14893 = null;
if (arguments.length > 3) {
var G__14894__i = 0, G__14894__a = new Array(arguments.length -  3);
while (G__14894__i < G__14894__a.length) {G__14894__a[G__14894__i] = arguments[G__14894__i + 3]; ++G__14894__i;}
G__14893 = new cljs.core.IndexedSeq(G__14894__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__14905 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14905) : k.call(null,G__14905));
})() < (function (){var G__14906 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14906) : k.call(null,G__14906));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__14907__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14895_SHARP_,p2__14896_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__14895_SHARP_,p2__14896_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14907 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14908__i = 0, G__14908__a = new Array(arguments.length -  3);
while (G__14908__i < G__14908__a.length) {G__14908__a[G__14908__i] = arguments[G__14908__i + 3]; ++G__14908__i;}
  more = new cljs.core.IndexedSeq(G__14908__a,0);
} 
return G__14907__delegate.call(this,k,x,y,more);};
G__14907.cljs$lang$maxFixedArity = 3;
G__14907.cljs$lang$applyTo = (function (arglist__14909){
var k = cljs.core.first(arglist__14909);
arglist__14909 = cljs.core.next(arglist__14909);
var x = cljs.core.first(arglist__14909);
arglist__14909 = cljs.core.next(arglist__14909);
var y = cljs.core.first(arglist__14909);
var more = cljs.core.rest(arglist__14909);
return G__14907__delegate(k,x,y,more);
});
G__14907.cljs$core$IFn$_invoke$arity$variadic = G__14907__delegate;
return G__14907;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__14910 = null;
if (arguments.length > 3) {
var G__14911__i = 0, G__14911__a = new Array(arguments.length -  3);
while (G__14911__i < G__14911__a.length) {G__14911__a[G__14911__i] = arguments[G__14911__i + 3]; ++G__14911__i;}
G__14910 = new cljs.core.IndexedSeq(G__14911__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14910);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__14928 = null;
var G__14928__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14928__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14923 = result;
var G__14924 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14923,G__14924) : rf.call(null,G__14923,G__14924));
})());
})());
var G__14925 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14925) : rf.call(null,G__14925));
});
var G__14928__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__14926 = result;
var G__14927 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14926,G__14927) : rf.call(null,G__14926,G__14927));
} else {
return result;
}
});
G__14928 = function(result,input){
switch(arguments.length){
case 0:
return G__14928__0.call(this);
case 1:
return G__14928__1.call(this,result);
case 2:
return G__14928__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14928.cljs$core$IFn$_invoke$arity$0 = G__14928__0;
G__14928.cljs$core$IFn$_invoke$arity$1 = G__14928__1;
G__14928.cljs$core$IFn$_invoke$arity$2 = G__14928__2;
return G__14928;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__14941 = null;
var G__14941__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14941__1 = (function (result){
var G__14936 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14936) : rf.call(null,G__14936));
});
var G__14941__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14937 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14937) : pred.call(null,G__14937));
})())){
var G__14938 = result;
var G__14939 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14938,G__14939) : rf.call(null,G__14938,G__14939));
} else {
return cljs.core.reduced(result);
}
});
G__14941 = function(result,input){
switch(arguments.length){
case 0:
return G__14941__0.call(this);
case 1:
return G__14941__1.call(this,result);
case 2:
return G__14941__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14941.cljs$core$IFn$_invoke$arity$0 = G__14941__0;
G__14941.cljs$core$IFn$_invoke$arity$1 = G__14941__1;
G__14941.cljs$core$IFn$_invoke$arity$2 = G__14941__2;
return G__14941;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__14940 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14940) : pred.call(null,G__14940));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__14946 = (function (){var G__14948 = cljs.core._entry_key(sc,e);
var G__14949 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14948,G__14949) : comp.call(null,G__14948,G__14949));
})();
var G__14947 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14946,G__14947) : test.call(null,G__14946,G__14947));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14953 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14953,(0),null);
var s = vec__14953;
if(cljs.core.truth_((function (){var G__14954 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14954) : include.call(null,G__14954));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14955 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14955,(0),null);
var s = vec__14955;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14959 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14959,(0),null);
var s = vec__14959;
if(cljs.core.truth_((function (){var G__14960 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14960) : include.call(null,G__14960));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14961 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14961,(0),null);
var s = vec__14961;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__14962 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14962) : Math.ceil.call(null,G__14962));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4211__auto__ = self__.__hash;
if(!((h__4211__auto__ == null))){
return h__4211__auto__;
} else {
var h__4211__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4211__auto____$1;

return h__4211__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__14963 = ret;
var G__14964 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14963,G__14964) : f.call(null,G__14963,G__14964));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__14965 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14965) : cljs.core.deref.call(null,G__14965));
} else {
var G__14966 = (i + self__.step);
var G__14967 = ret__$1;
i = G__14966;
ret = G__14967;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14985 = null;
var G__14985__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14985__1 = (function (result){
var G__14982 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14982) : rf.call(null,G__14982));
});
var G__14985__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__14983 = result;
var G__14984 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14983,G__14984) : rf.call(null,G__14983,G__14984));
} else {
return result;
}
});
G__14985 = function(result,input){
switch(arguments.length){
case 0:
return G__14985__0.call(this);
case 1:
return G__14985__1.call(this,result);
case 2:
return G__14985__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14985.cljs$core$IFn$_invoke$arity$0 = G__14985__0;
G__14985.cljs$core$IFn$_invoke$arity$1 = G__14985__1;
G__14985.cljs$core$IFn$_invoke$arity$2 = G__14985__2;
return G__14985;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (a,pa){
return (function() {
var G__15007 = null;
var G__15007__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15007__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14998 = result;
var G__14999 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14998,G__14999) : rf.call(null,G__14998,G__14999));
})());
})());
var G__15000 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15000) : rf.call(null,G__15000));
});
var G__15007__2 = (function (result,input){
var pval = (function (){var G__15001 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15001) : cljs.core.deref.call(null,G__15001));
})();
var val = (function (){var G__15002 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15002) : f.call(null,G__15002));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$15)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15003 = result;
var G__15004 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15003,G__15004) : rf.call(null,G__15003,G__15004));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15007 = function(result,input){
switch(arguments.length){
case 0:
return G__15007__0.call(this);
case 1:
return G__15007__1.call(this,result);
case 2:
return G__15007__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15007.cljs$core$IFn$_invoke$arity$0 = G__15007__0;
G__15007.cljs$core$IFn$_invoke$arity$1 = G__15007__1;
G__15007.cljs$core$IFn$_invoke$arity$2 = G__15007__2;
return G__15007;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15005 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15005) : f.call(null,G__15005));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__14986_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15006 = p1__14986_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15006) : f.call(null,G__15006));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15016 = init;
var G__15017 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15016,G__15017) : f.call(null,G__15016,G__15017));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__15112 = null;
var G__15112__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__15112__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15070 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15070) : f.call(null,G__15070));
})()],null));
});
var G__15112__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15071 = x;
var G__15072 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15071,G__15072) : f.call(null,G__15071,G__15072));
})()],null));
});
var G__15112__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15073 = x;
var G__15074 = y;
var G__15075 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15073,G__15074,G__15075) : f.call(null,G__15073,G__15074,G__15075));
})()],null));
});
var G__15112__4 = (function() { 
var G__15113__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__15113 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15114__i = 0, G__15114__a = new Array(arguments.length -  3);
while (G__15114__i < G__15114__a.length) {G__15114__a[G__15114__i] = arguments[G__15114__i + 3]; ++G__15114__i;}
  args = new cljs.core.IndexedSeq(G__15114__a,0);
} 
return G__15113__delegate.call(this,x,y,z,args);};
G__15113.cljs$lang$maxFixedArity = 3;
G__15113.cljs$lang$applyTo = (function (arglist__15115){
var x = cljs.core.first(arglist__15115);
arglist__15115 = cljs.core.next(arglist__15115);
var y = cljs.core.first(arglist__15115);
arglist__15115 = cljs.core.next(arglist__15115);
var z = cljs.core.first(arglist__15115);
var args = cljs.core.rest(arglist__15115);
return G__15113__delegate(x,y,z,args);
});
G__15113.cljs$core$IFn$_invoke$arity$variadic = G__15113__delegate;
return G__15113;
})()
;
G__15112 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15112__0.call(this);
case 1:
return G__15112__1.call(this,x);
case 2:
return G__15112__2.call(this,x,y);
case 3:
return G__15112__3.call(this,x,y,z);
default:
var G__15116 = null;
if (arguments.length > 3) {
var G__15117__i = 0, G__15117__a = new Array(arguments.length -  3);
while (G__15117__i < G__15117__a.length) {G__15117__a[G__15117__i] = arguments[G__15117__i + 3]; ++G__15117__i;}
G__15116 = new cljs.core.IndexedSeq(G__15117__a,0);
}
return G__15112__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15116);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15112.cljs$lang$maxFixedArity = 3;
G__15112.cljs$lang$applyTo = G__15112__4.cljs$lang$applyTo;
G__15112.cljs$core$IFn$_invoke$arity$0 = G__15112__0;
G__15112.cljs$core$IFn$_invoke$arity$1 = G__15112__1;
G__15112.cljs$core$IFn$_invoke$arity$2 = G__15112__2;
G__15112.cljs$core$IFn$_invoke$arity$3 = G__15112__3;
G__15112.cljs$core$IFn$_invoke$arity$variadic = G__15112__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15112;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__15118 = null;
var G__15118__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__15118__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15076 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15076) : f.call(null,G__15076));
})(),(function (){var G__15077 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15077) : g.call(null,G__15077));
})()],null));
});
var G__15118__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15078 = x;
var G__15079 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15078,G__15079) : f.call(null,G__15078,G__15079));
})(),(function (){var G__15080 = x;
var G__15081 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15080,G__15081) : g.call(null,G__15080,G__15081));
})()],null));
});
var G__15118__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15082 = x;
var G__15083 = y;
var G__15084 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15082,G__15083,G__15084) : f.call(null,G__15082,G__15083,G__15084));
})(),(function (){var G__15085 = x;
var G__15086 = y;
var G__15087 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15085,G__15086,G__15087) : g.call(null,G__15085,G__15086,G__15087));
})()],null));
});
var G__15118__4 = (function() { 
var G__15119__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__15119 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15120__i = 0, G__15120__a = new Array(arguments.length -  3);
while (G__15120__i < G__15120__a.length) {G__15120__a[G__15120__i] = arguments[G__15120__i + 3]; ++G__15120__i;}
  args = new cljs.core.IndexedSeq(G__15120__a,0);
} 
return G__15119__delegate.call(this,x,y,z,args);};
G__15119.cljs$lang$maxFixedArity = 3;
G__15119.cljs$lang$applyTo = (function (arglist__15121){
var x = cljs.core.first(arglist__15121);
arglist__15121 = cljs.core.next(arglist__15121);
var y = cljs.core.first(arglist__15121);
arglist__15121 = cljs.core.next(arglist__15121);
var z = cljs.core.first(arglist__15121);
var args = cljs.core.rest(arglist__15121);
return G__15119__delegate(x,y,z,args);
});
G__15119.cljs$core$IFn$_invoke$arity$variadic = G__15119__delegate;
return G__15119;
})()
;
G__15118 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15118__0.call(this);
case 1:
return G__15118__1.call(this,x);
case 2:
return G__15118__2.call(this,x,y);
case 3:
return G__15118__3.call(this,x,y,z);
default:
var G__15122 = null;
if (arguments.length > 3) {
var G__15123__i = 0, G__15123__a = new Array(arguments.length -  3);
while (G__15123__i < G__15123__a.length) {G__15123__a[G__15123__i] = arguments[G__15123__i + 3]; ++G__15123__i;}
G__15122 = new cljs.core.IndexedSeq(G__15123__a,0);
}
return G__15118__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15118.cljs$lang$maxFixedArity = 3;
G__15118.cljs$lang$applyTo = G__15118__4.cljs$lang$applyTo;
G__15118.cljs$core$IFn$_invoke$arity$0 = G__15118__0;
G__15118.cljs$core$IFn$_invoke$arity$1 = G__15118__1;
G__15118.cljs$core$IFn$_invoke$arity$2 = G__15118__2;
G__15118.cljs$core$IFn$_invoke$arity$3 = G__15118__3;
G__15118.cljs$core$IFn$_invoke$arity$variadic = G__15118__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15118;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__15124 = null;
var G__15124__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__15124__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15088 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15088) : f.call(null,G__15088));
})(),(function (){var G__15089 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15089) : g.call(null,G__15089));
})(),(function (){var G__15090 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15090) : h.call(null,G__15090));
})()],null));
});
var G__15124__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15091 = x;
var G__15092 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15091,G__15092) : f.call(null,G__15091,G__15092));
})(),(function (){var G__15093 = x;
var G__15094 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15093,G__15094) : g.call(null,G__15093,G__15094));
})(),(function (){var G__15095 = x;
var G__15096 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15095,G__15096) : h.call(null,G__15095,G__15096));
})()],null));
});
var G__15124__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15097 = x;
var G__15098 = y;
var G__15099 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15097,G__15098,G__15099) : f.call(null,G__15097,G__15098,G__15099));
})(),(function (){var G__15100 = x;
var G__15101 = y;
var G__15102 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15100,G__15101,G__15102) : g.call(null,G__15100,G__15101,G__15102));
})(),(function (){var G__15103 = x;
var G__15104 = y;
var G__15105 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15103,G__15104,G__15105) : h.call(null,G__15103,G__15104,G__15105));
})()],null));
});
var G__15124__4 = (function() { 
var G__15125__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__15125 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15126__i = 0, G__15126__a = new Array(arguments.length -  3);
while (G__15126__i < G__15126__a.length) {G__15126__a[G__15126__i] = arguments[G__15126__i + 3]; ++G__15126__i;}
  args = new cljs.core.IndexedSeq(G__15126__a,0);
} 
return G__15125__delegate.call(this,x,y,z,args);};
G__15125.cljs$lang$maxFixedArity = 3;
G__15125.cljs$lang$applyTo = (function (arglist__15127){
var x = cljs.core.first(arglist__15127);
arglist__15127 = cljs.core.next(arglist__15127);
var y = cljs.core.first(arglist__15127);
arglist__15127 = cljs.core.next(arglist__15127);
var z = cljs.core.first(arglist__15127);
var args = cljs.core.rest(arglist__15127);
return G__15125__delegate(x,y,z,args);
});
G__15125.cljs$core$IFn$_invoke$arity$variadic = G__15125__delegate;
return G__15125;
})()
;
G__15124 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15124__0.call(this);
case 1:
return G__15124__1.call(this,x);
case 2:
return G__15124__2.call(this,x,y);
case 3:
return G__15124__3.call(this,x,y,z);
default:
var G__15128 = null;
if (arguments.length > 3) {
var G__15129__i = 0, G__15129__a = new Array(arguments.length -  3);
while (G__15129__i < G__15129__a.length) {G__15129__a[G__15129__i] = arguments[G__15129__i + 3]; ++G__15129__i;}
G__15128 = new cljs.core.IndexedSeq(G__15129__a,0);
}
return G__15124__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15124.cljs$lang$maxFixedArity = 3;
G__15124.cljs$lang$applyTo = G__15124__4.cljs$lang$applyTo;
G__15124.cljs$core$IFn$_invoke$arity$0 = G__15124__0;
G__15124.cljs$core$IFn$_invoke$arity$1 = G__15124__1;
G__15124.cljs$core$IFn$_invoke$arity$2 = G__15124__2;
G__15124.cljs$core$IFn$_invoke$arity$3 = G__15124__3;
G__15124.cljs$core$IFn$_invoke$arity$variadic = G__15124__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15124;
})()
});
var juxt__4 = (function() { 
var G__15130__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__15131 = null;
var G__15131__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15018_SHARP_,p2__15019_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15018_SHARP_,(function (){return (p2__15019_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15019_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15019_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15131__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15020_SHARP_,p2__15021_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15020_SHARP_,(function (){var G__15106 = x;
return (p2__15021_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15021_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15106) : p2__15021_SHARP_.call(null,G__15106));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15131__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15022_SHARP_,p2__15023_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15022_SHARP_,(function (){var G__15107 = x;
var G__15108 = y;
return (p2__15023_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15023_SHARP_.cljs$core$IFn$_invoke$arity$2(G__15107,G__15108) : p2__15023_SHARP_.call(null,G__15107,G__15108));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15131__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15024_SHARP_,p2__15025_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15024_SHARP_,(function (){var G__15109 = x;
var G__15110 = y;
var G__15111 = z;
return (p2__15025_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15025_SHARP_.cljs$core$IFn$_invoke$arity$3(G__15109,G__15110,G__15111) : p2__15025_SHARP_.call(null,G__15109,G__15110,G__15111));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__15131__4 = (function() { 
var G__15132__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15026_SHARP_,p2__15027_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15026_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15027_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__15132 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15133__i = 0, G__15133__a = new Array(arguments.length -  3);
while (G__15133__i < G__15133__a.length) {G__15133__a[G__15133__i] = arguments[G__15133__i + 3]; ++G__15133__i;}
  args = new cljs.core.IndexedSeq(G__15133__a,0);
} 
return G__15132__delegate.call(this,x,y,z,args);};
G__15132.cljs$lang$maxFixedArity = 3;
G__15132.cljs$lang$applyTo = (function (arglist__15134){
var x = cljs.core.first(arglist__15134);
arglist__15134 = cljs.core.next(arglist__15134);
var y = cljs.core.first(arglist__15134);
arglist__15134 = cljs.core.next(arglist__15134);
var z = cljs.core.first(arglist__15134);
var args = cljs.core.rest(arglist__15134);
return G__15132__delegate(x,y,z,args);
});
G__15132.cljs$core$IFn$_invoke$arity$variadic = G__15132__delegate;
return G__15132;
})()
;
G__15131 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15131__0.call(this);
case 1:
return G__15131__1.call(this,x);
case 2:
return G__15131__2.call(this,x,y);
case 3:
return G__15131__3.call(this,x,y,z);
default:
var G__15135 = null;
if (arguments.length > 3) {
var G__15136__i = 0, G__15136__a = new Array(arguments.length -  3);
while (G__15136__i < G__15136__a.length) {G__15136__a[G__15136__i] = arguments[G__15136__i + 3]; ++G__15136__i;}
G__15135 = new cljs.core.IndexedSeq(G__15136__a,0);
}
return G__15131__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15131.cljs$lang$maxFixedArity = 3;
G__15131.cljs$lang$applyTo = G__15131__4.cljs$lang$applyTo;
G__15131.cljs$core$IFn$_invoke$arity$0 = G__15131__0;
G__15131.cljs$core$IFn$_invoke$arity$1 = G__15131__1;
G__15131.cljs$core$IFn$_invoke$arity$2 = G__15131__2;
G__15131.cljs$core$IFn$_invoke$arity$3 = G__15131__3;
G__15131.cljs$core$IFn$_invoke$arity$variadic = G__15131__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15131;
})()
;})(fs__$1))
};
var G__15130 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15137__i = 0, G__15137__a = new Array(arguments.length -  3);
while (G__15137__i < G__15137__a.length) {G__15137__a[G__15137__i] = arguments[G__15137__i + 3]; ++G__15137__i;}
  fs = new cljs.core.IndexedSeq(G__15137__a,0);
} 
return G__15130__delegate.call(this,f,g,h,fs);};
G__15130.cljs$lang$maxFixedArity = 3;
G__15130.cljs$lang$applyTo = (function (arglist__15138){
var f = cljs.core.first(arglist__15138);
arglist__15138 = cljs.core.next(arglist__15138);
var g = cljs.core.first(arglist__15138);
arglist__15138 = cljs.core.next(arglist__15138);
var h = cljs.core.first(arglist__15138);
var fs = cljs.core.rest(arglist__15138);
return G__15130__delegate(f,g,h,fs);
});
G__15130.cljs$core$IFn$_invoke$arity$variadic = G__15130__delegate;
return G__15130;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__15139 = null;
if (arguments.length > 3) {
var G__15140__i = 0, G__15140__a = new Array(arguments.length -  3);
while (G__15140__i < G__15140__a.length) {G__15140__a[G__15140__i] = arguments[G__15140__i + 3]; ++G__15140__i;}
G__15139 = new cljs.core.IndexedSeq(G__15140__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__15139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__15141 = cljs.core.next(coll);
coll = G__15141;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__15142 = (n - (1));
var G__15143 = cljs.core.next(coll);
n = G__15142;
coll = G__15143;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__15147 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15147,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15147,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15147,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_15155 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__15156_15162 = cljs.core.first(coll);
var G__15157_15163 = writer;
var G__15158_15164 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15156_15162,G__15157_15163,G__15158_15164) : print_one.call(null,G__15156_15162,G__15157_15163,G__15158_15164));
} else {
}

var coll_15165__$1 = cljs.core.next(coll);
var n_15166 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_15165__$1) && (((n_15166 == null)) || (!((n_15166 === (0)))))){
cljs.core._write(writer,sep);

var G__15159_15167 = cljs.core.first(coll_15165__$1);
var G__15160_15168 = writer;
var G__15161_15169 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15159_15167,G__15160_15168,G__15161_15169) : print_one.call(null,G__15159_15167,G__15160_15168,G__15161_15169));

var G__15170 = cljs.core.next(coll_15165__$1);
var G__15171 = (n_15166 - (1));
coll_15165__$1 = G__15170;
n_15166 = G__15171;
continue;
} else {
if((cljs.core.seq(coll_15165__$1)) && ((n_15166 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15155;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__15176 = cljs.core.seq(ss);
var chunk__15177 = null;
var count__15178 = (0);
var i__15179 = (0);
while(true){
if((i__15179 < count__15178)){
var s = chunk__15177.cljs$core$IIndexed$_nth$arity$2(null,i__15179);
cljs.core._write(writer,s);

var G__15180 = seq__15176;
var G__15181 = chunk__15177;
var G__15182 = count__15178;
var G__15183 = (i__15179 + (1));
seq__15176 = G__15180;
chunk__15177 = G__15181;
count__15178 = G__15182;
i__15179 = G__15183;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15176);
if(temp__4126__auto__){
var seq__15176__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15176__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__15176__$1);
var G__15184 = cljs.core.chunk_rest(seq__15176__$1);
var G__15185 = c__4577__auto__;
var G__15186 = cljs.core.count(c__4577__auto__);
var G__15187 = (0);
seq__15176 = G__15184;
chunk__15177 = G__15185;
count__15178 = G__15186;
i__15179 = G__15187;
continue;
} else {
var s = cljs.core.first(seq__15176__$1);
cljs.core._write(writer,s);

var G__15188 = cljs.core.next(seq__15176__$1);
var G__15189 = null;
var G__15190 = (0);
var G__15191 = (0);
seq__15176 = G__15188;
chunk__15177 = G__15189;
count__15178 = G__15190;
i__15179 = G__15191;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__15192__i = 0, G__15192__a = new Array(arguments.length -  1);
while (G__15192__i < G__15192__a.length) {G__15192__a[G__15192__i] = arguments[G__15192__i + 1]; ++G__15192__i;}
  ss = new cljs.core.IndexedSeq(G__15192__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__15193){
var writer = cljs.core.first(arglist__15193);
var ss = cljs.core.rest(arglist__15193);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj15195 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj15195;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__15198 = "[\\\\\"\b\f\n\r\t]";
var G__15199 = "g";
return RegExp(G__15198,G__15199);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3778__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3778__auto__)){
var and__3778__auto____$1 = (function (){var G__15213 = obj;
if(G__15213){
var bit__4471__auto__ = (G__15213.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4471__auto__) || (G__15213.cljs$core$IMeta$)){
return true;
} else {
if((!G__15213.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15213);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__15213);
}
})();
if(and__3778__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__15214 = obj;
if(G__15214){
var bit__4464__auto__ = (G__15214.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4464__auto__) || (G__15214.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__15215 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__15216 = pr_writer;
var G__15217 = writer;
var G__15218 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15215,G__15216,G__15217,G__15218) : cljs.core.print_map.call(null,G__15215,G__15216,G__15217,G__15218));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__15219 = obj;
return goog.isString(G__15219);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__15221 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__15221;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__15220 = obj;
if(G__15220){
var bit__4471__auto__ = (G__15220.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4471__auto__) || (G__15220.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__15220.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15220);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__15220);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__15226 = cljs.core.seq(cljs.core.next(objs));
var chunk__15227 = null;
var count__15228 = (0);
var i__15229 = (0);
while(true){
if((i__15229 < count__15228)){
var obj = chunk__15227.cljs$core$IIndexed$_nth$arity$2(null,i__15229);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15230 = seq__15226;
var G__15231 = chunk__15227;
var G__15232 = count__15228;
var G__15233 = (i__15229 + (1));
seq__15226 = G__15230;
chunk__15227 = G__15231;
count__15228 = G__15232;
i__15229 = G__15233;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15226);
if(temp__4126__auto__){
var seq__15226__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15226__$1)){
var c__4577__auto__ = cljs.core.chunk_first(seq__15226__$1);
var G__15234 = cljs.core.chunk_rest(seq__15226__$1);
var G__15235 = c__4577__auto__;
var G__15236 = cljs.core.count(c__4577__auto__);
var G__15237 = (0);
seq__15226 = G__15234;
chunk__15227 = G__15235;
count__15228 = G__15236;
i__15229 = G__15237;
continue;
} else {
var obj = cljs.core.first(seq__15226__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__15238 = cljs.core.next(seq__15226__$1);
var G__15239 = null;
var G__15240 = (0);
var G__15241 = (0);
seq__15226 = G__15238;
chunk__15227 = G__15239;
count__15228 = G__15240;
i__15229 = G__15241;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15242__i = 0, G__15242__a = new Array(arguments.length -  0);
while (G__15242__i < G__15242__a.length) {G__15242__a[G__15242__i] = arguments[G__15242__i + 0]; ++G__15242__i;}
  objs = new cljs.core.IndexedSeq(G__15242__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__15243){
var objs = cljs.core.seq(arglist__15243);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15244__i = 0, G__15244__a = new Array(arguments.length -  0);
while (G__15244__i < G__15244__a.length) {G__15244__a[G__15244__i] = arguments[G__15244__i + 0]; ++G__15244__i;}
  objs = new cljs.core.IndexedSeq(G__15244__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__15245){
var objs = cljs.core.seq(arglist__15245);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15246__i = 0, G__15246__a = new Array(arguments.length -  0);
while (G__15246__i < G__15246__a.length) {G__15246__a[G__15246__i] = arguments[G__15246__i + 0]; ++G__15246__i;}
  objs = new cljs.core.IndexedSeq(G__15246__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__15247){
var objs = cljs.core.seq(arglist__15247);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15248__i = 0, G__15248__a = new Array(arguments.length -  0);
while (G__15248__i < G__15248__a.length) {G__15248__a[G__15248__i] = arguments[G__15248__i + 0]; ++G__15248__i;}
  objs = new cljs.core.IndexedSeq(G__15248__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__15249){
var objs = cljs.core.seq(arglist__15249);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15250__i = 0, G__15250__a = new Array(arguments.length -  0);
while (G__15250__i < G__15250__a.length) {G__15250__a[G__15250__i] = arguments[G__15250__i + 0]; ++G__15250__i;}
  objs = new cljs.core.IndexedSeq(G__15250__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__15251){
var objs = cljs.core.seq(arglist__15251);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15252__i = 0, G__15252__a = new Array(arguments.length -  0);
while (G__15252__i < G__15252__a.length) {G__15252__a[G__15252__i] = arguments[G__15252__i + 0]; ++G__15252__i;}
  objs = new cljs.core.IndexedSeq(G__15252__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__15253){
var objs = cljs.core.seq(arglist__15253);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15254__i = 0, G__15254__a = new Array(arguments.length -  0);
while (G__15254__i < G__15254__a.length) {G__15254__a[G__15254__i] = arguments[G__15254__i + 0]; ++G__15254__i;}
  objs = new cljs.core.IndexedSeq(G__15254__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__15255){
var objs = cljs.core.seq(arglist__15255);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__15256__i = 0, G__15256__a = new Array(arguments.length -  0);
while (G__15256__i < G__15256__a.length) {G__15256__a[G__15256__i] = arguments[G__15256__i + 0]; ++G__15256__i;}
  objs = new cljs.core.IndexedSeq(G__15256__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__15257){
var objs = cljs.core.seq(arglist__15257);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__15264_15270 = cljs.core.key(e);
var G__15265_15271 = w;
var G__15266_15272 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15264_15270,G__15265_15271,G__15266_15272) : print_one.call(null,G__15264_15270,G__15265_15271,G__15266_15272));

cljs.core._write(w," ");

var G__15267 = cljs.core.val(e);
var G__15268 = w;
var G__15269 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15267,G__15268,G__15269) : print_one.call(null,G__15267,G__15268,G__15269));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__15273__i = 0, G__15273__a = new Array(arguments.length -  2);
while (G__15273__i < G__15273__a.length) {G__15273__a[G__15273__i] = arguments[G__15273__i + 2]; ++G__15273__i;}
  args = new cljs.core.IndexedSeq(G__15273__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__15274){
var iref = cljs.core.first(arglist__15274);
arglist__15274 = cljs.core.next(arglist__15274);
var f = cljs.core.first(arglist__15274);
var args = cljs.core.rest(arglist__15274);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__15277 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15277) : cljs.core.atom.call(null,G__15277));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__15279 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15279) : cljs.core.deref.call(null,G__15279));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__15280_SHARP_,p2__15281_SHARP_){
var ret = (function (){var G__15284 = p1__15280_SHARP_;
var G__15285 = p2__15281_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15284,G__15285) : rf.call(null,G__15284,G__15285));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__15288 = null;
var G__15288__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15288__1 = (function (result){
var G__15287 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15287) : rf.call(null,G__15287));
});
var G__15288__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__15288 = function(result,input){
switch(arguments.length){
case 0:
return G__15288__0.call(this);
case 1:
return G__15288__1.call(this,result);
case 2:
return G__15288__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15288.cljs$core$IFn$_invoke$arity$0 = G__15288__0;
G__15288.cljs$core$IFn$_invoke$arity$1 = G__15288__1;
G__15288.cljs$core$IFn$_invoke$arity$2 = G__15288__2;
return G__15288;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (pa){
return (function() {
var G__15297 = null;
var G__15297__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15297__1 = (function (result){
var G__15293 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15293) : rf.call(null,G__15293));
});
var G__15297__2 = (function (result,input){
var prior = (function (){var G__15294 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15294) : cljs.core.deref.call(null,G__15294));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__15295 = result;
var G__15296 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15295,G__15296) : rf.call(null,G__15295,G__15296));
}
});
G__15297 = function(result,input){
switch(arguments.length){
case 0:
return G__15297__0.call(this);
case 1:
return G__15297__1.call(this,result);
case 2:
return G__15297__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15297.cljs$core$IFn$_invoke$arity$0 = G__15297__0;
G__15297.cljs$core$IFn$_invoke$arity$1 = G__15297__1;
G__15297.cljs$core$IFn$_invoke$arity$2 = G__15297__2;
return G__15297;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4768__auto__ = this;
return cljs.core.es6_iterator(this__4768__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15299_SHARP_,p2__15298_SHARP_){
var G__15301 = p2__15298_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15301) : proc.call(null,G__15301));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj15303 = {};
return obj15303;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3778__auto__ = x;
if(and__3778__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3778__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4434__auto__ = (((x == null))?null:x);
return (function (){var or__3790__auto__ = (cljs.core._clj__GT_js[(function (){var G__15307 = x__4434__auto__;
return goog.typeOf(G__15307);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3778__auto__ = x;
if(and__3778__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3778__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4434__auto__ = (((x == null))?null:x);
return (function (){var or__3790__auto__ = (cljs.core._key__GT_js[(function (){var G__15311 = x__4434__auto__;
return goog.typeOf(G__15311);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__15314 = k;
if(G__15314){
var bit__4471__auto__ = null;
if(cljs.core.truth_((function (){var or__3790__auto__ = bit__4471__auto__;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return G__15314.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15314.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15314);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15314);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__15315 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15315) : cljs.core.clj__GT_js.call(null,G__15315));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__15331 = x;
if(G__15331){
var bit__4471__auto__ = null;
if(cljs.core.truth_((function (){var or__3790__auto__ = bit__4471__auto__;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return G__15331.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__15331.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15331);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__15331);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj15333 = {};
return obj15333;
})();
var seq__15334_15344 = cljs.core.seq(x);
var chunk__15335_15345 = null;
var count__15336_15346 = (0);
var i__15337_15347 = (0);
while(true){
if((i__15337_15347 < count__15336_15346)){
var vec__15338_15348 = chunk__15335_15345.cljs$core$IIndexed$_nth$arity$2(null,i__15337_15347);
var k_15349 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15338_15348,(0),null);
var v_15350 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15338_15348,(1),null);
(m[cljs.core.key__GT_js(k_15349)] = clj__GT_js(v_15350));

var G__15351 = seq__15334_15344;
var G__15352 = chunk__15335_15345;
var G__15353 = count__15336_15346;
var G__15354 = (i__15337_15347 + (1));
seq__15334_15344 = G__15351;
chunk__15335_15345 = G__15352;
count__15336_15346 = G__15353;
i__15337_15347 = G__15354;
continue;
} else {
var temp__4126__auto___15355 = cljs.core.seq(seq__15334_15344);
if(temp__4126__auto___15355){
var seq__15334_15356__$1 = temp__4126__auto___15355;
if(cljs.core.chunked_seq_QMARK_(seq__15334_15356__$1)){
var c__4577__auto___15357 = cljs.core.chunk_first(seq__15334_15356__$1);
var G__15358 = cljs.core.chunk_rest(seq__15334_15356__$1);
var G__15359 = c__4577__auto___15357;
var G__15360 = cljs.core.count(c__4577__auto___15357);
var G__15361 = (0);
seq__15334_15344 = G__15358;
chunk__15335_15345 = G__15359;
count__15336_15346 = G__15360;
i__15337_15347 = G__15361;
continue;
} else {
var vec__15339_15362 = cljs.core.first(seq__15334_15356__$1);
var k_15363 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15339_15362,(0),null);
var v_15364 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15339_15362,(1),null);
(m[cljs.core.key__GT_js(k_15363)] = clj__GT_js(v_15364));

var G__15365 = cljs.core.next(seq__15334_15356__$1);
var G__15366 = null;
var G__15367 = (0);
var G__15368 = (0);
seq__15334_15344 = G__15365;
chunk__15335_15345 = G__15366;
count__15336_15346 = G__15367;
i__15337_15347 = G__15368;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__15340_15369 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__15341_15370 = null;
var count__15342_15371 = (0);
var i__15343_15372 = (0);
while(true){
if((i__15343_15372 < count__15342_15371)){
var x_15373__$1 = chunk__15341_15370.cljs$core$IIndexed$_nth$arity$2(null,i__15343_15372);
arr.push(x_15373__$1);

var G__15374 = seq__15340_15369;
var G__15375 = chunk__15341_15370;
var G__15376 = count__15342_15371;
var G__15377 = (i__15343_15372 + (1));
seq__15340_15369 = G__15374;
chunk__15341_15370 = G__15375;
count__15342_15371 = G__15376;
i__15343_15372 = G__15377;
continue;
} else {
var temp__4126__auto___15378 = cljs.core.seq(seq__15340_15369);
if(temp__4126__auto___15378){
var seq__15340_15379__$1 = temp__4126__auto___15378;
if(cljs.core.chunked_seq_QMARK_(seq__15340_15379__$1)){
var c__4577__auto___15380 = cljs.core.chunk_first(seq__15340_15379__$1);
var G__15381 = cljs.core.chunk_rest(seq__15340_15379__$1);
var G__15382 = c__4577__auto___15380;
var G__15383 = cljs.core.count(c__4577__auto___15380);
var G__15384 = (0);
seq__15340_15369 = G__15381;
chunk__15341_15370 = G__15382;
count__15342_15371 = G__15383;
i__15343_15372 = G__15384;
continue;
} else {
var x_15385__$1 = cljs.core.first(seq__15340_15379__$1);
arr.push(x_15385__$1);

var G__15386 = cljs.core.next(seq__15340_15379__$1);
var G__15387 = null;
var G__15388 = (0);
var G__15389 = (0);
seq__15340_15369 = G__15386;
chunk__15341_15370 = G__15387;
count__15342_15371 = G__15388;
i__15343_15372 = G__15389;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj15391 = {};
return obj15391;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3778__auto__ = x;
if(and__3778__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3778__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4434__auto__ = (((x == null))?null:x);
return (function (){var or__3790__auto__ = (cljs.core._js__GT_clj[(function (){var G__15395 = x__4434__auto__;
return goog.typeOf(G__15395);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__15452__delegate = function (x,opts){
var map__15425 = opts;
var map__15425__$1 = ((cljs.core.seq_QMARK_(map__15425))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15425):map__15425);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15425__$1,cljs.core.constant$keyword$16);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__15425,map__15425__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__15441 = x__$1;
if(G__15441){
var bit__4471__auto__ = null;
if(cljs.core.truth_((function (){var or__3790__auto__ = bit__4471__auto__;
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return G__15441.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__15441.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__15441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__15441);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4546__auto__ = ((function (map__15425,map__15425__$1,keywordize_keys,keyfn){
return (function iter__15442(s__15443){
return (new cljs.core.LazySeq(null,((function (map__15425,map__15425__$1,keywordize_keys,keyfn){
return (function (){
var s__15443__$1 = s__15443;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__15443__$1);
if(temp__4126__auto__){
var s__15443__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__15443__$2)){
var c__4544__auto__ = cljs.core.chunk_first(s__15443__$2);
var size__4545__auto__ = cljs.core.count(c__4544__auto__);
var b__15445 = cljs.core.chunk_buffer(size__4545__auto__);
if((function (){var i__15444 = (0);
while(true){
if((i__15444 < size__4545__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4544__auto__,i__15444);
cljs.core.chunk_append(b__15445,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__15450 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15450) : keyfn.call(null,G__15450));
})(),thisfn((x__$1[k]))], null));

var G__15453 = (i__15444 + (1));
i__15444 = G__15453;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__15445),iter__15442(cljs.core.chunk_rest(s__15443__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__15445),null);
}
} else {
var k = cljs.core.first(s__15443__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__15451 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15451) : keyfn.call(null,G__15451));
})(),thisfn((x__$1[k]))], null),iter__15442(cljs.core.rest(s__15443__$2)));
}
} else {
return null;
}
break;
}
});})(map__15425,map__15425__$1,keywordize_keys,keyfn))
,null,null));
});})(map__15425,map__15425__$1,keywordize_keys,keyfn))
;
return iter__4546__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__15425,map__15425__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__15452 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__15454__i = 0, G__15454__a = new Array(arguments.length -  1);
while (G__15454__i < G__15454__a.length) {G__15454__a[G__15454__i] = arguments[G__15454__i + 1]; ++G__15454__i;}
  opts = new cljs.core.IndexedSeq(G__15454__a,0);
} 
return G__15452__delegate.call(this,x,opts);};
G__15452.cljs$lang$maxFixedArity = 1;
G__15452.cljs$lang$applyTo = (function (arglist__15455){
var x = cljs.core.first(arglist__15455);
var opts = cljs.core.rest(arglist__15455);
return G__15452__delegate(x,opts);
});
G__15452.cljs$core$IFn$_invoke$arity$variadic = G__15452__delegate;
return G__15452;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__15456 = null;
if (arguments.length > 1) {
var G__15457__i = 0, G__15457__a = new Array(arguments.length -  1);
while (G__15457__i < G__15457__a.length) {G__15457__a[G__15457__i] = arguments[G__15457__i + 1]; ++G__15457__i;}
G__15456 = new cljs.core.IndexedSeq(G__15457__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__15460 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15460) : cljs.core.atom.call(null,G__15460));
})();
return ((function (mem){
return (function() { 
var G__15462__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__15461 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15461) : cljs.core.deref.call(null,G__15461));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__15462 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15463__i = 0, G__15463__a = new Array(arguments.length -  0);
while (G__15463__i < G__15463__a.length) {G__15463__a[G__15463__i] = arguments[G__15463__i + 0]; ++G__15463__i;}
  args = new cljs.core.IndexedSeq(G__15463__a,0);
} 
return G__15462__delegate.call(this,args);};
G__15462.cljs$lang$maxFixedArity = 0;
G__15462.cljs$lang$applyTo = (function (arglist__15464){
var args = cljs.core.seq(arglist__15464);
return G__15462__delegate(args);
});
G__15462.cljs$core$IFn$_invoke$arity$variadic = G__15462__delegate;
return G__15462;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__15466 = ret;
f = G__15466;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__15467__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__15467 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__15468__i = 0, G__15468__a = new Array(arguments.length -  1);
while (G__15468__i < G__15468__a.length) {G__15468__a[G__15468__i] = arguments[G__15468__i + 1]; ++G__15468__i;}
  args = new cljs.core.IndexedSeq(G__15468__a,0);
} 
return G__15467__delegate.call(this,f,args);};
G__15467.cljs$lang$maxFixedArity = 1;
G__15467.cljs$lang$applyTo = (function (arglist__15469){
var f = cljs.core.first(arglist__15469);
var args = cljs.core.rest(arglist__15469);
return G__15467__delegate(f,args);
});
G__15467.cljs$core$IFn$_invoke$arity$variadic = G__15467__delegate;
return G__15467;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__15470 = null;
if (arguments.length > 1) {
var G__15471__i = 0, G__15471__a = new Array(arguments.length -  1);
while (G__15471__i < G__15471__a.length) {G__15471__a[G__15471__i] = arguments[G__15471__i + 1]; ++G__15471__i;}
G__15470 = new cljs.core.IndexedSeq(G__15471__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__15474 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__15474) : Math.floor.call(null,G__15474));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__15476 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15476) : f.call(null,G__15476));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$18,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$19,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__15478 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15478) : cljs.core.atom.call(null,G__15478));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__15479__i = 0, G__15479__a = new Array(arguments.length -  1);
while (G__15479__i < G__15479__a.length) {G__15479__a[G__15479__i] = arguments[G__15479__i + 1]; ++G__15479__i;}
  args = new cljs.core.IndexedSeq(G__15479__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__15480){
var f = cljs.core.first(arglist__15480);
var args = cljs.core.rest(arglist__15480);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15545 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15545) : cljs.core.deref.call(null,G__15545));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3790__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
var and__3778__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3778__auto__){
var and__3778__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3778__auto____$1){
var and__3778__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3778__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__15570 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__15568 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__15568) : child.call(null,G__15568));
})(),(function (){var G__15569 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__15569) : parent.call(null,G__15569));
})());
var G__15571 = (i + (1));
ret = G__15570;
i = G__15571;
continue;
}
break;
}
} else {
return and__3778__auto____$2;
}
} else {
return and__3778__auto____$1;
}
} else {
return and__3778__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__15575 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15575) : cljs.core.deref.call(null,G__15575));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__15579 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15579) : cljs.core.deref.call(null,G__15579));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__15583 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15583) : cljs.core.deref.call(null,G__15583));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__15592 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__15592) : targets.call(null,G__15592));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__15593 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__15593) : sources.call(null,G__15593));
})()));
});})(tp,td,ta))
;
var or__3790__auto__ = ((cljs.core.contains_QMARK_((function (){var G__15597 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__15597) : tp.call(null,G__15597));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__15598 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15598) : ta.call(null,G__15598));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__15599 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15599) : ta.call(null,G__15599));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$19,tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$18,tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__15606 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15606) : parentMap.call(null,G__15606));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__15607 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15607) : parentMap.call(null,G__15607));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__15600_SHARP_){
return cljs.core.cons(cljs.core.first(p1__15600_SHARP_),cljs.core.interpose(cljs.core.first(p1__15600_SHARP_),cljs.core.second(p1__15600_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__15608 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15608) : parentMap.call(null,G__15608));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__15601_SHARP_,p2__15602_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__15601_SHARP_,p2__15602_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__15611 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15611) : cljs.core.deref.call(null,G__15611));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__15612 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15612) : cljs.core.deref.call(null,G__15612));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__15628 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15628) : cljs.core.deref.call(null,G__15628));
})().call(null,x);
var or__3790__auto__ = (cljs.core.truth_((function (){var and__3778__auto__ = xprefs;
if(cljs.core.truth_(and__3778__auto__)){
var G__15630 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__15630) : xprefs.call(null,G__15630));
} else {
return and__3778__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__15631 = cljs.core.rest(ps);
ps = G__15631;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3790__auto____$1)){
return or__3790__auto____$1;
} else {
var or__3790__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__15632 = cljs.core.rest(ps);
ps = G__15632;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3790__auto____$2)){
return or__3790__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3790__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3790__auto__)){
return or__3790__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__15646){
var vec__15647 = p__15646;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15647,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15647,(1),null);
var e = vec__15647;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15648 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15648) : cljs.core.deref.call(null,G__15648));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3790__auto__ = (be == null);
if(or__3790__auto__){
return or__3790__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__15649 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15649) : cljs.core.deref.call(null,G__15649));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__15650 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15650) : cljs.core.deref.call(null,G__15650));
})(),(function (){var G__15651 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15651) : cljs.core.deref.call(null,G__15651));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj15653 = {};
return obj15653;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3778__auto__ = mf;
if(and__3778__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3778__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4434__auto__ = (((mf == null))?null:mf);
return (function (){var or__3790__auto__ = (cljs.core._reset[(function (){var G__15657 = x__4434__auto__;
return goog.typeOf(G__15657);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._reset["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3778__auto__ = mf;
if(and__3778__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3778__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4434__auto__ = (((mf == null))?null:mf);
return (function (){var or__3790__auto__ = (cljs.core._add_method[(function (){var G__15661 = x__4434__auto__;
return goog.typeOf(G__15661);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._add_method["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3778__auto__ = mf;
if(and__3778__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3778__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4434__auto__ = (((mf == null))?null:mf);
return (function (){var or__3790__auto__ = (cljs.core._remove_method[(function (){var G__15665 = x__4434__auto__;
return goog.typeOf(G__15665);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3778__auto__ = mf;
if(and__3778__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3778__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4434__auto__ = (((mf == null))?null:mf);
return (function (){var or__3790__auto__ = (cljs.core._prefer_method[(function (){var G__15669 = x__4434__auto__;
return goog.typeOf(G__15669);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3778__auto__ = mf;
if(and__3778__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3778__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4434__auto__ = (((mf == null))?null:mf);
return (function (){var or__3790__auto__ = (cljs.core._get_method[(function (){var G__15673 = x__4434__auto__;
return goog.typeOf(G__15673);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._get_method["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3778__auto__ = mf;
if(and__3778__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3778__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4434__auto__ = (((mf == null))?null:mf);
return (function (){var or__3790__auto__ = (cljs.core._methods[(function (){var G__15677 = x__4434__auto__;
return goog.typeOf(G__15677);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._methods["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3778__auto__ = mf;
if(and__3778__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3778__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4434__auto__ = (((mf == null))?null:mf);
return (function (){var or__3790__auto__ = (cljs.core._prefers[(function (){var G__15681 = x__4434__auto__;
return goog.typeOf(G__15681);
})()]);
if(or__3790__auto__){
return or__3790__auto__;
} else {
var or__3790__auto____$1 = (cljs.core._prefers["_"]);
if(or__3790__auto____$1){
return or__3790__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15683 = this$__$1;
return goog.getUid(G__15683);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__15684 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15684) : cljs.core.deref.call(null,G__15684));
})(),(function (){var G__15685 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15685) : cljs.core.deref.call(null,G__15685));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__15686 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15686) : cljs.core.deref.call(null,G__15686));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__15687 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15687) : cljs.core.deref.call(null,G__15687));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__15688 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15688) : cljs.core.deref.call(null,G__15688));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__15689 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15689) : cljs.core.deref.call(null,G__15689));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__16530 = null;
var G__16530__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__16530__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15690 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15690) : self__.dispatch_fn.call(null,G__15690));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15691 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15691) : target_fn.call(null,G__15691));
});
var G__16530__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15692 = a;
var G__15693 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15692,G__15693) : self__.dispatch_fn.call(null,G__15692,G__15693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15694 = a;
var G__15695 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15694,G__15695) : target_fn.call(null,G__15694,G__15695));
});
var G__16530__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15696 = a;
var G__15697 = b;
var G__15698 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15696,G__15697,G__15698) : self__.dispatch_fn.call(null,G__15696,G__15697,G__15698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15699 = a;
var G__15700 = b;
var G__15701 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15699,G__15700,G__15701) : target_fn.call(null,G__15699,G__15700,G__15701));
});
var G__16530__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15702 = a;
var G__15703 = b;
var G__15704 = c;
var G__15705 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15702,G__15703,G__15704,G__15705) : self__.dispatch_fn.call(null,G__15702,G__15703,G__15704,G__15705));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15706 = a;
var G__15707 = b;
var G__15708 = c;
var G__15709 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15706,G__15707,G__15708,G__15709) : target_fn.call(null,G__15706,G__15707,G__15708,G__15709));
});
var G__16530__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15710 = a;
var G__15711 = b;
var G__15712 = c;
var G__15713 = d;
var G__15714 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15710,G__15711,G__15712,G__15713,G__15714) : self__.dispatch_fn.call(null,G__15710,G__15711,G__15712,G__15713,G__15714));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15715 = a;
var G__15716 = b;
var G__15717 = c;
var G__15718 = d;
var G__15719 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15715,G__15716,G__15717,G__15718,G__15719) : target_fn.call(null,G__15715,G__15716,G__15717,G__15718,G__15719));
});
var G__16530__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15720 = a;
var G__15721 = b;
var G__15722 = c;
var G__15723 = d;
var G__15724 = e;
var G__15725 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15720,G__15721,G__15722,G__15723,G__15724,G__15725) : self__.dispatch_fn.call(null,G__15720,G__15721,G__15722,G__15723,G__15724,G__15725));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15726 = a;
var G__15727 = b;
var G__15728 = c;
var G__15729 = d;
var G__15730 = e;
var G__15731 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15726,G__15727,G__15728,G__15729,G__15730,G__15731) : target_fn.call(null,G__15726,G__15727,G__15728,G__15729,G__15730,G__15731));
});
var G__16530__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15732 = a;
var G__15733 = b;
var G__15734 = c;
var G__15735 = d;
var G__15736 = e;
var G__15737 = f;
var G__15738 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15732,G__15733,G__15734,G__15735,G__15736,G__15737,G__15738) : self__.dispatch_fn.call(null,G__15732,G__15733,G__15734,G__15735,G__15736,G__15737,G__15738));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15739 = a;
var G__15740 = b;
var G__15741 = c;
var G__15742 = d;
var G__15743 = e;
var G__15744 = f;
var G__15745 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15739,G__15740,G__15741,G__15742,G__15743,G__15744,G__15745) : target_fn.call(null,G__15739,G__15740,G__15741,G__15742,G__15743,G__15744,G__15745));
});
var G__16530__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15746 = a;
var G__15747 = b;
var G__15748 = c;
var G__15749 = d;
var G__15750 = e;
var G__15751 = f;
var G__15752 = g;
var G__15753 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15746,G__15747,G__15748,G__15749,G__15750,G__15751,G__15752,G__15753) : self__.dispatch_fn.call(null,G__15746,G__15747,G__15748,G__15749,G__15750,G__15751,G__15752,G__15753));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15754 = a;
var G__15755 = b;
var G__15756 = c;
var G__15757 = d;
var G__15758 = e;
var G__15759 = f;
var G__15760 = g;
var G__15761 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15754,G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761) : target_fn.call(null,G__15754,G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761));
});
var G__16530__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15762 = a;
var G__15763 = b;
var G__15764 = c;
var G__15765 = d;
var G__15766 = e;
var G__15767 = f;
var G__15768 = g;
var G__15769 = h;
var G__15770 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770) : self__.dispatch_fn.call(null,G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15771 = a;
var G__15772 = b;
var G__15773 = c;
var G__15774 = d;
var G__15775 = e;
var G__15776 = f;
var G__15777 = g;
var G__15778 = h;
var G__15779 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15771,G__15772,G__15773,G__15774,G__15775,G__15776,G__15777,G__15778,G__15779) : target_fn.call(null,G__15771,G__15772,G__15773,G__15774,G__15775,G__15776,G__15777,G__15778,G__15779));
});
var G__16530__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15780 = a;
var G__15781 = b;
var G__15782 = c;
var G__15783 = d;
var G__15784 = e;
var G__15785 = f;
var G__15786 = g;
var G__15787 = h;
var G__15788 = i;
var G__15789 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787,G__15788,G__15789) : self__.dispatch_fn.call(null,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787,G__15788,G__15789));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15790 = a;
var G__15791 = b;
var G__15792 = c;
var G__15793 = d;
var G__15794 = e;
var G__15795 = f;
var G__15796 = g;
var G__15797 = h;
var G__15798 = i;
var G__15799 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799) : target_fn.call(null,G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799));
});
var G__16530__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15800 = a;
var G__15801 = b;
var G__15802 = c;
var G__15803 = d;
var G__15804 = e;
var G__15805 = f;
var G__15806 = g;
var G__15807 = h;
var G__15808 = i;
var G__15809 = j;
var G__15810 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15800,G__15801,G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810) : self__.dispatch_fn.call(null,G__15800,G__15801,G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15811 = a;
var G__15812 = b;
var G__15813 = c;
var G__15814 = d;
var G__15815 = e;
var G__15816 = f;
var G__15817 = g;
var G__15818 = h;
var G__15819 = i;
var G__15820 = j;
var G__15821 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15811,G__15812,G__15813,G__15814,G__15815,G__15816,G__15817,G__15818,G__15819,G__15820,G__15821) : target_fn.call(null,G__15811,G__15812,G__15813,G__15814,G__15815,G__15816,G__15817,G__15818,G__15819,G__15820,G__15821));
});
var G__16530__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15822 = a;
var G__15823 = b;
var G__15824 = c;
var G__15825 = d;
var G__15826 = e;
var G__15827 = f;
var G__15828 = g;
var G__15829 = h;
var G__15830 = i;
var G__15831 = j;
var G__15832 = k;
var G__15833 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15822,G__15823,G__15824,G__15825,G__15826,G__15827,G__15828,G__15829,G__15830,G__15831,G__15832,G__15833) : self__.dispatch_fn.call(null,G__15822,G__15823,G__15824,G__15825,G__15826,G__15827,G__15828,G__15829,G__15830,G__15831,G__15832,G__15833));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15834 = a;
var G__15835 = b;
var G__15836 = c;
var G__15837 = d;
var G__15838 = e;
var G__15839 = f;
var G__15840 = g;
var G__15841 = h;
var G__15842 = i;
var G__15843 = j;
var G__15844 = k;
var G__15845 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15834,G__15835,G__15836,G__15837,G__15838,G__15839,G__15840,G__15841,G__15842,G__15843,G__15844,G__15845) : target_fn.call(null,G__15834,G__15835,G__15836,G__15837,G__15838,G__15839,G__15840,G__15841,G__15842,G__15843,G__15844,G__15845));
});
var G__16530__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15846 = a;
var G__15847 = b;
var G__15848 = c;
var G__15849 = d;
var G__15850 = e;
var G__15851 = f;
var G__15852 = g;
var G__15853 = h;
var G__15854 = i;
var G__15855 = j;
var G__15856 = k;
var G__15857 = l;
var G__15858 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15846,G__15847,G__15848,G__15849,G__15850,G__15851,G__15852,G__15853,G__15854,G__15855,G__15856,G__15857,G__15858) : self__.dispatch_fn.call(null,G__15846,G__15847,G__15848,G__15849,G__15850,G__15851,G__15852,G__15853,G__15854,G__15855,G__15856,G__15857,G__15858));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15859 = a;
var G__15860 = b;
var G__15861 = c;
var G__15862 = d;
var G__15863 = e;
var G__15864 = f;
var G__15865 = g;
var G__15866 = h;
var G__15867 = i;
var G__15868 = j;
var G__15869 = k;
var G__15870 = l;
var G__15871 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15859,G__15860,G__15861,G__15862,G__15863,G__15864,G__15865,G__15866,G__15867,G__15868,G__15869,G__15870,G__15871) : target_fn.call(null,G__15859,G__15860,G__15861,G__15862,G__15863,G__15864,G__15865,G__15866,G__15867,G__15868,G__15869,G__15870,G__15871));
});
var G__16530__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15872 = a;
var G__15873 = b;
var G__15874 = c;
var G__15875 = d;
var G__15876 = e;
var G__15877 = f;
var G__15878 = g;
var G__15879 = h;
var G__15880 = i;
var G__15881 = j;
var G__15882 = k;
var G__15883 = l;
var G__15884 = m;
var G__15885 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15872,G__15873,G__15874,G__15875,G__15876,G__15877,G__15878,G__15879,G__15880,G__15881,G__15882,G__15883,G__15884,G__15885) : self__.dispatch_fn.call(null,G__15872,G__15873,G__15874,G__15875,G__15876,G__15877,G__15878,G__15879,G__15880,G__15881,G__15882,G__15883,G__15884,G__15885));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15886 = a;
var G__15887 = b;
var G__15888 = c;
var G__15889 = d;
var G__15890 = e;
var G__15891 = f;
var G__15892 = g;
var G__15893 = h;
var G__15894 = i;
var G__15895 = j;
var G__15896 = k;
var G__15897 = l;
var G__15898 = m;
var G__15899 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15886,G__15887,G__15888,G__15889,G__15890,G__15891,G__15892,G__15893,G__15894,G__15895,G__15896,G__15897,G__15898,G__15899) : target_fn.call(null,G__15886,G__15887,G__15888,G__15889,G__15890,G__15891,G__15892,G__15893,G__15894,G__15895,G__15896,G__15897,G__15898,G__15899));
});
var G__16530__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15900 = a;
var G__15901 = b;
var G__15902 = c;
var G__15903 = d;
var G__15904 = e;
var G__15905 = f;
var G__15906 = g;
var G__15907 = h;
var G__15908 = i;
var G__15909 = j;
var G__15910 = k;
var G__15911 = l;
var G__15912 = m;
var G__15913 = n;
var G__15914 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15900,G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907,G__15908,G__15909,G__15910,G__15911,G__15912,G__15913,G__15914) : self__.dispatch_fn.call(null,G__15900,G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907,G__15908,G__15909,G__15910,G__15911,G__15912,G__15913,G__15914));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15915 = a;
var G__15916 = b;
var G__15917 = c;
var G__15918 = d;
var G__15919 = e;
var G__15920 = f;
var G__15921 = g;
var G__15922 = h;
var G__15923 = i;
var G__15924 = j;
var G__15925 = k;
var G__15926 = l;
var G__15927 = m;
var G__15928 = n;
var G__15929 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15915,G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923,G__15924,G__15925,G__15926,G__15927,G__15928,G__15929) : target_fn.call(null,G__15915,G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923,G__15924,G__15925,G__15926,G__15927,G__15928,G__15929));
});
var G__16530__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15930 = a;
var G__15931 = b;
var G__15932 = c;
var G__15933 = d;
var G__15934 = e;
var G__15935 = f;
var G__15936 = g;
var G__15937 = h;
var G__15938 = i;
var G__15939 = j;
var G__15940 = k;
var G__15941 = l;
var G__15942 = m;
var G__15943 = n;
var G__15944 = o;
var G__15945 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15930,G__15931,G__15932,G__15933,G__15934,G__15935,G__15936,G__15937,G__15938,G__15939,G__15940,G__15941,G__15942,G__15943,G__15944,G__15945) : self__.dispatch_fn.call(null,G__15930,G__15931,G__15932,G__15933,G__15934,G__15935,G__15936,G__15937,G__15938,G__15939,G__15940,G__15941,G__15942,G__15943,G__15944,G__15945));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15946 = a;
var G__15947 = b;
var G__15948 = c;
var G__15949 = d;
var G__15950 = e;
var G__15951 = f;
var G__15952 = g;
var G__15953 = h;
var G__15954 = i;
var G__15955 = j;
var G__15956 = k;
var G__15957 = l;
var G__15958 = m;
var G__15959 = n;
var G__15960 = o;
var G__15961 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15946,G__15947,G__15948,G__15949,G__15950,G__15951,G__15952,G__15953,G__15954,G__15955,G__15956,G__15957,G__15958,G__15959,G__15960,G__15961) : target_fn.call(null,G__15946,G__15947,G__15948,G__15949,G__15950,G__15951,G__15952,G__15953,G__15954,G__15955,G__15956,G__15957,G__15958,G__15959,G__15960,G__15961));
});
var G__16530__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15962 = a;
var G__15963 = b;
var G__15964 = c;
var G__15965 = d;
var G__15966 = e;
var G__15967 = f;
var G__15968 = g;
var G__15969 = h;
var G__15970 = i;
var G__15971 = j;
var G__15972 = k;
var G__15973 = l;
var G__15974 = m;
var G__15975 = n;
var G__15976 = o;
var G__15977 = p;
var G__15978 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15962,G__15963,G__15964,G__15965,G__15966,G__15967,G__15968,G__15969,G__15970,G__15971,G__15972,G__15973,G__15974,G__15975,G__15976,G__15977,G__15978) : self__.dispatch_fn.call(null,G__15962,G__15963,G__15964,G__15965,G__15966,G__15967,G__15968,G__15969,G__15970,G__15971,G__15972,G__15973,G__15974,G__15975,G__15976,G__15977,G__15978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15979 = a;
var G__15980 = b;
var G__15981 = c;
var G__15982 = d;
var G__15983 = e;
var G__15984 = f;
var G__15985 = g;
var G__15986 = h;
var G__15987 = i;
var G__15988 = j;
var G__15989 = k;
var G__15990 = l;
var G__15991 = m;
var G__15992 = n;
var G__15993 = o;
var G__15994 = p;
var G__15995 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15979,G__15980,G__15981,G__15982,G__15983,G__15984,G__15985,G__15986,G__15987,G__15988,G__15989,G__15990,G__15991,G__15992,G__15993,G__15994,G__15995) : target_fn.call(null,G__15979,G__15980,G__15981,G__15982,G__15983,G__15984,G__15985,G__15986,G__15987,G__15988,G__15989,G__15990,G__15991,G__15992,G__15993,G__15994,G__15995));
});
var G__16530__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15996 = a;
var G__15997 = b;
var G__15998 = c;
var G__15999 = d;
var G__16000 = e;
var G__16001 = f;
var G__16002 = g;
var G__16003 = h;
var G__16004 = i;
var G__16005 = j;
var G__16006 = k;
var G__16007 = l;
var G__16008 = m;
var G__16009 = n;
var G__16010 = o;
var G__16011 = p;
var G__16012 = q;
var G__16013 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15996,G__15997,G__15998,G__15999,G__16000,G__16001,G__16002,G__16003,G__16004,G__16005,G__16006,G__16007,G__16008,G__16009,G__16010,G__16011,G__16012,G__16013) : self__.dispatch_fn.call(null,G__15996,G__15997,G__15998,G__15999,G__16000,G__16001,G__16002,G__16003,G__16004,G__16005,G__16006,G__16007,G__16008,G__16009,G__16010,G__16011,G__16012,G__16013));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16014 = a;
var G__16015 = b;
var G__16016 = c;
var G__16017 = d;
var G__16018 = e;
var G__16019 = f;
var G__16020 = g;
var G__16021 = h;
var G__16022 = i;
var G__16023 = j;
var G__16024 = k;
var G__16025 = l;
var G__16026 = m;
var G__16027 = n;
var G__16028 = o;
var G__16029 = p;
var G__16030 = q;
var G__16031 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16014,G__16015,G__16016,G__16017,G__16018,G__16019,G__16020,G__16021,G__16022,G__16023,G__16024,G__16025,G__16026,G__16027,G__16028,G__16029,G__16030,G__16031) : target_fn.call(null,G__16014,G__16015,G__16016,G__16017,G__16018,G__16019,G__16020,G__16021,G__16022,G__16023,G__16024,G__16025,G__16026,G__16027,G__16028,G__16029,G__16030,G__16031));
});
var G__16530__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16032 = a;
var G__16033 = b;
var G__16034 = c;
var G__16035 = d;
var G__16036 = e;
var G__16037 = f;
var G__16038 = g;
var G__16039 = h;
var G__16040 = i;
var G__16041 = j;
var G__16042 = k;
var G__16043 = l;
var G__16044 = m;
var G__16045 = n;
var G__16046 = o;
var G__16047 = p;
var G__16048 = q;
var G__16049 = r;
var G__16050 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16032,G__16033,G__16034,G__16035,G__16036,G__16037,G__16038,G__16039,G__16040,G__16041,G__16042,G__16043,G__16044,G__16045,G__16046,G__16047,G__16048,G__16049,G__16050) : self__.dispatch_fn.call(null,G__16032,G__16033,G__16034,G__16035,G__16036,G__16037,G__16038,G__16039,G__16040,G__16041,G__16042,G__16043,G__16044,G__16045,G__16046,G__16047,G__16048,G__16049,G__16050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16051 = a;
var G__16052 = b;
var G__16053 = c;
var G__16054 = d;
var G__16055 = e;
var G__16056 = f;
var G__16057 = g;
var G__16058 = h;
var G__16059 = i;
var G__16060 = j;
var G__16061 = k;
var G__16062 = l;
var G__16063 = m;
var G__16064 = n;
var G__16065 = o;
var G__16066 = p;
var G__16067 = q;
var G__16068 = r;
var G__16069 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16051,G__16052,G__16053,G__16054,G__16055,G__16056,G__16057,G__16058,G__16059,G__16060,G__16061,G__16062,G__16063,G__16064,G__16065,G__16066,G__16067,G__16068,G__16069) : target_fn.call(null,G__16051,G__16052,G__16053,G__16054,G__16055,G__16056,G__16057,G__16058,G__16059,G__16060,G__16061,G__16062,G__16063,G__16064,G__16065,G__16066,G__16067,G__16068,G__16069));
});
var G__16530__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16070 = a;
var G__16071 = b;
var G__16072 = c;
var G__16073 = d;
var G__16074 = e;
var G__16075 = f;
var G__16076 = g;
var G__16077 = h;
var G__16078 = i;
var G__16079 = j;
var G__16080 = k;
var G__16081 = l;
var G__16082 = m;
var G__16083 = n;
var G__16084 = o;
var G__16085 = p;
var G__16086 = q;
var G__16087 = r;
var G__16088 = s;
var G__16089 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16070,G__16071,G__16072,G__16073,G__16074,G__16075,G__16076,G__16077,G__16078,G__16079,G__16080,G__16081,G__16082,G__16083,G__16084,G__16085,G__16086,G__16087,G__16088,G__16089) : self__.dispatch_fn.call(null,G__16070,G__16071,G__16072,G__16073,G__16074,G__16075,G__16076,G__16077,G__16078,G__16079,G__16080,G__16081,G__16082,G__16083,G__16084,G__16085,G__16086,G__16087,G__16088,G__16089));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16090 = a;
var G__16091 = b;
var G__16092 = c;
var G__16093 = d;
var G__16094 = e;
var G__16095 = f;
var G__16096 = g;
var G__16097 = h;
var G__16098 = i;
var G__16099 = j;
var G__16100 = k;
var G__16101 = l;
var G__16102 = m;
var G__16103 = n;
var G__16104 = o;
var G__16105 = p;
var G__16106 = q;
var G__16107 = r;
var G__16108 = s;
var G__16109 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16090,G__16091,G__16092,G__16093,G__16094,G__16095,G__16096,G__16097,G__16098,G__16099,G__16100,G__16101,G__16102,G__16103,G__16104,G__16105,G__16106,G__16107,G__16108,G__16109) : target_fn.call(null,G__16090,G__16091,G__16092,G__16093,G__16094,G__16095,G__16096,G__16097,G__16098,G__16099,G__16100,G__16101,G__16102,G__16103,G__16104,G__16105,G__16106,G__16107,G__16108,G__16109));
});
var G__16530__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__16530 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__16530__1.call(this,self__);
case 2:
return G__16530__2.call(this,self__,a);
case 3:
return G__16530__3.call(this,self__,a,b);
case 4:
return G__16530__4.call(this,self__,a,b,c);
case 5:
return G__16530__5.call(this,self__,a,b,c,d);
case 6:
return G__16530__6.call(this,self__,a,b,c,d,e);
case 7:
return G__16530__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__16530__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__16530__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__16530__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__16530__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__16530__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__16530__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__16530__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__16530__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__16530__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__16530__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__16530__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__16530__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__16530__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__16530__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__16530__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16530.cljs$core$IFn$_invoke$arity$1 = G__16530__1;
G__16530.cljs$core$IFn$_invoke$arity$2 = G__16530__2;
G__16530.cljs$core$IFn$_invoke$arity$3 = G__16530__3;
G__16530.cljs$core$IFn$_invoke$arity$4 = G__16530__4;
G__16530.cljs$core$IFn$_invoke$arity$5 = G__16530__5;
G__16530.cljs$core$IFn$_invoke$arity$6 = G__16530__6;
G__16530.cljs$core$IFn$_invoke$arity$7 = G__16530__7;
G__16530.cljs$core$IFn$_invoke$arity$8 = G__16530__8;
G__16530.cljs$core$IFn$_invoke$arity$9 = G__16530__9;
G__16530.cljs$core$IFn$_invoke$arity$10 = G__16530__10;
G__16530.cljs$core$IFn$_invoke$arity$11 = G__16530__11;
G__16530.cljs$core$IFn$_invoke$arity$12 = G__16530__12;
G__16530.cljs$core$IFn$_invoke$arity$13 = G__16530__13;
G__16530.cljs$core$IFn$_invoke$arity$14 = G__16530__14;
G__16530.cljs$core$IFn$_invoke$arity$15 = G__16530__15;
G__16530.cljs$core$IFn$_invoke$arity$16 = G__16530__16;
G__16530.cljs$core$IFn$_invoke$arity$17 = G__16530__17;
G__16530.cljs$core$IFn$_invoke$arity$18 = G__16530__18;
G__16530.cljs$core$IFn$_invoke$arity$19 = G__16530__19;
G__16530.cljs$core$IFn$_invoke$arity$20 = G__16530__20;
G__16530.cljs$core$IFn$_invoke$arity$21 = G__16530__21;
G__16530.cljs$core$IFn$_invoke$arity$22 = G__16530__22;
return G__16530;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args15682){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15682)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16110 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16110) : self__.dispatch_fn.call(null,G__16110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16111 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16111) : target_fn.call(null,G__16111));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16112 = a;
var G__16113 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16112,G__16113) : self__.dispatch_fn.call(null,G__16112,G__16113));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16114 = a;
var G__16115 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16114,G__16115) : target_fn.call(null,G__16114,G__16115));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16116 = a;
var G__16117 = b;
var G__16118 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16116,G__16117,G__16118) : self__.dispatch_fn.call(null,G__16116,G__16117,G__16118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16119 = a;
var G__16120 = b;
var G__16121 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16119,G__16120,G__16121) : target_fn.call(null,G__16119,G__16120,G__16121));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16122 = a;
var G__16123 = b;
var G__16124 = c;
var G__16125 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16122,G__16123,G__16124,G__16125) : self__.dispatch_fn.call(null,G__16122,G__16123,G__16124,G__16125));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16126 = a;
var G__16127 = b;
var G__16128 = c;
var G__16129 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16126,G__16127,G__16128,G__16129) : target_fn.call(null,G__16126,G__16127,G__16128,G__16129));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16130 = a;
var G__16131 = b;
var G__16132 = c;
var G__16133 = d;
var G__16134 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16130,G__16131,G__16132,G__16133,G__16134) : self__.dispatch_fn.call(null,G__16130,G__16131,G__16132,G__16133,G__16134));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16135 = a;
var G__16136 = b;
var G__16137 = c;
var G__16138 = d;
var G__16139 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16135,G__16136,G__16137,G__16138,G__16139) : target_fn.call(null,G__16135,G__16136,G__16137,G__16138,G__16139));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16140 = a;
var G__16141 = b;
var G__16142 = c;
var G__16143 = d;
var G__16144 = e;
var G__16145 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16140,G__16141,G__16142,G__16143,G__16144,G__16145) : self__.dispatch_fn.call(null,G__16140,G__16141,G__16142,G__16143,G__16144,G__16145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16146 = a;
var G__16147 = b;
var G__16148 = c;
var G__16149 = d;
var G__16150 = e;
var G__16151 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16146,G__16147,G__16148,G__16149,G__16150,G__16151) : target_fn.call(null,G__16146,G__16147,G__16148,G__16149,G__16150,G__16151));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16152 = a;
var G__16153 = b;
var G__16154 = c;
var G__16155 = d;
var G__16156 = e;
var G__16157 = f;
var G__16158 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16152,G__16153,G__16154,G__16155,G__16156,G__16157,G__16158) : self__.dispatch_fn.call(null,G__16152,G__16153,G__16154,G__16155,G__16156,G__16157,G__16158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16159 = a;
var G__16160 = b;
var G__16161 = c;
var G__16162 = d;
var G__16163 = e;
var G__16164 = f;
var G__16165 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16159,G__16160,G__16161,G__16162,G__16163,G__16164,G__16165) : target_fn.call(null,G__16159,G__16160,G__16161,G__16162,G__16163,G__16164,G__16165));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16166 = a;
var G__16167 = b;
var G__16168 = c;
var G__16169 = d;
var G__16170 = e;
var G__16171 = f;
var G__16172 = g;
var G__16173 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16166,G__16167,G__16168,G__16169,G__16170,G__16171,G__16172,G__16173) : self__.dispatch_fn.call(null,G__16166,G__16167,G__16168,G__16169,G__16170,G__16171,G__16172,G__16173));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16174 = a;
var G__16175 = b;
var G__16176 = c;
var G__16177 = d;
var G__16178 = e;
var G__16179 = f;
var G__16180 = g;
var G__16181 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16174,G__16175,G__16176,G__16177,G__16178,G__16179,G__16180,G__16181) : target_fn.call(null,G__16174,G__16175,G__16176,G__16177,G__16178,G__16179,G__16180,G__16181));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16182 = a;
var G__16183 = b;
var G__16184 = c;
var G__16185 = d;
var G__16186 = e;
var G__16187 = f;
var G__16188 = g;
var G__16189 = h;
var G__16190 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16182,G__16183,G__16184,G__16185,G__16186,G__16187,G__16188,G__16189,G__16190) : self__.dispatch_fn.call(null,G__16182,G__16183,G__16184,G__16185,G__16186,G__16187,G__16188,G__16189,G__16190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16191 = a;
var G__16192 = b;
var G__16193 = c;
var G__16194 = d;
var G__16195 = e;
var G__16196 = f;
var G__16197 = g;
var G__16198 = h;
var G__16199 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16191,G__16192,G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199) : target_fn.call(null,G__16191,G__16192,G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16200 = a;
var G__16201 = b;
var G__16202 = c;
var G__16203 = d;
var G__16204 = e;
var G__16205 = f;
var G__16206 = g;
var G__16207 = h;
var G__16208 = i;
var G__16209 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16200,G__16201,G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209) : self__.dispatch_fn.call(null,G__16200,G__16201,G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16210 = a;
var G__16211 = b;
var G__16212 = c;
var G__16213 = d;
var G__16214 = e;
var G__16215 = f;
var G__16216 = g;
var G__16217 = h;
var G__16218 = i;
var G__16219 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16210,G__16211,G__16212,G__16213,G__16214,G__16215,G__16216,G__16217,G__16218,G__16219) : target_fn.call(null,G__16210,G__16211,G__16212,G__16213,G__16214,G__16215,G__16216,G__16217,G__16218,G__16219));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16220 = a;
var G__16221 = b;
var G__16222 = c;
var G__16223 = d;
var G__16224 = e;
var G__16225 = f;
var G__16226 = g;
var G__16227 = h;
var G__16228 = i;
var G__16229 = j;
var G__16230 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16220,G__16221,G__16222,G__16223,G__16224,G__16225,G__16226,G__16227,G__16228,G__16229,G__16230) : self__.dispatch_fn.call(null,G__16220,G__16221,G__16222,G__16223,G__16224,G__16225,G__16226,G__16227,G__16228,G__16229,G__16230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16231 = a;
var G__16232 = b;
var G__16233 = c;
var G__16234 = d;
var G__16235 = e;
var G__16236 = f;
var G__16237 = g;
var G__16238 = h;
var G__16239 = i;
var G__16240 = j;
var G__16241 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16231,G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238,G__16239,G__16240,G__16241) : target_fn.call(null,G__16231,G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238,G__16239,G__16240,G__16241));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16242 = a;
var G__16243 = b;
var G__16244 = c;
var G__16245 = d;
var G__16246 = e;
var G__16247 = f;
var G__16248 = g;
var G__16249 = h;
var G__16250 = i;
var G__16251 = j;
var G__16252 = k;
var G__16253 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16242,G__16243,G__16244,G__16245,G__16246,G__16247,G__16248,G__16249,G__16250,G__16251,G__16252,G__16253) : self__.dispatch_fn.call(null,G__16242,G__16243,G__16244,G__16245,G__16246,G__16247,G__16248,G__16249,G__16250,G__16251,G__16252,G__16253));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16254 = a;
var G__16255 = b;
var G__16256 = c;
var G__16257 = d;
var G__16258 = e;
var G__16259 = f;
var G__16260 = g;
var G__16261 = h;
var G__16262 = i;
var G__16263 = j;
var G__16264 = k;
var G__16265 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16254,G__16255,G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264,G__16265) : target_fn.call(null,G__16254,G__16255,G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264,G__16265));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16266 = a;
var G__16267 = b;
var G__16268 = c;
var G__16269 = d;
var G__16270 = e;
var G__16271 = f;
var G__16272 = g;
var G__16273 = h;
var G__16274 = i;
var G__16275 = j;
var G__16276 = k;
var G__16277 = l;
var G__16278 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16266,G__16267,G__16268,G__16269,G__16270,G__16271,G__16272,G__16273,G__16274,G__16275,G__16276,G__16277,G__16278) : self__.dispatch_fn.call(null,G__16266,G__16267,G__16268,G__16269,G__16270,G__16271,G__16272,G__16273,G__16274,G__16275,G__16276,G__16277,G__16278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16279 = a;
var G__16280 = b;
var G__16281 = c;
var G__16282 = d;
var G__16283 = e;
var G__16284 = f;
var G__16285 = g;
var G__16286 = h;
var G__16287 = i;
var G__16288 = j;
var G__16289 = k;
var G__16290 = l;
var G__16291 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16279,G__16280,G__16281,G__16282,G__16283,G__16284,G__16285,G__16286,G__16287,G__16288,G__16289,G__16290,G__16291) : target_fn.call(null,G__16279,G__16280,G__16281,G__16282,G__16283,G__16284,G__16285,G__16286,G__16287,G__16288,G__16289,G__16290,G__16291));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16292 = a;
var G__16293 = b;
var G__16294 = c;
var G__16295 = d;
var G__16296 = e;
var G__16297 = f;
var G__16298 = g;
var G__16299 = h;
var G__16300 = i;
var G__16301 = j;
var G__16302 = k;
var G__16303 = l;
var G__16304 = m;
var G__16305 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16292,G__16293,G__16294,G__16295,G__16296,G__16297,G__16298,G__16299,G__16300,G__16301,G__16302,G__16303,G__16304,G__16305) : self__.dispatch_fn.call(null,G__16292,G__16293,G__16294,G__16295,G__16296,G__16297,G__16298,G__16299,G__16300,G__16301,G__16302,G__16303,G__16304,G__16305));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16306 = a;
var G__16307 = b;
var G__16308 = c;
var G__16309 = d;
var G__16310 = e;
var G__16311 = f;
var G__16312 = g;
var G__16313 = h;
var G__16314 = i;
var G__16315 = j;
var G__16316 = k;
var G__16317 = l;
var G__16318 = m;
var G__16319 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16306,G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313,G__16314,G__16315,G__16316,G__16317,G__16318,G__16319) : target_fn.call(null,G__16306,G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313,G__16314,G__16315,G__16316,G__16317,G__16318,G__16319));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16320 = a;
var G__16321 = b;
var G__16322 = c;
var G__16323 = d;
var G__16324 = e;
var G__16325 = f;
var G__16326 = g;
var G__16327 = h;
var G__16328 = i;
var G__16329 = j;
var G__16330 = k;
var G__16331 = l;
var G__16332 = m;
var G__16333 = n;
var G__16334 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16320,G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329,G__16330,G__16331,G__16332,G__16333,G__16334) : self__.dispatch_fn.call(null,G__16320,G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329,G__16330,G__16331,G__16332,G__16333,G__16334));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16335 = a;
var G__16336 = b;
var G__16337 = c;
var G__16338 = d;
var G__16339 = e;
var G__16340 = f;
var G__16341 = g;
var G__16342 = h;
var G__16343 = i;
var G__16344 = j;
var G__16345 = k;
var G__16346 = l;
var G__16347 = m;
var G__16348 = n;
var G__16349 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16335,G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345,G__16346,G__16347,G__16348,G__16349) : target_fn.call(null,G__16335,G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345,G__16346,G__16347,G__16348,G__16349));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16350 = a;
var G__16351 = b;
var G__16352 = c;
var G__16353 = d;
var G__16354 = e;
var G__16355 = f;
var G__16356 = g;
var G__16357 = h;
var G__16358 = i;
var G__16359 = j;
var G__16360 = k;
var G__16361 = l;
var G__16362 = m;
var G__16363 = n;
var G__16364 = o;
var G__16365 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360,G__16361,G__16362,G__16363,G__16364,G__16365) : self__.dispatch_fn.call(null,G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360,G__16361,G__16362,G__16363,G__16364,G__16365));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16366 = a;
var G__16367 = b;
var G__16368 = c;
var G__16369 = d;
var G__16370 = e;
var G__16371 = f;
var G__16372 = g;
var G__16373 = h;
var G__16374 = i;
var G__16375 = j;
var G__16376 = k;
var G__16377 = l;
var G__16378 = m;
var G__16379 = n;
var G__16380 = o;
var G__16381 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16366,G__16367,G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381) : target_fn.call(null,G__16366,G__16367,G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16382 = a;
var G__16383 = b;
var G__16384 = c;
var G__16385 = d;
var G__16386 = e;
var G__16387 = f;
var G__16388 = g;
var G__16389 = h;
var G__16390 = i;
var G__16391 = j;
var G__16392 = k;
var G__16393 = l;
var G__16394 = m;
var G__16395 = n;
var G__16396 = o;
var G__16397 = p;
var G__16398 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398) : self__.dispatch_fn.call(null,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16399 = a;
var G__16400 = b;
var G__16401 = c;
var G__16402 = d;
var G__16403 = e;
var G__16404 = f;
var G__16405 = g;
var G__16406 = h;
var G__16407 = i;
var G__16408 = j;
var G__16409 = k;
var G__16410 = l;
var G__16411 = m;
var G__16412 = n;
var G__16413 = o;
var G__16414 = p;
var G__16415 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16399,G__16400,G__16401,G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413,G__16414,G__16415) : target_fn.call(null,G__16399,G__16400,G__16401,G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413,G__16414,G__16415));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16416 = a;
var G__16417 = b;
var G__16418 = c;
var G__16419 = d;
var G__16420 = e;
var G__16421 = f;
var G__16422 = g;
var G__16423 = h;
var G__16424 = i;
var G__16425 = j;
var G__16426 = k;
var G__16427 = l;
var G__16428 = m;
var G__16429 = n;
var G__16430 = o;
var G__16431 = p;
var G__16432 = q;
var G__16433 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433) : self__.dispatch_fn.call(null,G__16416,G__16417,G__16418,G__16419,G__16420,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16434 = a;
var G__16435 = b;
var G__16436 = c;
var G__16437 = d;
var G__16438 = e;
var G__16439 = f;
var G__16440 = g;
var G__16441 = h;
var G__16442 = i;
var G__16443 = j;
var G__16444 = k;
var G__16445 = l;
var G__16446 = m;
var G__16447 = n;
var G__16448 = o;
var G__16449 = p;
var G__16450 = q;
var G__16451 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451) : target_fn.call(null,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442,G__16443,G__16444,G__16445,G__16446,G__16447,G__16448,G__16449,G__16450,G__16451));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16452 = a;
var G__16453 = b;
var G__16454 = c;
var G__16455 = d;
var G__16456 = e;
var G__16457 = f;
var G__16458 = g;
var G__16459 = h;
var G__16460 = i;
var G__16461 = j;
var G__16462 = k;
var G__16463 = l;
var G__16464 = m;
var G__16465 = n;
var G__16466 = o;
var G__16467 = p;
var G__16468 = q;
var G__16469 = r;
var G__16470 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16452,G__16453,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464,G__16465,G__16466,G__16467,G__16468,G__16469,G__16470) : self__.dispatch_fn.call(null,G__16452,G__16453,G__16454,G__16455,G__16456,G__16457,G__16458,G__16459,G__16460,G__16461,G__16462,G__16463,G__16464,G__16465,G__16466,G__16467,G__16468,G__16469,G__16470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16471 = a;
var G__16472 = b;
var G__16473 = c;
var G__16474 = d;
var G__16475 = e;
var G__16476 = f;
var G__16477 = g;
var G__16478 = h;
var G__16479 = i;
var G__16480 = j;
var G__16481 = k;
var G__16482 = l;
var G__16483 = m;
var G__16484 = n;
var G__16485 = o;
var G__16486 = p;
var G__16487 = q;
var G__16488 = r;
var G__16489 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481,G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489) : target_fn.call(null,G__16471,G__16472,G__16473,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479,G__16480,G__16481,G__16482,G__16483,G__16484,G__16485,G__16486,G__16487,G__16488,G__16489));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__16490 = a;
var G__16491 = b;
var G__16492 = c;
var G__16493 = d;
var G__16494 = e;
var G__16495 = f;
var G__16496 = g;
var G__16497 = h;
var G__16498 = i;
var G__16499 = j;
var G__16500 = k;
var G__16501 = l;
var G__16502 = m;
var G__16503 = n;
var G__16504 = o;
var G__16505 = p;
var G__16506 = q;
var G__16507 = r;
var G__16508 = s;
var G__16509 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497,G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509) : self__.dispatch_fn.call(null,G__16490,G__16491,G__16492,G__16493,G__16494,G__16495,G__16496,G__16497,G__16498,G__16499,G__16500,G__16501,G__16502,G__16503,G__16504,G__16505,G__16506,G__16507,G__16508,G__16509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16510 = a;
var G__16511 = b;
var G__16512 = c;
var G__16513 = d;
var G__16514 = e;
var G__16515 = f;
var G__16516 = g;
var G__16517 = h;
var G__16518 = i;
var G__16519 = j;
var G__16520 = k;
var G__16521 = l;
var G__16522 = m;
var G__16523 = n;
var G__16524 = o;
var G__16525 = p;
var G__16526 = q;
var G__16527 = r;
var G__16528 = s;
var G__16529 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16510,G__16511,G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529) : target_fn.call(null,G__16510,G__16511,G__16512,G__16513,G__16514,G__16515,G__16516,G__16517,G__16518,G__16519,G__16520,G__16521,G__16522,G__16523,G__16524,G__16525,G__16526,G__16527,G__16528,G__16529));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16531 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__16531);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4377__auto__,writer__4378__auto__,opt__4379__auto__){
return cljs.core._write(writer__4378__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__16536 = x;
var G__16537 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16536,G__16537) : pred.call(null,G__16536,G__16537));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__16538 = y;
var G__16539 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16538,G__16539) : pred.call(null,G__16538,G__16539));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$20;
} else {
return cljs.core.constant$keyword$21;
}
});
